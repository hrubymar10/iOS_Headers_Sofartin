/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSKDocumentRoot : TSPObject <TSKAccessControllerDelegate, TSKModel> {
    TSKAccessController *_accessController;
    NSMutableArray *_activityLogEntries;
    TSKAnnotationAuthorStorage *_annotationAuthorStorage;
    TSKChangeNotifier *_changeNotifier;
    TSULocale *_documentCreationLocale;
    TSULocale *_documentLocale;
    TSKDocumentSupport *_documentSupport;
    NSSet *_filteredAuthors;
    NSMutableArray *_iCloudTeardownStack;
    NSObject<OS_dispatch_queue> *_iCloudTeardownStackQueue;
    bool _isBeingLocalized;
    bool _isCollaborationLobbyOutgoingRequestsSuspended;
    bool _isFindActive;
    TSKPasteboardController *_pasteboardController;
    TSKSelectionDispatcher *_selectionDispatcher;
}

@property(assign,readonly) TSKAccessController * accessController;
@property(assign,retain) TSKAnnotationAuthorStorage * annotationAuthorStorage;
@property(assign,readonly) unsigned long long applicationType;
@property(assign,readonly) TSKChangeNotifier * changeNotifier;
@property(assign,readonly) NSString * creationLanguage;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readonly) TSULocale * documentCreationLocale;
@property(assign,readonly) TSULocale * documentLocale;
@property(assign,readonly) TSKDocumentSupport * documentSupport;
@property(assign,retain) NSSet * filteredAuthors;
@property(getter=isFindActive,assign,readwrite) bool findActive;
@property(assign,readonly) bool hasICloudConflict;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) bool isBeingLocalized;
@property(assign,retain) TSKPasteboardController * pasteboardController;
@property(assign,readonly) TSKSelectionDispatcher * selectionDispatcher;
@property(assign,readonly) TSSStylesheet * stylesheet;
@property(assign,readonly) Class superclass;
@property(assign,readonly) TSSTheme * theme;
@property(assign,readonly) unsigned long long writingDirection;
@property(assign,readonly) unsigned long long writingDirectionForStorage;

+ (bool)needsObjectUUID;

- (id)UIStateForChart:(id)arg1;
- (id)accessController;
- (long long)addObserverForICloudTeardownWithBlock:(id)arg1;
- (void)addOrUpdateAnnotationAuthorList:(id)arg1;
- (id)additionalDocumentPropertiesForWrite;
- (id)annotationAuthorStorage;
- (unsigned long long)applicationType;
- (void)changeDocumentCacheFileProtection:(id)arg1;
- (id)changeNotifier;
- (id)collaborationState;
- (id)commandForRemovingCommentsFromDrawables:(id)arg1 context:(id)arg2;
- (id)creationLanguage;
- (id)customFormatList;
- (id)dataFromDocumentCachePath:(id)arg1;
- (void)dealloc;
- (void)didAcquireReadLock;
- (void)didSaveWithEncryptionChange;
- (bool)documentCacheHasAtMostFileProtection:(id)arg1;
- (id)documentCreationLocale;
- (void)documentDidLoad;
- (bool)documentDisallowsHighlightsOnStorage:(id)arg1;
- (id)documentLocale;
- (id)documentSupport;
- (id)filteredAuthors;
- (void)gilligan_documentDidInsertObject:(id)arg1;
- (void)gilligan_documentDidRemoveObject:(id)arg1;
- (void)gilligan_documentWillInsertObject:(id)arg1;
- (void)gilligan_documentWillRemoveObject:(id)arg1;
- (bool)hasICloudConflict;
- (bool)hasICloudTeardownObserver;
- (id)initWithContext:(id)arg1;
- (bool)isBeingLocalized;
- (bool)isDirectionRightToLeft;
- (bool)isFindActive;
- (void)loadFromArchive:(const struct DocumentArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x5; struct Reference {} *x6; struct RepeatedPtrField<TSP::Reference> { void **x_7_1_1; int x_7_1_2; int x_7_1_3; int x_7_1_4; } x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x8; }*)arg1 unarchiver:(id)arg2;
- (id)makeIsolatedStyleMapper;
- (id)makeStyleMapper;
- (unsigned long long)maxMediaItemFileSize;
- (void)migrateStylesInObjects:(id)arg1;
- (id)migratedPresetForPreset:(id)arg1;
- (id)migratedPropertyMapForPropertyMap:(id)arg1;
- (id)migratedStyleForStyle:(id)arg1;
- (id)modelEnumerator;
- (id)modelEnumeratorForObjectsConformingToProtocol:(id)arg1;
- (id)modelEnumeratorForObjectsOfClass:(Class)arg1;
- (id)modelEnumeratorForObjectsPassingTest:(id)arg1;
- (id)modelEnumeratorForObjectsRespondingToSelector:(SEL)arg1;
- (id)modelEnumeratorWithFlags:(unsigned long long)arg1;
- (id)modelEnumeratorWithFlags:(unsigned long long)arg1 forObjectsConformingToProtocol:(id)arg2;
- (id)modelEnumeratorWithFlags:(unsigned long long)arg1 forObjectsOfClass:(Class)arg2;
- (id)modelEnumeratorWithFlags:(unsigned long long)arg1 forObjectsPassingTest:(id)arg2;
- (id)modelEnumeratorWithFlags:(unsigned long long)arg1 forObjectsRespondingToSelector:(SEL)arg2;
- (struct CGImageSource { }*)newImageSourceForDocumentCachePath:(id)arg1;
- (void)notifyICloudTeardownObservers;
- (id)pasteboardController;
- (void)pauseRecalculation;
- (void)pauseRecalculationForBlock:(id)arg1;
- (void)removeCommentsFromDrawables:(id)arg1;
- (void)removeICloudTeardownObserver:(long long)arg1;
- (void)resumeRecalculation;
- (void)saveToArchive:(struct DocumentArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x5; struct Reference {} *x6; struct RepeatedPtrField<TSP::Reference> { void **x_7_1_1; int x_7_1_2; int x_7_1_3; int x_7_1_4; } x7; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x8; }*)arg1 archiver:(id)arg2;
- (id)selectionDispatcher;
- (void)setAnnotationAuthorStorage:(id)arg1;
- (void)setFilteredAuthors:(id)arg1;
- (void)setFindActive:(bool)arg1;
- (void)setPasteboardController:(id)arg1;
- (void)setStylesheet:(id)arg1 andThemeForImport:(id)arg2;
- (void)setStylesheetForUpgradeToSingleStylesheet:(id)arg1;
- (void)setTheme:(id)arg1;
- (void)setThemeForTemplateImport:(id)arg1;
- (void)setUIState:(id)arg1 forChart:(id)arg2;
- (bool)shouldShowComments;
- (id)stylesheet;
- (id)theme;
- (Class)thumbnailImagerClass;
- (id)uniqueDocumentCachePathForProposedPath:(id)arg1;
- (void)updateDocumentLocaleToCurrent;
- (void)updateDocumentLocaleToUseLanguage:(id)arg1;
- (void)updateForNonCommandChangesWithWriteLock:(id)arg1;
- (void)willClose;
- (void)willRelinquishReadLock;
- (bool)writeData:(id)arg1 atDocumentCachePath:(id)arg2;
- (unsigned long long)writingDirection;
- (unsigned long long)writingDirectionForStorage;

@end
