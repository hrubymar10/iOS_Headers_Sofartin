/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCHLegendCellModelCache : NSObject {
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } mBadgeFillFrame;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } mBadgeFrame;
    int mBadgeType;
    struct CGSize { 
        double width; 
        double height; 
    } mCellSize;
    double mEffectiveStrokeWidth;
    double mEffectiveSymbolStrokeWidth;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } mLabelFrame;
    NSString *mLabelString;
    int mLegendCellType;
    int mLineType;
    TSCHChartSeries *mSeries;
    unsigned long long mSeriesIndex;
    TSDStroke *mStroke;
    TSDStroke *mSymbolStroke;
    int mSymbolType;
}

@property(assign,readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } badgeFillFrame;
@property(assign,readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } badgeFrame;
@property(assign,readonly) int badgeType;
@property(assign,readonly) int cellType;
@property(assign,readonly) double effectiveStrokeWidth;
@property(assign,readonly) double effectiveSymbolStrokeWidth;
@property(assign,readonly) id fill;
@property(assign,readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } labelFrame;
@property(assign,readonly) NSString * labelString;
@property(assign,readonly) int lineType;
@property(assign,readonly) TSCHChartSeries * series;
@property(assign,readonly) unsigned long long seriesIndex;
@property(assign,readonly) struct CGSize { double x1; double x2; } size;
@property(assign,readonly) TSDStroke * stroke;
@property(assign,readonly) id symbolFill;
@property(assign,readonly) TSDStroke * symbolStroke;
@property(assign,readonly) int symbolType;

- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })badgeFillFrame;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })badgeFrame;
- (int)badgeType;
- (int)cellType;
- (void)dealloc;
- (double)effectiveStrokeWidth;
- (double)effectiveSymbolStrokeWidth;
- (id)fill;
- (id)initWithChartModel:(id)arg1 cellType:(int)arg2 seriesIndex:(unsigned long long)arg3 withMetrics:(id)arg4 overrideLabel:(id)arg5;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })labelFrame;
- (id)labelString;
- (int)lineType;
- (id)series;
- (unsigned long long)seriesIndex;
- (struct CGSize { double x1; double x2; })size;
- (id)stroke;
- (id)symbolFill;
- (id)symbolStroke;
- (int)symbolType;

@end
