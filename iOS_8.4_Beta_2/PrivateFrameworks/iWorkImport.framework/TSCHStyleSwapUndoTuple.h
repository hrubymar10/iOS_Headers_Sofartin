/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSCHStyleSwapUndoTuple : NSObject {
    unsigned long long mIndex;
    TSSPropertySet *mMutatedProperties;
    TSSStyle *mNewValue;
    TSSStyle *mOldValue;
    NSUUID *mRefLineUUID;
    TSPObject<TSCHStyleSwapSupporting> *mStyleSwapSupporting;
    int mSwapType;
}

@property(assign,readonly) TSSStyle * afterValue;
@property(assign,readonly) TSSStyle * beforeValue;
@property(assign,readonly) TSSPropertyMap * forwardDelta;
@property(assign,readonly) unsigned long long index;
@property(assign,readonly) TSSPropertySet * mutatedProperties;
@property(assign,readonly) NSUUID * refLineUUID;
@property(assign,readonly) TSSPropertyMap * reverseDelta;
@property(assign,readonly) TSCHStyleSemanticTag * semanticTag;
@property(assign,readonly) TSCHStyleOwnerReference * styleOwnerReference;
@property(assign,retain) TSPObject<TSCHStyleSwapSupporting> * styleSwapSupporting;
@property(assign,readonly) int swapType;

- (id)afterValue;
- (id)beforeValue;
- (bool)canApplyTupleToStyleSwapSupporting:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)forwardDelta;
- (unsigned long long)hash;
- (unsigned long long)index;
- (id)initWithArchive:(const struct StyleSwapUndoTupleArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct Reference {} *x5; int x6; unsigned int x7; struct Reference {} *x8; struct Reference {} *x9; struct UUID {} *x10; }*)arg1 unarchiver:(id)arg2;
- (id)initWithChartInfo:(id)arg1 swapType:(int)arg2 index:(unsigned long long)arg3 oldValue:(id)arg4 newValue:(id)arg5;
- (id)initWithChartInfo:(id)arg1 swapType:(int)arg2 index:(unsigned long long)arg3 oldValue:(id)arg4 newValue:(id)arg5 refLineUUID:(id)arg6;
- (id)initWithChartStylePreset:(id)arg1 swapType:(int)arg2 index:(unsigned long long)arg3 oldValue:(id)arg4 newValue:(id)arg5;
- (id)inverse;
- (bool)isEqual:(id)arg1;
- (bool)isSwappingSameStyleObject:(id)arg1;
- (bool)isSwappingSameStyleValues:(id)arg1;
- (id)mutatedProperties;
- (id)p_deltaFrom:(id)arg1 to:(id)arg2;
- (id)p_initWithPersistentStyleSwapSupporting:(id)arg1 swapType:(int)arg2 index:(unsigned long long)arg3 oldValue:(id)arg4 newValue:(id)arg5 refLineUUID:(id)arg6;
- (id)p_nonequalPropertiesFromMap:(id)arg1 toMap:(id)arg2;
- (id)refLineUUID;
- (id)reverseDelta;
- (void)saveToArchive:(struct StyleSwapUndoTupleArchive { int (**x1)(); struct UnknownFieldSet { struct vector<google::protobuf::UnknownField, std::__1::allocator<google::protobuf::UnknownField> > {} *x_2_1_1; } x2; unsigned int x3[1]; int x4; struct Reference {} *x5; int x6; unsigned int x7; struct Reference {} *x8; struct Reference {} *x9; struct UUID {} *x10; }*)arg1 archiver:(id)arg2;
- (id)semanticTag;
- (id)styleOwnerReference;
- (id)styleSwapSupporting;
- (int)swapType;

@end
