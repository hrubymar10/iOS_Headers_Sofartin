/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CarKit.framework/CarKit
 */

@interface CRVehicle : NSObject <NSSecureCoding> {
    NSString *_bluetoothAddress;
    NSString *_carplayWiFiUUID;
    NSData *_certificateSerialNumber;
    NSUUID *_identifier;
    unsigned long long _pairingStatus;
    NSString *_vehicleName;
}

@property(assign,retain) NSString * bluetoothAddress;
@property(assign,retain) NSString * carplayWiFiUUID;
@property(assign,retain) NSData * certificateSerialNumber;
@property(assign,retain) NSUUID * identifier;
@property(assign,readonly) bool isPaired;
@property(assign,readwrite) unsigned long long pairingStatus;
@property(assign,retain) NSString * vehicleName;

+ (bool)supportsSecureCoding;
+ (id)vehicleForVehicleAccessory:(id)arg1;

- (void).cxx_destruct;
- (id)_pairingDebugDescription;
- (id)bluetoothAddress;
- (id)carplayWiFiUUID;
- (id)certificateSerialNumber;
- (id)description;
- (id)displayName;
- (void)encodeWithCoder:(id)arg1;
- (id)identifier;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithIdentifier:(id)arg1 certificateSerial:(id)arg2;
- (bool)isPaired;
- (void)mergeAttributesFromVehicle:(id)arg1;
- (unsigned long long)pairingStatus;
- (void)setBluetoothAddress:(id)arg1;
- (void)setCarplayWiFiUUID:(id)arg1;
- (void)setCertificateSerialNumber:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setPairingStatus:(unsigned long long)arg1;
- (void)setVehicleName:(id)arg1;
- (id)vehicleName;

@end
