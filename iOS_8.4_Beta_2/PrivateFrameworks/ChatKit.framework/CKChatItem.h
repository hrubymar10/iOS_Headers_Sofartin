/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKChatItem : NSObject {
    IMTranscriptChatItem *_imChatItem;
    double _maxWidth;
    struct CGSize { 
        double width; 
        double height; 
    } _size;
    bool _sizeLoaded;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _textAlignmentInsets;
    NSAttributedString *_transcriptDrawerText;
    NSAttributedString *_transcriptText;
}

@property(assign,retain) IMTranscriptChatItem * IMChatItem;
@property(assign,readonly) unsigned char attachmentContiguousType;
@property(assign,readonly) bool canCopy;
@property(assign,readonly) bool canDelete;
@property(assign,readonly) bool canExport;
@property(assign,readonly) bool canForward;
@property(assign,readonly) bool canSendAsTextMessage;
@property(assign,readonly) Class cellClass;
@property(assign,copy) NSString * cellIdentifier;
@property(assign,retain) UIImage * contactImage;
@property(assign,readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } contentInsets;
@property(assign,readonly) unsigned char contiguousType;
@property(assign,readonly) bool displayDuringSend;
@property(assign,readonly) bool hasTail;
@property(assign,readonly) bool isEditable;
@property(assign,readwrite) double maxWidth;
@property(assign,readonly) struct CGSize { double x1; double x2; } size;
@property(getter=isSizeLoaded,assign,readwrite) bool sizeLoaded;
@property(assign,readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } textAlignmentInsets;
@property(assign,copy) NSAttributedString * transcriptDrawerText;
@property(assign,readonly) BOOL transcriptOrientation;
@property(assign,copy) NSAttributedString * transcriptText;
@property(assign,readonly) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } transcriptTextAlignmentInsets;
@property(assign,readonly) bool wantsDrawerLayout;

+ (id)chatItemWithIMChatItem:(id)arg1 rightBalloonMaxWidth:(double)arg2 leftBalloonMaxWidth:(double)arg3 otherMaxWidth:(double)arg4;

- (id)IMChatItem;
- (unsigned char)attachmentContiguousType;
- (bool)canCopy;
- (bool)canDelete;
- (bool)canExport;
- (bool)canForward;
- (bool)canSave;
- (bool)canSendAsTextMessage;
- (Class)cellClass;
- (id)cellIdentifier;
- (id)contactImage;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })contentInsets;
- (unsigned char)contiguousType;
- (void)dealloc;
- (id)description;
- (bool)displayDuringSend;
- (bool)hasTail;
- (id)initWithIMChatItem:(id)arg1 maxWidth:(double)arg2;
- (bool)isEditable;
- (bool)isEqual:(id)arg1;
- (bool)isSizeLoaded;
- (struct CGSize { double x1; double x2; })loadSizeThatFits:(struct CGSize { double x1; double x2; })arg1 textAlignmentInsets:(out struct UIEdgeInsets { double x1; double x2; double x3; double x4; }*)arg2;
- (id)loadTranscriptDrawerText;
- (id)loadTranscriptText;
- (double)maxWidth;
- (void)setIMChatItem:(id)arg1;
- (void)setMaxWidth:(double)arg1;
- (void)setSizeLoaded:(bool)arg1;
- (void)setTranscriptDrawerText:(id)arg1;
- (void)setTranscriptText:(id)arg1;
- (struct CGSize { double x1; double x2; })size;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })textAlignmentInsets;
- (id)transcriptDrawerText;
- (BOOL)transcriptOrientation;
- (id)transcriptText;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })transcriptTextAlignmentInsets;
- (void)unloadSize;
- (void)unloadTranscriptText;
- (bool)wantsDrawerLayout;

@end
