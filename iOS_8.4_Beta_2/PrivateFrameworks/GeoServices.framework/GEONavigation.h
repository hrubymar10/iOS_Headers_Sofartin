/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEONavigation : NSObject {
    NSLock *_connectionLock;
    <GEONavigationDelegate> *_delegate;
    GEONavigationDetails *_details;
    NSObject<OS_xpc_object> *_geodConnection;
    bool _hasNavigationStartedToken;
    NSData *_lastSentRouteContext;
    NSXPCConnection *_nanomapscdConnection;
    int _navigationStartedToken;
    bool _shouldSendRouteWithStatus;
}

@property(assign,readwrite) unsigned long long announcementStage;
@property(assign,readwrite) <GEONavigationDelegate> * delegate;
@property(assign,readonly) NSString * destinationName;
@property(assign,readonly) double distanceRemainingOnRoute;
@property(assign,readonly) double distanceToManeuverEnd;
@property(assign,readonly) double distanceToManeuverStart;
@property(assign,readonly) double distanceToRoute;
@property(assign,readonly) bool isNavigating;
@property(assign,readonly) GEOLocation * location;
@property(assign,readonly) bool locationUnreliable;
@property(assign,readwrite) int navigationState;
@property(assign,readwrite) int navigationTransportType;
@property(assign,readonly) unsigned long long nextAnnouncementStage;
@property(assign,readonly) double remainingTime;
@property(assign,readonly) GEOComposedRoute * route;
@property(assign,readonly) GEORouteMatch * routeMatch;
@property(assign,readonly) double timeUntilNextAnnouncement;

+ (id)sharedInstance;

- (void)_closeGeodConnection;
- (void)_closeNanomapscdConnection;
- (void)_createGeodConnection;
- (void)_createNanomapscdConnection;
- (void)_invalidateNavigationSessionWithRouteContext:(id)arg1;
- (void)_sendMessage:(id)arg1 data:(id)arg2;
- (void)_setNeedsNavigationStatusUpdate;
- (void)_updateNavigationRouteDetails:(id)arg1 routeStatus:(id)arg2 routeContext:(id)arg3;
- (void)_updateNavigationRouteStatus;
- (unsigned long long)announcementStage;
- (void)clearRoute;
- (void)dealloc;
- (id)delegate;
- (id)destinationName;
- (double)distanceRemainingOnRoute;
- (double)distanceToManeuverEnd;
- (double)distanceToManeuverStart;
- (double)distanceToRoute;
- (void)endNavigation;
- (id)init;
- (bool)isNavigating;
- (id)location;
- (bool)locationUnreliable;
- (int)navigationState;
- (int)navigationTransportType;
- (unsigned long long)nextAnnouncementStage;
- (void)recalculatedToRoute:(id)arg1 location:(id)arg2 routeMatch:(id)arg3;
- (double)remainingTime;
- (id)route;
- (id)routeMatch;
- (void)setAnnouncementStage:(unsigned long long)arg1;
- (void)setDelegate:(id)arg1;
- (void)setNavigationState:(int)arg1;
- (void)setNavigationTransportType:(int)arg1;
- (void)setNextAnnouncementStage:(unsigned long long)arg1 andTime:(double)arg2;
- (void)setRoute:(id)arg1 toDestinationName:(id)arg2;
- (void)startNavigationForTransportType:(int)arg1 state:(int)arg2;
- (double)timeUntilNextAnnouncement;
- (void)updateLocation:(id)arg1 routeMatch:(id)arg2 etaRoute:(id)arg3 locationUnreliable:(bool)arg4;
- (void)updatedETA:(id)arg1;

@end
