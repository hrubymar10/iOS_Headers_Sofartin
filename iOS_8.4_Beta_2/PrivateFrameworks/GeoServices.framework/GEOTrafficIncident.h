/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOTrafficIncident : PBCodable <NSCopying> {
    double _endTime;
    struct { 
        unsigned int endTime : 1; 
        unsigned int lastUpdated : 1; 
        unsigned int startTime : 1; 
        unsigned int uID : 1; 
        unsigned int type : 1; 
        unsigned int vertexCount : 1; 
        unsigned int vertexOffset : 1; 
    } _has;
    NSString *_info;
    double _lastUpdated;
    NSString *_location;
    double _startTime;
    NSString *_title;
    int _type;
    long long _uID;
    int _vertexCount;
    int _vertexOffset;
}

@property(assign,readwrite) double endTime;
@property(assign,readwrite) bool hasEndTime;
@property(assign,readonly) bool hasInfo;
@property(assign,readwrite) bool hasLastUpdated;
@property(assign,readonly) bool hasLocation;
@property(assign,readwrite) bool hasStartTime;
@property(assign,readonly) bool hasTitle;
@property(assign,readwrite) bool hasType;
@property(assign,readwrite) bool hasUID;
@property(assign,readwrite) bool hasVertexCount;
@property(assign,readwrite) bool hasVertexOffset;
@property(assign,retain) NSString * info;
@property(assign,readwrite) double lastUpdated;
@property(assign,retain) NSString * location;
@property(assign,readwrite) double startTime;
@property(assign,retain) NSString * title;
@property(assign,readwrite) int type;
@property(assign,readwrite) long long uID;
@property(assign,readwrite) int vertexCount;
@property(assign,readwrite) int vertexOffset;

- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (double)endTime;
- (bool)hasEndTime;
- (bool)hasInfo;
- (bool)hasLastUpdated;
- (bool)hasLocation;
- (bool)hasStartTime;
- (bool)hasTitle;
- (bool)hasType;
- (bool)hasUID;
- (bool)hasVertexCount;
- (bool)hasVertexOffset;
- (unsigned long long)hash;
- (id)info;
- (bool)isEqual:(id)arg1;
- (double)lastUpdated;
- (id)location;
- (void)mergeFrom:(id)arg1;
- (bool)readFrom:(id)arg1;
- (void)setEndTime:(double)arg1;
- (void)setHasEndTime:(bool)arg1;
- (void)setHasLastUpdated:(bool)arg1;
- (void)setHasStartTime:(bool)arg1;
- (void)setHasType:(bool)arg1;
- (void)setHasUID:(bool)arg1;
- (void)setHasVertexCount:(bool)arg1;
- (void)setHasVertexOffset:(bool)arg1;
- (void)setInfo:(id)arg1;
- (void)setLastUpdated:(double)arg1;
- (void)setLocation:(id)arg1;
- (void)setStartTime:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setType:(int)arg1;
- (void)setUID:(long long)arg1;
- (void)setVertexCount:(int)arg1;
- (void)setVertexOffset:(int)arg1;
- (double)startTime;
- (id)title;
- (int)type;
- (long long)uID;
- (int)vertexCount;
- (int)vertexOffset;
- (void)writeTo:(id)arg1;

@end
