/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEOVPointCharacteristic : PBCodable <NSCopying> {
    bool _brunnelEntry;
    bool _castShadow;
    bool _cropped;
    struct { 
        unsigned int roadLaneCount : 1; 
        unsigned int roadOffset : 1; 
        unsigned int sectionIndex : 1; 
        unsigned int vertexIndex : 1; 
        unsigned int zLevel : 1; 
        unsigned int brunnelEntry : 1; 
        unsigned int castShadow : 1; 
        unsigned int cropped : 1; 
        unsigned int shouldDrawLanes : 1; 
    } _has;
    GEOVLaneCharacteristic *_laneCharacteristic;
    int _roadLaneCount;
    int _roadOffset;
    int _sectionIndex;
    bool _shouldDrawLanes;
    int _vertexIndex;
    int _zLevel;
}

@property(assign,readwrite) bool brunnelEntry;
@property(assign,readwrite) bool castShadow;
@property(assign,readwrite) bool cropped;
@property(assign,readwrite) bool hasBrunnelEntry;
@property(assign,readwrite) bool hasCastShadow;
@property(assign,readwrite) bool hasCropped;
@property(assign,readonly) bool hasLaneCharacteristic;
@property(assign,readwrite) bool hasRoadLaneCount;
@property(assign,readwrite) bool hasRoadOffset;
@property(assign,readwrite) bool hasSectionIndex;
@property(assign,readwrite) bool hasShouldDrawLanes;
@property(assign,readwrite) bool hasVertexIndex;
@property(assign,readwrite) bool hasZLevel;
@property(assign,retain) GEOVLaneCharacteristic * laneCharacteristic;
@property(assign,readwrite) int roadLaneCount;
@property(assign,readwrite) int roadOffset;
@property(assign,readwrite) int sectionIndex;
@property(assign,readwrite) bool shouldDrawLanes;
@property(assign,readwrite) int vertexIndex;
@property(assign,readwrite) int zLevel;

- (bool)brunnelEntry;
- (bool)castShadow;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)cropped;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasBrunnelEntry;
- (bool)hasCastShadow;
- (bool)hasCropped;
- (bool)hasLaneCharacteristic;
- (bool)hasRoadLaneCount;
- (bool)hasRoadOffset;
- (bool)hasSectionIndex;
- (bool)hasShouldDrawLanes;
- (bool)hasVertexIndex;
- (bool)hasZLevel;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)laneCharacteristic;
- (bool)readFrom:(id)arg1;
- (int)roadLaneCount;
- (int)roadOffset;
- (int)sectionIndex;
- (void)setBrunnelEntry:(bool)arg1;
- (void)setCastShadow:(bool)arg1;
- (void)setCropped:(bool)arg1;
- (void)setHasBrunnelEntry:(bool)arg1;
- (void)setHasCastShadow:(bool)arg1;
- (void)setHasCropped:(bool)arg1;
- (void)setHasRoadLaneCount:(bool)arg1;
- (void)setHasRoadOffset:(bool)arg1;
- (void)setHasSectionIndex:(bool)arg1;
- (void)setHasShouldDrawLanes:(bool)arg1;
- (void)setHasVertexIndex:(bool)arg1;
- (void)setHasZLevel:(bool)arg1;
- (void)setLaneCharacteristic:(id)arg1;
- (void)setRoadLaneCount:(int)arg1;
- (void)setRoadOffset:(int)arg1;
- (void)setSectionIndex:(int)arg1;
- (void)setShouldDrawLanes:(bool)arg1;
- (void)setVertexIndex:(int)arg1;
- (void)setZLevel:(int)arg1;
- (bool)shouldDrawLanes;
- (int)vertexIndex;
- (void)writeTo:(id)arg1;
- (int)zLevel;

@end
