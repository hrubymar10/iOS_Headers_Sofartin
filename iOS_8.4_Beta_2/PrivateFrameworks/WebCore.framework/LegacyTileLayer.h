/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@interface LegacyTileLayer : CALayer {
    unsigned int _paintCount;
    struct LegacyTileGrid { struct LegacyTileCache {} *x1; struct RetainPtr<CALayer> { void *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > >, WTF::IntPointHash, WTF::HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > >::KeyValuePairTraits, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; } *_tileGrid;
}

@property(assign,readwrite) unsigned int paintCount;
@property(assign,readwrite) struct LegacyTileGrid { struct LegacyTileCache {} *x1; struct RetainPtr<CALayer> { void *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; /* Warning: unhandled struct encoding: '{HashMap<WebCore::IntPoint' */ struct x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void* x17[ /* ? */ ]; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; long long x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; short x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; long long x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; double x55; short x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; short x64; void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; void*x71; long long x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; double x79; long long x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; const void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; const void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; double x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; unsigned short x149; void*x150; short x151; void*x152; void*x153; void*x154; void*x155; unsigned long x156; int x157; unsigned int x158/* : ? */; const void*x159; const void*x160; void*x161; void*x162; const int x163; void x164; void*x165; void*x166; void*x167; void*x168; const void*x169; void*x170; void*x171; void*x172; out const void*x173; short x174; void*x175; bool x176; void*x177; long x178; long x179; void*x180; void*x181; int x182; in long doublex183; int x184; short x185; void*x186; const int x187; unsigned int x188/* : ? */; void*x189; void*x190; out const unsigned char x191; out void*x192; void*x193; void*x194; in int x195; out in void*x196; float x197; const void*x198; void*x199; void*x200; void*x201; out const void*x202; void*x203; bool x204; void*x205; long x206; long x207; void*x208; void*x209; int x210; in long doublex211; int x212; short x213; void*x214; const int x215; unsigned int x216/* : ? */; void*x217; void*x218; out const unsigned char x219; out void*x220; void*x221; void*x222; in int x223; out in void*x224; void*x225; void*x226; void*x227; void*x228; void*x229; void*x230; void*x231; void*x232; void*x233; void*x234; void*x235; void*x236; void*x237; void*x238; void*x239; void*x240; void*x241; void*x242; void*x243; void*x244; void*x245; void*x246; void*x247; void*x248; void*x249; void*x250; void*x251; unsigned short x252; void*x253; short x254; void*x255; void*x256; void*x257; void*x258; unsigned long x259; int x260; unsigned int x261/* : ? */; const void*x262; const void*x263; void*x264; void*x265; const int x266; void x267; void*x268; void*x269; void*x270; void*x271; const void*x272; void*x273; void*x274; void*x275; out const void*x276; short x277; void*x278; void*x279; void*x280; void*x281; void*x282; void*x283; int x284; void*x285; unsigned short x286; void*x287; const void x288; int x289; BOOL x290; void*x291; short x292; void*x293; float x294; const void*x295; void*x296; void*x297; void*x298; out const void*x299; void*x300; void*x301; const void*x302; void*x303; void*x304; void*x305; out const void*x306; short x307; void*x308; void*x309; unsigned char x310; out in float x311; void*x312; const void*x313; in BOOL x314; void*x315; void*x316; float x317; const void*x318; void*x319; void*x320; void*x321; out const void*x322; void*x323; void*x324; unsigned char x325; out in float x326; void*x327; const void*x328; in BOOL x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; void*x345; void*x346; void*x347; void*x348; void*x349; void*x350; void*x351; void*x352; void*x353; void*x354; short x355; void*x356; void*x357; void*x358; void*x359; void*x360; void*x361; long long x362; void*x363; void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; const void*x370; void*x371; void*x372; void*x373; id x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; long long x385; void*x386; void*x387; void*x388; void*x389; void*x390; void*x391; void*x392; short x393; void*x394; void*x395; void*x396; void*x397; void*x398; void*x399; void*x400; long long x401; void*x402; void*x403; void*x404; void*x405; void*x406; void*x407; void*x408; const void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; const void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; const void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; void*x433; void*x434; void*x435; void*x436; void*x437; void*x438; void*x439; void*x440; void*x441; void*x442; void*x443; void*x444; void*x445; void*x446; void*x447; void*x448; void*x449; void*x450; void*x451; void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; in void*x475; void*x476; const int x477; void x478; void*x479; void*x480; void*x481; void*x482; void x483; void*x484; const void*x485; void*x486; out unsigned int x487/* : ? */; int x488; long x489; void*x490; void*x491; unsigned char x492; out in void*x493; void*x494; int x495; in void*x496; const short x497; void*x498; bool x499; void*x500; in double x501; long x502; void*x503; void*x504; void*x505; void*x506; long x507; int x508; BOOL x509; void*x510; void*x511; int x512; out in void*x513; void*x514; void*x515; void*x516; void*x517; void*x518; unsigned char x519; void*x520; void*x521; bool x522; long doublex523; bool x524; void*x525; void*x526; void*x527; bool x528; void*x529; void*x530; bool x531; void*x532; void*x533; void*x534; void*x535; void*x536; unsigned char x537; void*x538; void*x539; void*x540; void*x541; unsigned char x542; void*x543; void*x544; void*x545; void*x546; bycopy unsigned char x547; void*x548; void*x549; in void*x550; int x551; void*x552; void*x553; void*x554; void*x555; void*x556; void*x557; void*x558; bycopy unsigned char x559; void*x560; void*x561; in void*x562; int x563; void*x564; void*x565; void*x566; void*x567; void*x568; void*x569; void*x570; void*x571; void*x572; void*x573; void*x574; void*x575; void*x576; void*x577; void*x578; void*x579; void*x580; void*x581; void*x582; void*x583; void*x584; void*x585; void*x586; void*x587; void*x588; void*x589; void*x590; void*x591; void*x592; void*x593; void*x594; void*x595; void*x596; void*x597; void*x598; void*x599; long long x600; void*x601; void*x602; void*x603; void*x604; void*x605; void*x606; void*x607; void*x608; void*x609; void x610; void*x611; void*x612; void*x613; void*x614; void*x615; void*x616; void*x617; void*x618; void*x619; void*x620; void*x621; void*x622; id x623; bycopy void*x624; long long x625; void*x626; void*x627; void*x628; void*x629; void*x630; void*x631; void*x632; void*x633; void*x634; void*x635; void*x636; void*x637; void*x638; void*x639; void*x640; const void*x641; void*x642; void*x643; void*x644; void*x645; void*x646; void*x647; long doublex648; void*x649; void*x650; void*x651; void*x652; void*x653; char *x654; void*x655; long doublex656; void*x657; void*x658; void*x659; void*x660; void*x661; unsigned long x662; void*x663; long doublex664; void*x665; void*x666; void*x667; void*x668; void*x669; void*x670; void*x671; void*x672; void*x673; void*x674; void*x675; void*x676; void*x677; void*x678; void*x679; void*x680; void*x681; void*x682; void*x683; void*x684; void*x685; void*x686; void*x687; void*x688; void*x689; void*x690; void*x691; void*x692; void*x693; void*x694; void*x695; void*x696; void*x697; void*x698; void*x699; void*x700; void*x701; void*x702; void*x703; void*x704; void*x705; void*x706; void*x707; void*x708; void*x709; void*x710; unsigned short x711; void*x712; short x713; void*x714; void*x715; void*x716; void*x717; unsigned long x718; int x719; unsigned int x720/* : ? */; const void*x721; const void*x722; void*x723; void*x724; const int x725; void x726; void*x727; void*x728; void*x729; void*x730; const void*x731; void*x732; void*x733; void*x734; out const void*x735; short x736; void*x737; void*x738; void*x739; void*x740; void*x741; void*x742; int x743; void*x744; unsigned short x745; void*x746; const void x747; int x748; BOOL x749; void*x750; short x751; void*x752; float x753; const void*x754; void*x755; void*x756; void*x757; out const void*x758; void*x759; void*x760; const void*x761; void*x762; void*x763; void*x764; out const void*x765; short x766; void*x767; oneway int x768; BOOL x769; void*x770; const out void*x771; void*x772; const void*x773; BOOL x774; void*x775; void*x776; float x777; const void*x778; void*x779; void*x780; void*x781; out const void*x782; void*x783; oneway int x784; BOOL x785; void*x786; const out void*x787; void*x788; const void*x789; BOOL x790; void*x791; void*x792; void*x793; void*x794; void*x795; void*x796; void*x797; void*x798; void*x799; void*x800; void*x801; void*x802; void*x803; void*x804; void*x805; void*x806; void*x807; void*x808; void*x809; void*x810; void*x811; void*x812; void*x813; void*x814; struct x815; void*x816; void*x817; void*x818; void*x819; void*x820; in void*x821; short x822; void*x823; int x824; void*x825; void*x826; void*x827; in void*x828; void*x829; void*x830; double x831; void*x832; void*x833; void*x834; long x835; void*x836; out void*x837; in void*x838; void*x839; void*x840; void*x841; void*x842; long x843; void*x844; out void*x845; in void*x846; void*x847; void*x848; void*x849; void*x850; void*x851; void*x852; void*x853; void*x854; void*x855; void*x856; void*x857; void*x858; void*x859; void*x860; in void*x861; short x862; void*x863; int x864; void*x865; void*x866; void*x867; in void*x868; void*x869; void*x870; double x871; void*x872; void*x873; void*x874; long x875; void*x876; out void*x877; in void*x878; void*x879; void*x880; void*x881; void*x882; long x883; void*x884; out void*x885; in void*x886; void*x887; void*x888; void*x889; void*x890; void*x891; void*x892; void*x893; void*x894; void*x895; void*x896; void*x897; void*x898; }* tileGrid; /* unknown property attribute:  WTF::RefPtr<WebCore::LegacyTileGridTile> >}iiii}}{IntRect={IntPoint=ii}{IntSize=ii}}} */

+ (id)layerBeingPainted;

- (id)actionForKey:(id)arg1;
- (void)drawInContext:(struct CGContext { }*)arg1;
- (void)layoutSublayers;
- (unsigned int)paintCount;
- (void)setNeedsDisplayInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setPaintCount:(unsigned int)arg1;
- (void)setTileGrid:(struct LegacyTileGrid { struct LegacyTileCache {} *x1; struct RetainPtr<CALayer> { void *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > >, WTF::IntPointHash, WTF::HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > >::KeyValuePairTraits, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; }*)arg1;
- (struct LegacyTileGrid { struct LegacyTileCache {} *x1; struct RetainPtr<CALayer> { void *x_2_1_1; } x2; struct IntPoint { int x_3_1_1; int x_3_1_2; } x3; struct IntSize { int x_4_1_1; int x_4_1_2; } x4; float x5; struct HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > > { struct HashTable<WebCore::IntPoint, WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> >, WTF::KeyValuePairKeyExtractor<WTF::KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > >, WTF::IntPointHash, WTF::HashMap<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile>, WTF::IntPointHash, WTF::HashTraits<WebCore::IntPoint>, WTF::HashTraits<WTF::RefPtr<WebCore::LegacyTileGridTile> > >::KeyValuePairTraits, WTF::HashTraits<WebCore::IntPoint> > { struct KeyValuePair<WebCore::IntPoint, WTF::RefPtr<WebCore::LegacyTileGridTile> > {} *x_1_2_1; int x_1_2_2; int x_1_2_3; int x_1_2_4; int x_1_2_5; } x_6_1_1; } x6; struct IntRect { struct IntPoint { int x_1_2_1; int x_1_2_2; } x_7_1_1; struct IntSize { int x_2_2_1; int x_2_2_2; } x_7_1_2; } x7; }*)tileGrid;

@end
