/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/Parsec.framework/Parsec
 */

@interface PRSSearchSession : NSObject <PRSImageSource, PRSResourceProvider> {
    NSMutableSet *_cachedResults;
    NSMutableSet *_cachedWebResults;
    <PRSSessionController> *_client;
    NSObject<OS_dispatch_queue> *_clientQueue;
    bool _enableFeedbackDebugLogging;
    NSMutableArray *_feedback;
    NSObject<OS_dispatch_group> *_feedbackGroup;
    NSMutableSet *_feedbackTasks;
    NSString *_fteLearnMoreString;
    NSString *_fteLocString;
    double _lastQueryTime;
    NSString *_lookupFirstUseDescription1;
    NSString *_lookupFirstUseDescription2;
    double _retryAfter;
    double _sessionStartTime;
    NSArray *_supportedServices;
    NSString *_userAgent;
    bool _valid;
}

@property(assign,retain) NSObject<OS_dispatch_queue> * clientQueue;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readwrite) bool enableFeedbackDebugLogging;
@property(assign,readonly) NSString * fteLearnMoreString;
@property(assign,readonly) NSString * fteLocString;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) NSString * lookupFirstUseDescription1;
@property(assign,readonly) NSString * lookupFirstUseDescription2;
@property(assign,readwrite) double retryAfter;
@property(assign,readonly) double searchRenderTimeout;
@property(assign,readwrite) double sessionStartTime;
@property(assign,readonly) Class superclass;
@property(assign,readonly) NSArray * supportedServices;
@property(getter=isValid,assign,readonly) bool valid;

- (void).cxx_destruct;
- (void)_endSession;
- (void)_invalidate;
- (void)activate;
- (void)addFeedback:(id)arg1;
- (void)cacheQueryResponse:(id)arg1 webSearch:(bool)arg2;
- (id)cachedResultSetForCompletionString:(id)arg1 webSearch:(bool)arg2;
- (id)cachedResultSetForQuery:(id)arg1 webSearch:(bool)arg2;
- (id)clientQueue;
- (id)connectionType;
- (id)copyCachedResult:(id)arg1 webSearch:(bool)arg2;
- (id)createFeedbackRequest:(id*)arg1;
- (id)createQueryURL:(id)arg1 userQueryString:(id)arg2 currentLocation:(id)arg3 locationSource:(id)arg4 currentCoordinates:(struct { double x1; double x2; })arg5 storeFrontId:(id)arg6 locale:(id)arg7 context:(id)arg8;
- (id)createURLRequestWithString:(id)arg1 webSearch:(bool)arg2 scaleFactor:(double)arg3 allowLocation:(bool)arg4 fallbackURL:(id*)arg5;
- (void)deactivate;
- (void)dealloc;
- (bool)enableFeedbackDebugLogging;
- (void)enableFeedbackDebugLogging:(bool)arg1;
- (id)fetchLookupBagProperties;
- (bool)flushFeedback;
- (id)fteLearnMoreString;
- (id)fteLocString;
- (void)getCachedQueries:(id*)arg1 results:(id*)arg2 webSearch:(bool)arg3;
- (void)getImageWithIdentifier:(id)arg1 block:(id)arg2;
- (id)initWithClient:(id)arg1;
- (id)initWithClient:(id)arg1 clientQueue:(id)arg2;
- (void)isLocaleSupported:(id)arg1 withReply:(id)arg2;
- (bool)isValid;
- (void)killFeedback;
- (id)lookupFirstUseDescription1;
- (id)lookupFirstUseDescription2;
- (void)pruneCache;
- (id)queryWithString:(id)arg1 handler:(id)arg2;
- (id)queryWithString:(id)arg1 webSearch:(bool)arg2 handler:(id)arg3;
- (id)queryWithString:(id)arg1 webSearch:(bool)arg2 scaleFactor:(double)arg3 handler:(id)arg4;
- (id)resourceWithID:(id)arg1;
- (long long)resultSet:(id)arg1 isMatchForQuery:(id)arg2;
- (double)retryAfter;
- (double)searchRenderTimeout;
- (double)sessionStartTime;
- (void)setClientQueue:(id)arg1;
- (void)setEnableFeedbackDebugLogging:(bool)arg1;
- (void)setFeedbackStartTime;
- (void)setRetryAfter:(double)arg1;
- (void)setSessionStartTime:(double)arg1;
- (void)setUserAgentString:(id)arg1;
- (id)supportedServices;
- (void)syncFeedback;
- (id)urlRequestFromURL:(id)arg1;
- (id)urlSessionForImage:(id)arg1;
- (void)warmup;

@end
