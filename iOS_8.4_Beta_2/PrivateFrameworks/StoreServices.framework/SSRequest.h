/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

@interface SSRequest : NSObject <SSXPCCoding> {
    NSObject<OS_dispatch_source> *_backgroundTaskExpirationTimer;
    long long _backgroundTaskIdentifier;
    bool _cancelAfterTaskExpiration;
    <SSRequestDelegate> *_delegate;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    SSXPCConnection *_requestConnection;
    SSXPCConnection *_responseConnection;
}

@property(assign,copy) NSString * debugDescription;
@property(assign,readwrite) <SSRequestDelegate> * delegate;
@property(assign,copy) NSString * description;
@property(assign,readonly) unsigned long long hash;
@property(assign,readwrite) bool shouldCancelAfterTaskExpiration;
@property(assign,readonly) Class superclass;

- (void)__beginBackgroundTask;
- (void)__endBackgroundTask;
- (bool)__shouldUseBackgroundTaskAssertions;
- (void)_beginBackgroundTask;
- (void)_cancelBackgroundTaskExpirationTimer;
- (void)_endBackgroundTask;
- (void)_expireBackgroundTask;
- (id)_initSSRequest;
- (void)_shutdownRequest;
- (void)_shutdownRequestWithMessageID:(long long)arg1;
- (void)_startWithMessageID:(long long)arg1 messageBlock:(id)arg2;
- (void)cancel;
- (void)dealloc;
- (id)delegate;
- (void)disconnect;
- (id)init;
- (void)setDelegate:(id)arg1;
- (void)setShouldCancelAfterTaskExpiration:(bool)arg1;
- (bool)shouldCancelAfterTaskExpiration;
- (bool)start;
- (void)startWithCompletionBlock:(id)arg1;

@end
