/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iTunesStore.framework/iTunesStore
 */

@interface ISStoreURLOperation : ISURLOperation {
    long long _activeMachineDataStyle;
    NSNumber *_authenticatedDSID;
    bool _canSendGUIDParameter;
    bool _ignorePreexistingSecureToken;
    bool _isURLBagRequest;
    long long _machineDataStyle;
    bool _needsAuthentication;
    bool _needsURLBag;
    SSVFairPlaySAPSession *_sapSession;
    bool _shouldSendXTokenHeader;
    bool _urlKnownToBeTrusted;
    bool _useUserSpecificURLBag;
}

@property(assign,retain) SSVFairPlaySAPSession * SAPSession;
@property(assign,readonly) SSURLBagContext * URLBagContext;
@property(getter=isURLBagRequest,assign,readwrite) bool URLBagRequest;
@property(assign,retain) NSNumber * authenticatedDSID;
@property(assign,readwrite) bool canSendGUIDParameter;
@property(assign,readwrite) <ISStoreURLOperationDelegate> * delegate;
@property(assign,readwrite) bool ignorePreexistingSecureToken;
@property(assign,readwrite) long long machineDataStyle;
@property(assign,readwrite) bool needsAuthentication;
@property(assign,readwrite) bool needsURLBag;
@property(assign,readwrite) bool performsMachineDataActions;
@property(assign,readwrite) bool shouldSendXTokenHeader;
@property(assign,readwrite) bool urlKnownToBeTrusted;
@property(assign,readwrite) bool useUserSpecificURLBag;

+ (void)_addITunesStoreHeadersToRequest:(id)arg1 withURLBag:(id)arg2 account:(id)arg3;
+ (void)_addITunesStoreHeadersToRequest:(id)arg1 withURLBag:(id)arg2 accountIdentifier:(id)arg3;
+ (id)_restrictionsHeaderValue;
+ (void)addITunesStoreHeadersToRequest:(id)arg1 withAccountIdentifier:(id)arg2;
+ (void)handleITunesStoreResponseHeaders:(id)arg1 withAccountIdentifier:(id)arg2;
+ (id)itemPingOperationWithIdentifier:(unsigned long long)arg1 urlBagKey:(id)arg2;
+ (id)pingOperationWithUrl:(id)arg1;
+ (id)propertyListOperationWithURLBagKey:(id)arg1;

- (id)SAPSession;
- (id)URLBagContext;
- (id)_account;
- (void)_addStandardQueryParametersForURL:(id)arg1;
- (bool)_authenticateWithContext:(id)arg1 error:(id*)arg2;
- (bool)_canSendTokenToURL:(id)arg1;
- (id)_copyAuthenticationContext;
- (id)_copyAuthenticationContextForAttemptNumber:(long long)arg1;
- (bool)_isErrorTokenError:(id)arg1;
- (id)_loadURLBagInterpreterWithRequest:(id)arg1 requestProperties:(id)arg2;
- (bool)_performMachineDataRequest:(id)arg1;
- (bool)_processResponseData:(id)arg1 error:(id*)arg2;
- (id)_resolvedURLInBagContext:(id)arg1 URLBag:(id*)arg2;
- (void)_runURLOperation;
- (void)_setStoreFrontIdentifier:(id)arg1 isTransient:(bool)arg2;
- (id)_urlBagForContext:(id)arg1;
- (void)_willSendRequest:(id)arg1;
- (id)authenticatedAccountDSID;
- (id)authenticatedDSID;
- (bool)canSendGUIDParameter;
- (void)dealloc;
- (bool)handleRedirectFromDataProvider:(id)arg1 error:(id*)arg2;
- (void)handleResponse:(id)arg1;
- (bool)ignorePreexistingSecureToken;
- (id)init;
- (bool)isURLBagRequest;
- (long long)machineDataStyle;
- (bool)needsAuthentication;
- (bool)needsURLBag;
- (id)newRequestWithURL:(id)arg1;
- (bool)performsMachineDataActions;
- (void)run;
- (void)setAuthenticatedDSID:(id)arg1;
- (void)setCanSendGUIDParameter:(bool)arg1;
- (void)setIgnorePreexistingSecureToken:(bool)arg1;
- (void)setMachineDataStyle:(long long)arg1;
- (void)setNeedsAuthentication:(bool)arg1;
- (void)setNeedsURLBag:(bool)arg1;
- (void)setPerformsMachineDataActions:(bool)arg1;
- (void)setSAPSession:(id)arg1;
- (void)setShouldSendXTokenHeader:(bool)arg1;
- (void)setURLBagRequest:(bool)arg1;
- (void)setUrlKnownToBeTrusted:(bool)arg1;
- (void)setUseUserSpecificURLBag:(bool)arg1;
- (bool)shouldFollowRedirectWithRequest:(id)arg1 returningError:(id*)arg2;
- (bool)shouldSendXTokenHeader;
- (bool)urlKnownToBeTrusted;
- (bool)useUserSpecificURLBag;

@end
