/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicStoreQueueFeeder : MPQueueFeeder <MPShuffleControllerDataSource, MPStoreAVItemDownloadMetadataConsuming, MPStoreAVItemLeaseSessionStatusProviding> {
    NSObject<OS_dispatch_queue> *_accessQueue;
    NSArray *_allPlayableRequestItems;
    bool _allowsExplicitContent;
    MusicClientContext *_clientContext;
    MusicEntityValueContext *_containerEntityValueContext;
    unsigned long long _feederRevisionID;
    NSArray *_filteredPlayableRequestItems;
    MPPlaceholderAVItem *_placeholderAVItem;
    bool _shouldStartLeaseSession;
    MPShuffleController *_shuffleController;
}

@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) Class superclass;

+ (id)_operationQueue;

- (void).cxx_destruct;
- (id)MPU_contentItemIdentifierCollection;
- (void)_configurePlaceholderItem;
- (id)_filteredPlayableRequestItemsWithItems:(id)arg1;
- (void)_getPlayableRequestItems:(id*)arg1 requestItemsNeedingMetadata:(id*)arg2 containerEntityValueContext:(id*)arg3 forRequestItems:(id)arg4;
- (bool)_hasPlaceholderItemAtIndex:(unsigned long long)arg1;
- (void)_reloadFilteredPlayableRequestItems;
- (void)_resolvePlaybackRequestItems:(id)arg1 withPlatformContext:(id)arg2 clientContext:(id)arg3 responseHandler:(id)arg4;
- (void)_restrictionMonitorAllowsExplicitContentDidChangeNotification:(id)arg1;
- (void)_setShouldStartLeaseSession:(bool)arg1;
- (bool)_shouldStartLeaseSession;
- (unsigned long long)_songShuffledIndexForIndex:(unsigned long long)arg1;
- (id)audioSessionModeForItemAtIndex:(unsigned long long)arg1;
- (bool)canSkipToPreviousItem;
- (id)copyRawItemAtIndex:(unsigned long long)arg1;
- (void)dealloc;
- (void)didStartLeaseSessionForAVItem:(id)arg1;
- (bool)hasValidItemAtIndex:(unsigned long long)arg1;
- (id)identifierAtIndex:(unsigned long long)arg1;
- (unsigned long long)indexOfItemWithIdentifier:(id)arg1;
- (id)init;
- (unsigned long long)initialPlaybackQueueDepthForStartingIndex:(unsigned long long)arg1;
- (Class)itemClass;
- (unsigned long long)itemCount;
- (unsigned long long)itemCountForShuffleController:(id)arg1;
- (unsigned long long)itemTypeForIndex:(unsigned long long)arg1;
- (long long)playbackMode;
- (bool)playerPreparesItemsForPlaybackAsynchronously;
- (unsigned long long)realRepeatType;
- (unsigned long long)realShuffleType;
- (void)reloadWithPlaybackContext:(id)arg1 completionHandler:(id)arg2;
- (bool)shouldStartLeaseSessionForAVItem:(id)arg1;
- (unsigned long long)shuffleController:(id)arg1 countOfItemIdentifier:(id)arg2 withMaximumCount:(unsigned long long)arg3;
- (id)shuffleController:(id)arg1 identifierForItemAtIndex:(unsigned long long)arg2;
- (void)shuffleItemsWithAnchor:(unsigned long long*)arg1;
- (void)storeAVItem:(id)arg1 didReceiveResponseAssetDictionary:(id)arg2;

@end
