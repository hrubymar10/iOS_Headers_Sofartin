/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicProductViewController : UIViewController <MusicClientContextConsuming, MusicEntityPlaybackStatusControllerObserving, MusicEntityProductHeaderLockupViewDelegate, MusicJSNativeViewControllerFactory, MusicJSProductNativeViewControllerDelegate, MusicLibraryBrowseTableViewControllerDelegate, MusicProductAdditionalMetadataViewControllerDelegate, SKUINavigationBarDisplayConfiguring, SKUIProxyScrollViewDelegate, UIGestureRecognizerDelegate> {
    UIColor *_backgroundOverlayTintColor;
    UIBarButtonItem *_cancelButtonItem;
    MusicClientContext *_clientContext;
    <MusicEntityProviding> *_containerEntityProvider;
    MusicEntityValueContext *_containerEntityValueContext;
    unsigned long long _editableComponents;
    bool _editingWasCancelled;
    bool _hasReceivedViewWillAppearAtLeastOnce;
    MPArtworkCatalog *_headerArtworkCatalog;
    UIColor *_headerTintColor;
    bool _needsEffectiveNavigationItemUpdateForEditingStateChangeUponViewWillAppear;
    NSArray *_nonEditingLeftBarButtonItems;
    NSArray *_nonEditingRightBarButtonItems;
    MusicEntityPlaybackStatusController *_playbackStatusController;
    MPAVController *_player;
    long long _presentationSource;
    MusicProductAdditionalMetadataViewController *_productAdditionalMetadataViewController;
    MusicEntityProductHeaderLockupView *_productHeaderLockupView;
    UITapGestureRecognizer *_productHeaderLockupViewTapGestureRecognizer;
    SKUIProxyScrollView *_proxyScrollView;
    SKUIDocumentContainerViewController *_relatedContentDocumentContainerViewController;
    bool _shouldAutomaticallyDismissUponExitingEditingMode;
    <MusicEntityProviding> *_tracklistEntityProvider;
    MusicProductTracklistTableViewController *_tracklistTableViewController;
    bool _usesLightContentOverHeader;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _verticalScrollingContainerContentInsetAdditions;
    MusicVerticalScrollingContainerViewController *_verticalScrollingContainerViewController;
}

@property(assign,retain) SKUIClientContext * clientContext;
@property(assign,readonly) <MusicEntityValueProviding> * containerEntityValueProvider;
@property(assign,readonly) UIScrollView * containerScrollView;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readwrite) unsigned long long editableComponents;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) long long presentationSource;
@property(assign,readonly) MusicProductAdditionalMetadataViewController * productAdditionalMetadataViewController;
@property(assign,readonly) MusicEntityProductHeaderLockupView * productHeaderLockupView;
@property(assign,readwrite) bool shouldAutomaticallyDismissUponExitingEditingMode;
@property(assign,readonly) Class superclass;
@property(assign,readonly) MusicProductTracklistTableViewController * tracklistTableViewController;

+ (Class)storeEntityValueProviderClass;

- (void).cxx_destruct;
- (void)_addProductToLibraryWithContainerEntityValueContext:(id)arg1;
- (void)_cloudUpdateInProgressDidChangeNotification:(id)arg1;
- (void)_configureContainerEntityValueContext;
- (void)_containerEntityProviderDidInvalidateNotification:(id)arg1;
- (void)_contentSizeCategoryDidChangeNotification:(id)arg1;
- (id)_effectiveNavigationItem;
- (void)_handleCancelButtonTapped:(id)arg1;
- (void)_initializeHeaderTintColor;
- (bool)_isMatchLibraryLoading;
- (void)_productHeaderLockupViewTapped:(id)arg1;
- (void)_registerForNotificationsForContainerEntityProvider:(id)arg1;
- (void)_reloadContainerEntityValueContextProperties;
- (void)_reloadVerticalScrollingContainerItems;
- (void)_unregisterForNotificationsForContainerEntityProvider:(id)arg1;
- (void)_updateEffectiveNavigationItemForEditingStateChangeAnimated:(bool)arg1;
- (void)_updateLayout;
- (void)_updatePlaybackStatusForLockupView;
- (void)_updateProductHeaderLockupAddToLibraryState;
- (void)_updateProductHeaderLockupColors;
- (void)_updateProductHeaderLockupColorsForArtworkBackgroundColor:(id)arg1 requiresLightContent:(bool)arg2 allowsBarsAppearanceUpdate:(bool)arg3;
- (void)_updateProductHeaderLockupDimensions;
- (void)cancelEditing;
- (id)clientContext;
- (void)commitEditingWithTracklistEntityProviderChangeRecords:(id)arg1;
- (void)configureProductAdditionalMetadataViewController:(id)arg1;
- (id)containerEntityValueProvider;
- (id)containerScrollView;
- (id)contentScrollView;
- (void)dealloc;
- (unsigned long long)editableComponents;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)initWithContainerEntityProvider:(id)arg1 tracklistEntityProvider:(id)arg2 clientContext:(id)arg3 existingJSProductNativeViewController:(id)arg4;
- (void)jsProductNativeViewController:(id)arg1 setProductEntityValueProviderData:(id)arg2;
- (void)jsProductNativeViewController:(id)arg1 setRelatedContentDocument:(id)arg2 options:(id)arg3;
- (void)jsProductNativeViewController:(id)arg1 setReportingInformation:(id)arg2;
- (void)jsProductNativeViewController:(id)arg1 setTracklistItems:(id)arg2;
- (void)libraryBrowseTableViewControllerDidFinishContentHeightAnimation:(id)arg1;
- (void)libraryBrowseTableViewControllerWillBeginContentHeightAnimation:(id)arg1;
- (id)loadJSNativeViewControllerWithAppContext:(id)arg1;
- (id)loadProductHeaderLockupContentDescriptor;
- (id)loadProductTracklistTableViewConfigurationWithTracklistEntityProvider:(id)arg1;
- (id)navigationBarTintColor;
- (id)navigationItem;
- (void)playbackStatusControllerPlaybackStatusDidChange:(id)arg1;
- (long long)preferredStatusBarStyle;
- (bool)prefersNavigationBarBackgroundViewHidden;
- (long long)presentationSource;
- (id)productAdditionalMetadataViewController;
- (void)productAdditionalMetadataViewControllerDidFinishContentHeightAnimation:(id)arg1;
- (void)productAdditionalMetadataViewControllerWillBeginContentHeightAnimation:(id)arg1;
- (id)productHeaderLockupView;
- (void)productHeaderLockupView:(id)arg1 didSelectPlayButtonAction:(unsigned long long)arg2;
- (void)productHeaderLockupViewDidSelectAddToLibraryButton:(id)arg1;
- (void)productHeaderLockupViewDidSelectContextualActionsButton:(id)arg1;
- (void)productHeaderLockupViewDidSelectEditButton:(id)arg1;
- (void)productHeaderLockupViewDidSelectLikeDislikeButton:(id)arg1;
- (void)scrollViewDidChangeContentInset:(id)arg1;
- (void)setClientContext:(id)arg1;
- (void)setEditableComponents:(unsigned long long)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setShouldAutomaticallyDismissUponExitingEditingMode:(bool)arg1;
- (bool)shouldAutomaticallyDismissUponExitingEditingMode;
- (bool)shouldAutomaticallyPopForMissingContainerEntityValueProvider;
- (unsigned long long)supportedInterfaceOrientations;
- (id)tracklistTableViewController;
- (void)traitCollectionDidChange:(id)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;

@end
