/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicArtistProfileSplitMainViewController : UIViewController <MusicClientContextConsuming, MusicContainerScrollViewDelegate, SKUIScrollingSegmentedControllerDelegate> {
    MusicArtistProfileAlbumsViewController *_albumsViewController;
    MPMediaItemCollection *_artistEntity;
    MusicClientContext *_clientContext;
    MusicContainerScrollView *_containerScrollView;
    struct CGPoint { 
        double x; 
        double y; 
    } _containerScrollViewNormalizedContentOffset;
    <MusicArtistProfileSplitMainViewControllerDelegate> *_delegate;
    struct { 
        unsigned int contentScrollViewContentSizeDidChange : 1; 
        unsigned int contentScrollViewDidScroll : 1; 
        unsigned int needsContentForSegmentWithIdentifier : 1; 
    } _delegateRespondsToSelector;
    bool _didAutomaticallySelectMyMusicSegment;
    UIScrollView *_focusedContentScrollView;
    bool _hasInitializedContainerScrollViewNormalizedContentOffset;
    bool _isAdjustingContentSize;
    bool _isHidingVerticalScrollIndicator;
    bool _isSegmentedControlVisible;
    NSMutableDictionary *_loadedViewControllersToInsert;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _minimumHeightContentInsetAdditions;
    SKUIScrollingSegmentedController *_scrollingSegmentedController;
    NSMutableArray *_segmentIdentifiers;
    NSMutableSet *_segmentIdentifiersForLoadedViews;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _segmentedControlScrollViewEdgeInsetAdditions;
    bool _shouldAutomaticallySelectMyMusicSegment;
    bool _shouldShowStoreSegments;
}

@property(assign,retain) MusicClientContext * clientContext;
@property(assign,copy) NSString * debugDescription;
@property(assign,readwrite) <MusicArtistProfileSplitMainViewControllerDelegate> * delegate;
@property(assign,copy) NSString * description;
@property(assign,readonly) unsigned long long hash;
@property(assign,readwrite) bool shouldAutomaticallySelectMyMusicSegment;
@property(assign,readwrite) bool shouldShowStoreSegments;
@property(assign,readonly) Class superclass;

- (void).cxx_destruct;
- (struct CGPoint { double x1; double x2; })_adjustContentOffsetForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 inScrollView:(id)arg2;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })_currentSegmentedControlContentEdgeInsets;
- (void)_registerForNotificationsForContentScrollView:(id)arg1;
- (id)_scrollingSegmentedController;
- (void)_unregisterForNotificationsForContentScrollView:(id)arg1;
- (void)_updateContainerScrollViewContentInformationFromScroll:(bool)arg1;
- (void)_updateFocusedContentScrollViewIfNeeded;
- (void)_updateSegmentedControlLayoutForSuperviewChange:(bool)arg1;
- (void)_updateSegmentedControlScrollViewVisibility;
- (id)clientContext;
- (void)containerScrollViewContentSizeDidChange:(id)arg1;
- (id)contentScrollView;
- (void)dealloc;
- (id)delegate;
- (id)initWithArtistEntity:(id)arg1;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (void)scrollViewDidScroll:(id)arg1;
- (void)scrollingSegmentedController:(id)arg1 contentScrollViewDidChangeForViewControllerAtIndex:(unsigned long long)arg2;
- (void)scrollingSegmentedController:(id)arg1 didFocusViewControllerAtIndex:(unsigned long long)arg2;
- (void)scrollingSegmentedController:(id)arg1 willDisplayViewControllerAtIndex:(unsigned long long)arg2;
- (void)setClientContext:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setShouldAutomaticallySelectMyMusicSegment:(bool)arg1;
- (void)setShouldShowStoreSegments:(bool)arg1;
- (void)setViewController:(id)arg1 forSegmentIdentifier:(id)arg2;
- (bool)shouldAutomaticallySelectMyMusicSegment;
- (bool)shouldShowStoreSegments;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;

@end
