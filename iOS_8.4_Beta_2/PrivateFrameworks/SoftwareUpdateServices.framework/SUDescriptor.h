/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SoftwareUpdateServices.framework/SoftwareUpdateServices
 */

@interface SUDescriptor : NSObject <NSCopying, NSSecureCoding> {
    bool _autoDownloadAllowableForCellular;
    SUDocumentation *_documentation;
    bool _downloadAllowableForCellular;
    unsigned long long _downloadSize;
    bool _downloadable;
    bool _downloadableOverCellular;
    NSString *_humanReadableUpdateName;
    unsigned long long _installationSize;
    unsigned long long _msuPrepareSize;
    NSString *_productBuildVersion;
    NSString *_productSystemName;
    NSString *_productVersion;
    NSString *_publisher;
    bool _streamingZipCapable;
    unsigned long long _unarchiveSize;
    int _updateType;
}

@property(assign,readwrite) bool autoDownloadAllowableForCellular;
@property(assign,retain) SUDocumentation * documentation;
@property(assign,readwrite) unsigned long long downloadSize;
@property(getter=isDownloadable,assign,readwrite) bool downloadable;
@property(getter=isDownloadableOverCellular,assign,readwrite) bool downloadableOverCellular;
@property(assign,readwrite) unsigned long long installationSize;
@property(getter=_msuPrepareSize,setter=_setMsuPrepareSize:,assign,readwrite) unsigned long long msuPrepareSize;
@property(assign,retain) NSString * productBuildVersion;
@property(assign,retain) NSString * productSystemName;
@property(assign,retain) NSString * productVersion;
@property(assign,retain) NSString * publisher;
@property(getter=_isStreamingZipCapable,setter=_setStreamingZipCapable:,assign,readwrite) bool streamingZipCapable;
@property(getter=_unarchiveSize,setter=_setUnarchiveSize:,assign,readwrite) unsigned long long unarchiveSize;
@property(assign,readwrite) int updateType;

+ (bool)supportsSecureCoding;

- (id)_buildCompareKey;
- (bool)_hasValue:(id)arg1;
- (bool)_isStreamingZipCapable;
- (unsigned long long)_msuPrepareSize;
- (void)_setMsuPrepareSize:(unsigned long long)arg1;
- (void)_setStreamingZipCapable:(bool)arg1;
- (void)_setUnarchiveSize:(unsigned long long)arg1;
- (unsigned long long)_unarchiveSize;
- (bool)autoDownloadAllowableForCellular;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)documentation;
- (unsigned long long)downloadSize;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)humanReadableUpdateName;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (unsigned long long)installationSize;
- (bool)isDownloadable;
- (bool)isDownloadableOverCellular;
- (bool)isEqual:(id)arg1;
- (bool)isValidDescriptor;
- (unsigned long long)preparationSize;
- (id)productBuildVersion;
- (id)productSystemName;
- (id)productVersion;
- (id)publisher;
- (void)setAutoDownloadAllowableForCellular:(bool)arg1;
- (void)setDocumentation:(id)arg1;
- (void)setDownloadSize:(unsigned long long)arg1;
- (void)setDownloadable:(bool)arg1;
- (void)setDownloadableOverCellular:(bool)arg1;
- (void)setInstallationSize:(unsigned long long)arg1;
- (void)setProductBuildVersion:(id)arg1;
- (void)setProductSystemName:(id)arg1;
- (void)setProductVersion:(id)arg1;
- (void)setPublisher:(id)arg1;
- (void)setUpdateType:(int)arg1;
- (unsigned long long)totalRequiredFreeSpace;
- (int)updateType;

@end
