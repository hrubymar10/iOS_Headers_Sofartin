/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/VectorKit.framework/VectorKit
 */

@interface VKVectorTile : VKTile {
    double _contentScale;
    VKMapTileList *_fragments;
    float _maximumStyleZ;
    GEOVectorTile *_modelTile;
    VKSharedResources *_sharedResources;
    VKStyleManager *_styleManager;
    float _textureScale;
}

@property(assign,readwrite) double contentScale;
@property(assign,readonly) VKMapTileList * fragments;
@property(assign,readwrite) float maximumStyleZ;
@property(assign,retain) GEOVectorTile * modelTile;
@property(assign,retain) VKSharedResources * sharedResources;
@property(assign,retain) VKStyleManager * styleManager;
@property(assign,readwrite) float textureScale;
@property(assign,readonly) long long vectorType;

- (double)contentScale;
- (void)dealloc;
- (id)fragments;
- (id)initWithKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg1;
- (id)initWithKey:(const struct VKTileKey { unsigned int x1; int x2; int x3; unsigned int x4; }*)arg1 modelTile:(id)arg2 styleManager:(id)arg3 sharedResources:(id)arg4 contentScale:(double)arg5 device:(struct Device { }*)arg6;
- (float)maximumStyleZ;
- (id)modelTile;
- (void)setContentScale:(double)arg1;
- (void)setMaximumStyleZ:(float)arg1;
- (void)setModelTile:(id)arg1;
- (void)setSharedResources:(id)arg1;
- (void)setStyleManager:(id)arg1;
- (void)setTextureScale:(float)arg1;
- (id)sharedResources;
- (id)styleManager;
- (float)textureScale;
- (long long)vectorType;

@end
