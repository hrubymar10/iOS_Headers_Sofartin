/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
 */

@interface SGRe2 : NSObject {
    bool _isTrivial;
    long long _isTrivialOnceToken;
    struct RE2 { struct Mutex {} *x1; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_2_1_1; } x2; struct Options { int x_3_1_1; bool x_3_1_2; bool x_3_1_3; bool x_3_1_4; long long x_3_1_5; bool x_3_1_6; bool x_3_1_7; bool x_3_1_8; bool x_3_1_9; bool x_3_1_10; bool x_3_1_11; bool x_3_1_12; bool x_3_1_13; } x3; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_4_1_1; } x4; bool x5; struct Regexp {} *x6; struct Regexp {} *x7; struct Prog {} *x8; struct Prog {} *x9; bool x10; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > {} *x11; int x12; struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > { struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep, std::__1::allocator<char> > { struct __rep { union { struct __long { char *x_1_5_1; unsigned long long x_1_5_2; unsigned long long x_1_5_3; } x_1_4_1; struct __short { BOOL x_2_5_1[23]; struct { unsigned char x_2_6_1; } x_2_5_2; } x_1_4_2; struct __raw { unsigned long long x_3_5_1[3]; } x_1_4_3; } x_1_3_1; } x_1_2_1; } x_13_1_1; } x13; int x14; struct map<std::__1::basic_string<char>, int, std::__1::less<std::__1::basic_string<char> >, std::__1::allocator<std::__1::pair<const std::__1::basic_string<char>, int> > > {} *x15; struct map<int, std::__1::basic_string<char>, std::__1::less<int>, std::__1::allocator<std::__1::pair<const int, std::__1::basic_string<char> > > > {} *x16; } *_pattern;
    char *_patternString;
    NSArray *_subregexps;
}

+ (id)convertPerlStyleLiteralToRegexpString:(id)arg1;

- (void).cxx_destruct;
- (bool)_enumerateMatchesInUtf8:(const char *)arg1 fromString:(id)arg2 ngroups:(unsigned long long)arg3 block:(id)arg4;
- (void)dealloc;
- (id)description;
- (void)enumerateMatchesInString:(id)arg1 ngroups:(unsigned long long)arg2 block:(id)arg3;
- (void)enumerateMatchesInUtf8:(const char *)arg1 fromString:(id)arg2 ngroups:(unsigned long long)arg3 block:(id)arg4;
- (bool)existsInString:(id)arg1;
- (bool)existsInUtf8:(const char *)arg1;
- (id)initWithRegexp:(id)arg1;
- (id)initWithSubregexps:(id)arg1;
- (bool)isTrivial;
- (bool)matchesString:(id)arg1;
- (bool)matchesUtf8:(const char *)arg1;
- (id)traceMatchesInString:(id)arg1;

@end
