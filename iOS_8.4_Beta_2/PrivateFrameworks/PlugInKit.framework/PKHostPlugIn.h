/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PlugInKit.framework/PlugInKit
 */

@interface PKHostPlugIn : PKPlugInCore <NSXPCConnectionDelegate, PKPlugInPrivate> {
    NSObject<OS_dispatch_queue> *__replyQueue;
    NSObject<OS_dispatch_queue> *__startQueue;
    NSObject<OS_dispatch_queue> *__syncQueue;
    NSDate *_beganUsingAt;
    NSUserDefaults *_defaults;
    NSDictionary *_discoveryExtensions;
    NSBundle *_embeddedBundle;
    id _embeddedPrincipal;
    id _notificationBlock;
    id _plugInPrincipal;
    NSXPCConnection *_pluginConnection;
    id _queuedHostPrincipal;
    Protocol *_queuedHostProtocol;
    NSArray *_sandboxExtensions;
    <PKCorePlugInProtocol> *_service;
    unsigned long long _state;
    <PKPlugIn> *_supersededBy;
    NSUUID *_supersedingUUID;
    unsigned int _useCount;
}

@property(assign,retain) NSObject<OS_dispatch_queue> * _replyQueue;
@property(assign,retain) NSObject<OS_dispatch_queue> * _startQueue;
@property(assign,retain) NSObject<OS_dispatch_queue> * _syncQueue;
@property(assign,readonly) bool active;
@property(assign,readonly) NSDictionary * attributes;
@property(assign,retain) NSDate * beganUsingAt;
@property(assign,readonly) NSDictionary * bundleInfoDictionary;
@property(assign,readonly) NSURL * containingUrl;
@property(assign,copy) NSString * debugDescription;
@property(assign,readonly) NSUserDefaults * defaults;
@property(assign,copy) NSString * description;
@property(assign,retain) NSDictionary * discoveryExtensions;
@property(assign,retain) NSBundle * embeddedBundle;
@property(assign,retain) id embeddedPrincipal;
@property(assign,retain) NSDictionary * extensionState;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) NSString * identifier;
@property(assign,readonly) NSString * localizedContainingName;
@property(assign,readonly) NSString * localizedName;
@property(assign,readonly) NSString * localizedShortName;
@property(assign,copy) id notificationBlock;
@property(assign,readonly) bool onSystemVolume;
@property(assign,readonly) NSDictionary * plugInDictionary;
@property(assign,retain) id plugInPrincipal;
@property(assign,retain) NSXPCConnection * pluginConnection;
@property(assign,retain) id queuedHostPrincipal;
@property(assign,retain) Protocol * queuedHostProtocol;
@property(assign,retain) NSArray * sandboxExtensions;
@property(assign,retain) <PKCorePlugInProtocol> * service;
@property(assign,readwrite) unsigned long long state;
@property(assign,readonly) Class superclass;
@property(assign,retain) <PKPlugIn> * supersededBy;
@property(assign,retain) NSUUID * supersedingUUID;
@property(assign,readonly) NSDate * timestamp;
@property(assign,readonly) NSURL * url;
@property(assign,readwrite) unsigned int useCount;
@property(assign,readwrite) long long userElection;
@property(assign,readonly) NSUUID * uuid;
@property(assign,readonly) NSString * version;

- (void).cxx_destruct;
- (id)_replyQueue;
- (id)_startQueue;
- (id)_syncQueue;
- (bool)active;
- (id)beganUsingAt;
- (void)beginUsing:(id)arg1;
- (void)changeState:(unsigned long long)arg1;
- (void)connection:(id)arg1 handleInvocation:(id)arg2 isReply:(bool)arg3;
- (id)defaults;
- (id)description;
- (id)discoveryExtensions;
- (id)embeddedBundle;
- (id)embeddedPrincipal;
- (void)endUsing:(id)arg1;
- (id)extensionState;
- (id)initWithForm:(id)arg1;
- (bool)loadExtensions:(id)arg1 error:(id*)arg2;
- (void)messageTraceUsage;
- (id)notificationBlock;
- (id)plugInPrincipal;
- (id)pluginConnection;
- (void)preparePlugin:(id)arg1;
- (id)queuedHostPrincipal;
- (id)queuedHostProtocol;
- (void)resume;
- (id)sandboxExtensions;
- (id)service;
- (void)setBeganUsingAt:(id)arg1;
- (void)setBootstrap;
- (void)setDiscoveryExtensions:(id)arg1;
- (void)setEmbeddedBundle:(id)arg1;
- (void)setEmbeddedPrincipal:(id)arg1;
- (void)setExtensionState:(id)arg1;
- (void)setHostPrincipal:(id)arg1 withProtocol:(id)arg2;
- (void)setNotificationBlock:(id)arg1;
- (void)setPlugInPrincipal:(id)arg1;
- (void)setPluginConnection:(id)arg1;
- (void)setQueuedHostPrincipal:(id)arg1;
- (void)setQueuedHostProtocol:(id)arg1;
- (void)setReplyQueue:(id)arg1;
- (void)setSandboxExtensions:(id)arg1;
- (void)setService:(id)arg1;
- (void)setState:(unsigned long long)arg1;
- (void)setSupersededBy:(id)arg1;
- (void)setSupersedingUUID:(id)arg1;
- (void)setUseCount:(unsigned int)arg1;
- (void)setUserElection:(long long)arg1;
- (void)set_replyQueue:(id)arg1;
- (void)set_startQueue:(id)arg1;
- (void)set_syncQueue:(id)arg1;
- (void)startPlugIn:(id)arg1;
- (unsigned long long)state;
- (id)supersededBy;
- (id)supersedingUUID;
- (void)suspend;
- (void)unwind:(unsigned long long)arg1 force:(bool)arg2;
- (bool)useBundle:(id)arg1 error:(id*)arg2;
- (unsigned int)useCount;
- (long long)userElection;

@end
