/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote
 */

@interface _NMRCommandOptionsProtobuf : PBCodable <NSCopying> {
    NSString *_destinationAppDisplayID;
    bool _externalPlayerCommand;
    struct { 
        unsigned int playbackPosition : 1; 
        unsigned int radioStationID : 1; 
        unsigned int trackID : 1; 
        unsigned int playbackRate : 1; 
        unsigned int rating : 1; 
        unsigned int repeatMode : 1; 
        unsigned int sendOptions : 1; 
        unsigned int shuffleMode : 1; 
        unsigned int skipInterval : 1; 
        unsigned int externalPlayerCommand : 1; 
        unsigned int negative : 1; 
        unsigned int requestDefermentToPlaybackQueuePosition : 1; 
    } _has;
    NSString *_mediaType;
    bool _negative;
    double _playbackPosition;
    float _playbackRate;
    NSString *_radioStationHash;
    long long _radioStationID;
    float _rating;
    int _repeatMode;
    bool _requestDefermentToPlaybackQueuePosition;
    unsigned int _sendOptions;
    int _shuffleMode;
    float _skipInterval;
    NSString *_sourceID;
    NSData *_systemAppPlaybackQueueData;
    unsigned long long _trackID;
}

@property(assign,retain) NSString * destinationAppDisplayID;
@property(assign,readwrite) bool externalPlayerCommand;
@property(assign,readonly) bool hasDestinationAppDisplayID;
@property(assign,readwrite) bool hasExternalPlayerCommand;
@property(assign,readonly) bool hasMediaType;
@property(assign,readwrite) bool hasNegative;
@property(assign,readwrite) bool hasPlaybackPosition;
@property(assign,readwrite) bool hasPlaybackRate;
@property(assign,readonly) bool hasRadioStationHash;
@property(assign,readwrite) bool hasRadioStationID;
@property(assign,readwrite) bool hasRating;
@property(assign,readwrite) bool hasRepeatMode;
@property(assign,readwrite) bool hasRequestDefermentToPlaybackQueuePosition;
@property(assign,readwrite) bool hasSendOptions;
@property(assign,readwrite) bool hasShuffleMode;
@property(assign,readwrite) bool hasSkipInterval;
@property(assign,readonly) bool hasSourceID;
@property(assign,readonly) bool hasSystemAppPlaybackQueueData;
@property(assign,readwrite) bool hasTrackID;
@property(assign,retain) NSString * mediaType;
@property(assign,readwrite) bool negative;
@property(assign,readwrite) double playbackPosition;
@property(assign,readwrite) float playbackRate;
@property(assign,retain) NSString * radioStationHash;
@property(assign,readwrite) long long radioStationID;
@property(assign,readwrite) float rating;
@property(assign,readwrite) int repeatMode;
@property(assign,readwrite) bool requestDefermentToPlaybackQueuePosition;
@property(assign,readwrite) unsigned int sendOptions;
@property(assign,readwrite) int shuffleMode;
@property(assign,readwrite) float skipInterval;
@property(assign,retain) NSString * sourceID;
@property(assign,retain) NSData * systemAppPlaybackQueueData;
@property(assign,readwrite) unsigned long long trackID;

- (void).cxx_destruct;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)destinationAppDisplayID;
- (id)dictionaryRepresentation;
- (bool)externalPlayerCommand;
- (bool)hasDestinationAppDisplayID;
- (bool)hasExternalPlayerCommand;
- (bool)hasMediaType;
- (bool)hasNegative;
- (bool)hasPlaybackPosition;
- (bool)hasPlaybackRate;
- (bool)hasRadioStationHash;
- (bool)hasRadioStationID;
- (bool)hasRating;
- (bool)hasRepeatMode;
- (bool)hasRequestDefermentToPlaybackQueuePosition;
- (bool)hasSendOptions;
- (bool)hasShuffleMode;
- (bool)hasSkipInterval;
- (bool)hasSourceID;
- (bool)hasSystemAppPlaybackQueueData;
- (bool)hasTrackID;
- (unsigned long long)hash;
- (bool)isEqual:(id)arg1;
- (id)mediaType;
- (void)mergeFrom:(id)arg1;
- (bool)negative;
- (double)playbackPosition;
- (float)playbackRate;
- (id)radioStationHash;
- (long long)radioStationID;
- (float)rating;
- (bool)readFrom:(id)arg1;
- (int)repeatMode;
- (bool)requestDefermentToPlaybackQueuePosition;
- (unsigned int)sendOptions;
- (void)setDestinationAppDisplayID:(id)arg1;
- (void)setExternalPlayerCommand:(bool)arg1;
- (void)setHasExternalPlayerCommand:(bool)arg1;
- (void)setHasNegative:(bool)arg1;
- (void)setHasPlaybackPosition:(bool)arg1;
- (void)setHasPlaybackRate:(bool)arg1;
- (void)setHasRadioStationID:(bool)arg1;
- (void)setHasRating:(bool)arg1;
- (void)setHasRepeatMode:(bool)arg1;
- (void)setHasRequestDefermentToPlaybackQueuePosition:(bool)arg1;
- (void)setHasSendOptions:(bool)arg1;
- (void)setHasShuffleMode:(bool)arg1;
- (void)setHasSkipInterval:(bool)arg1;
- (void)setHasTrackID:(bool)arg1;
- (void)setMediaType:(id)arg1;
- (void)setNegative:(bool)arg1;
- (void)setPlaybackPosition:(double)arg1;
- (void)setPlaybackRate:(float)arg1;
- (void)setRadioStationHash:(id)arg1;
- (void)setRadioStationID:(long long)arg1;
- (void)setRating:(float)arg1;
- (void)setRepeatMode:(int)arg1;
- (void)setRequestDefermentToPlaybackQueuePosition:(bool)arg1;
- (void)setSendOptions:(unsigned int)arg1;
- (void)setShuffleMode:(int)arg1;
- (void)setSkipInterval:(float)arg1;
- (void)setSourceID:(id)arg1;
- (void)setSystemAppPlaybackQueueData:(id)arg1;
- (void)setTrackID:(unsigned long long)arg1;
- (int)shuffleMode;
- (float)skipInterval;
- (id)sourceID;
- (id)systemAppPlaybackQueueData;
- (unsigned long long)trackID;
- (void)writeTo:(id)arg1;

@end
