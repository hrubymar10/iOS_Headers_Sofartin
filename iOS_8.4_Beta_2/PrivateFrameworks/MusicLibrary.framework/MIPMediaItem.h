/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MusicLibrary.framework/MusicLibrary
 */

@interface MIPMediaItem : PBCodable <NSCopying> {
    long long _accountId;
    NSString *_artworkId;
    long long _bookmarkTimeMilliseconds;
    NSString *_chapterMetadataUrl;
    int _cloudStatus;
    NSString *_comment;
    int _contentRating;
    int _contentRatingLevel;
    NSString *_copyright;
    long long _creationDateTime;
    long long _drmKey1IdCode;
    long long _drmKey2IdCode;
    long long _drmPlatformIdCode;
    int _drmVersionsCode;
    long long _duration;
    bool _explicitContent;
    NSString *_extrasUrl;
    long long _familyAccountId;
    int _fileKind;
    long long _fileSize;
    NSString *_grouping;
    struct { 
        unsigned int accountId : 1; 
        unsigned int bookmarkTimeMilliseconds : 1; 
        unsigned int creationDateTime : 1; 
        unsigned int drmKey1IdCode : 1; 
        unsigned int drmKey2IdCode : 1; 
        unsigned int drmPlatformIdCode : 1; 
        unsigned int duration : 1; 
        unsigned int familyAccountId : 1; 
        unsigned int fileSize : 1; 
        unsigned int lastPlayedDateTime : 1; 
        unsigned int lastSkippedDateTime : 1; 
        unsigned int modificationDateTime : 1; 
        unsigned int purchaseDateTime : 1; 
        unsigned int purchaseHistoryId : 1; 
        unsigned int releaseDateTime : 1; 
        unsigned int sagaId : 1; 
        unsigned int storeId : 1; 
        unsigned int storePlaylistId : 1; 
        unsigned int storefrontId : 1; 
        unsigned int subscriptionStoreItemId : 1; 
        unsigned int cloudStatus : 1; 
        unsigned int contentRating : 1; 
        unsigned int contentRatingLevel : 1; 
        unsigned int drmVersionsCode : 1; 
        unsigned int fileKind : 1; 
        unsigned int likedState : 1; 
        unsigned int mediaType : 1; 
        unsigned int playCount : 1; 
        unsigned int playCountDelta : 1; 
        unsigned int purchaseHistoryToken : 1; 
        unsigned int skipCount : 1; 
        unsigned int skipCountDelta : 1; 
        unsigned int year : 1; 
        unsigned int explicitContent : 1; 
        unsigned int hasLocalAsset : 1; 
        unsigned int hidden : 1; 
        unsigned int needsReporting : 1; 
        unsigned int rememberBookmark : 1; 
    } _has;
    bool _hasLocalAsset;
    bool _hidden;
    long long _lastPlayedDateTime;
    long long _lastSkippedDateTime;
    NSMutableArray *_libraryIdentifiers;
    int _likedState;
    NSString *_longDescription;
    int _mediaType;
    long long _modificationDateTime;
    MIPMovie *_movie;
    bool _needsReporting;
    int _playCount;
    int _playCountDelta;
    MIPPodcast *_podcast;
    long long _purchaseDateTime;
    long long _purchaseHistoryId;
    NSString *_purchaseHistoryRedownloadParams;
    int _purchaseHistoryToken;
    long long _releaseDateTime;
    bool _rememberBookmark;
    long long _sagaId;
    NSString *_sagaRedownloadParams;
    NSString *_shortDescription;
    int _skipCount;
    int _skipCountDelta;
    MIPSong *_song;
    NSString *_sortTitle;
    NSString *_storeAssetFlavor;
    long long _storeId;
    long long _storePlaylistId;
    NSString *_storeXID;
    long long _storefrontId;
    long long _subscriptionStoreItemId;
    NSString *_title;
    MIPTVShow *_tvShow;
    int _year;
}

@property(assign,readwrite) long long accountId;
@property(assign,retain) NSString * artworkId;
@property(assign,readwrite) long long bookmarkTimeMilliseconds;
@property(assign,retain) NSString * chapterMetadataUrl;
@property(assign,readwrite) int cloudStatus;
@property(assign,retain) NSString * comment;
@property(assign,readwrite) int contentRating;
@property(assign,readwrite) int contentRatingLevel;
@property(assign,retain) NSString * copyright;
@property(assign,readwrite) long long creationDateTime;
@property(assign,readwrite) long long drmKey1IdCode;
@property(assign,readwrite) long long drmKey2IdCode;
@property(assign,readwrite) long long drmPlatformIdCode;
@property(assign,readwrite) int drmVersionsCode;
@property(assign,readwrite) long long duration;
@property(assign,readwrite) bool explicitContent;
@property(assign,retain) NSString * extrasUrl;
@property(assign,readwrite) long long familyAccountId;
@property(assign,readwrite) int fileKind;
@property(assign,readwrite) long long fileSize;
@property(assign,retain) NSString * grouping;
@property(assign,readwrite) bool hasAccountId;
@property(assign,readonly) bool hasArtworkId;
@property(assign,readwrite) bool hasBookmarkTimeMilliseconds;
@property(assign,readonly) bool hasChapterMetadataUrl;
@property(assign,readwrite) bool hasCloudStatus;
@property(assign,readonly) bool hasComment;
@property(assign,readwrite) bool hasContentRating;
@property(assign,readwrite) bool hasContentRatingLevel;
@property(assign,readonly) bool hasCopyright;
@property(assign,readwrite) bool hasCreationDateTime;
@property(assign,readwrite) bool hasDrmKey1IdCode;
@property(assign,readwrite) bool hasDrmKey2IdCode;
@property(assign,readwrite) bool hasDrmPlatformIdCode;
@property(assign,readwrite) bool hasDrmVersionsCode;
@property(assign,readwrite) bool hasDuration;
@property(assign,readwrite) bool hasExplicitContent;
@property(assign,readonly) bool hasExtrasUrl;
@property(assign,readwrite) bool hasFamilyAccountId;
@property(assign,readwrite) bool hasFileKind;
@property(assign,readwrite) bool hasFileSize;
@property(assign,readonly) bool hasGrouping;
@property(assign,readwrite) bool hasHasLocalAsset;
@property(assign,readwrite) bool hasHidden;
@property(assign,readwrite) bool hasLastPlayedDateTime;
@property(assign,readwrite) bool hasLastSkippedDateTime;
@property(assign,readwrite) bool hasLikedState;
@property(assign,readwrite) bool hasLocalAsset;
@property(assign,readonly) bool hasLongDescription;
@property(assign,readwrite) bool hasMediaType;
@property(assign,readwrite) bool hasModificationDateTime;
@property(assign,readonly) bool hasMovie;
@property(assign,readwrite) bool hasNeedsReporting;
@property(assign,readwrite) bool hasPlayCount;
@property(assign,readwrite) bool hasPlayCountDelta;
@property(assign,readonly) bool hasPodcast;
@property(assign,readwrite) bool hasPurchaseDateTime;
@property(assign,readwrite) bool hasPurchaseHistoryId;
@property(assign,readonly) bool hasPurchaseHistoryRedownloadParams;
@property(assign,readwrite) bool hasPurchaseHistoryToken;
@property(assign,readwrite) bool hasReleaseDateTime;
@property(assign,readwrite) bool hasRememberBookmark;
@property(assign,readwrite) bool hasSagaId;
@property(assign,readonly) bool hasSagaRedownloadParams;
@property(assign,readonly) bool hasShortDescription;
@property(assign,readwrite) bool hasSkipCount;
@property(assign,readwrite) bool hasSkipCountDelta;
@property(assign,readonly) bool hasSong;
@property(assign,readonly) bool hasSortTitle;
@property(assign,readonly) bool hasStoreAssetFlavor;
@property(assign,readwrite) bool hasStoreId;
@property(assign,readwrite) bool hasStorePlaylistId;
@property(assign,readonly) bool hasStoreXID;
@property(assign,readwrite) bool hasStorefrontId;
@property(assign,readwrite) bool hasSubscriptionStoreItemId;
@property(assign,readonly) bool hasTitle;
@property(assign,readonly) bool hasTvShow;
@property(assign,readwrite) bool hasYear;
@property(assign,readwrite) bool hidden;
@property(assign,readwrite) long long lastPlayedDateTime;
@property(assign,readwrite) long long lastSkippedDateTime;
@property(assign,retain) NSMutableArray * libraryIdentifiers;
@property(assign,readwrite) int likedState;
@property(assign,retain) NSString * longDescription;
@property(assign,readwrite) int mediaType;
@property(assign,readwrite) long long modificationDateTime;
@property(assign,retain) MIPMovie * movie;
@property(assign,readwrite) bool needsReporting;
@property(assign,readwrite) int playCount;
@property(assign,readwrite) int playCountDelta;
@property(assign,retain) MIPPodcast * podcast;
@property(assign,readwrite) long long purchaseDateTime;
@property(assign,readwrite) long long purchaseHistoryId;
@property(assign,retain) NSString * purchaseHistoryRedownloadParams;
@property(assign,readwrite) int purchaseHistoryToken;
@property(assign,readwrite) long long releaseDateTime;
@property(assign,readwrite) bool rememberBookmark;
@property(assign,readwrite) long long sagaId;
@property(assign,retain) NSString * sagaRedownloadParams;
@property(assign,retain) NSString * shortDescription;
@property(assign,readwrite) int skipCount;
@property(assign,readwrite) int skipCountDelta;
@property(assign,retain) MIPSong * song;
@property(assign,retain) NSString * sortTitle;
@property(assign,retain) NSString * storeAssetFlavor;
@property(assign,readwrite) long long storeId;
@property(assign,readwrite) long long storePlaylistId;
@property(assign,retain) NSString * storeXID;
@property(assign,readwrite) long long storefrontId;
@property(assign,readwrite) long long subscriptionStoreItemId;
@property(assign,retain) NSString * title;
@property(assign,retain) MIPTVShow * tvShow;
@property(assign,readwrite) int year;

- (void).cxx_destruct;
- (long long)accountId;
- (void)addLibraryIdentifiers:(id)arg1;
- (id)artworkId;
- (long long)bookmarkTimeMilliseconds;
- (id)chapterMetadataUrl;
- (void)clearLibraryIdentifiers;
- (int)cloudStatus;
- (id)comment;
- (int)contentRating;
- (int)contentRatingLevel;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)copyright;
- (long long)creationDateTime;
- (id)description;
- (id)dictionaryRepresentation;
- (long long)drmKey1IdCode;
- (long long)drmKey2IdCode;
- (long long)drmPlatformIdCode;
- (int)drmVersionsCode;
- (long long)duration;
- (bool)explicitContent;
- (id)extrasUrl;
- (long long)familyAccountId;
- (int)fileKind;
- (long long)fileSize;
- (id)grouping;
- (bool)hasAccountId;
- (bool)hasArtworkId;
- (bool)hasBookmarkTimeMilliseconds;
- (bool)hasChapterMetadataUrl;
- (bool)hasCloudStatus;
- (bool)hasComment;
- (bool)hasContentRating;
- (bool)hasContentRatingLevel;
- (bool)hasCopyright;
- (bool)hasCreationDateTime;
- (bool)hasDrmKey1IdCode;
- (bool)hasDrmKey2IdCode;
- (bool)hasDrmPlatformIdCode;
- (bool)hasDrmVersionsCode;
- (bool)hasDuration;
- (bool)hasExplicitContent;
- (bool)hasExtrasUrl;
- (bool)hasFamilyAccountId;
- (bool)hasFileKind;
- (bool)hasFileSize;
- (bool)hasGrouping;
- (bool)hasHasLocalAsset;
- (bool)hasHidden;
- (bool)hasLastPlayedDateTime;
- (bool)hasLastSkippedDateTime;
- (bool)hasLikedState;
- (bool)hasLocalAsset;
- (bool)hasLongDescription;
- (bool)hasMediaType;
- (bool)hasModificationDateTime;
- (bool)hasMovie;
- (bool)hasNeedsReporting;
- (bool)hasPlayCount;
- (bool)hasPlayCountDelta;
- (bool)hasPodcast;
- (bool)hasPurchaseDateTime;
- (bool)hasPurchaseHistoryId;
- (bool)hasPurchaseHistoryRedownloadParams;
- (bool)hasPurchaseHistoryToken;
- (bool)hasReleaseDateTime;
- (bool)hasRememberBookmark;
- (bool)hasSagaId;
- (bool)hasSagaRedownloadParams;
- (bool)hasShortDescription;
- (bool)hasSkipCount;
- (bool)hasSkipCountDelta;
- (bool)hasSong;
- (bool)hasSortTitle;
- (bool)hasStoreAssetFlavor;
- (bool)hasStoreId;
- (bool)hasStorePlaylistId;
- (bool)hasStoreXID;
- (bool)hasStorefrontId;
- (bool)hasSubscriptionStoreItemId;
- (bool)hasTitle;
- (bool)hasTvShow;
- (bool)hasYear;
- (unsigned long long)hash;
- (bool)hidden;
- (bool)isEqual:(id)arg1;
- (long long)lastPlayedDateTime;
- (long long)lastSkippedDateTime;
- (id)libraryIdentifiers;
- (id)libraryIdentifiersAtIndex:(unsigned long long)arg1;
- (unsigned long long)libraryIdentifiersCount;
- (int)likedState;
- (id)longDescription;
- (int)mediaType;
- (void)mergeFrom:(id)arg1;
- (long long)modificationDateTime;
- (id)movie;
- (bool)needsReporting;
- (int)playCount;
- (int)playCountDelta;
- (id)podcast;
- (long long)purchaseDateTime;
- (long long)purchaseHistoryId;
- (id)purchaseHistoryRedownloadParams;
- (int)purchaseHistoryToken;
- (bool)readFrom:(id)arg1;
- (long long)releaseDateTime;
- (bool)rememberBookmark;
- (long long)sagaId;
- (id)sagaRedownloadParams;
- (void)setAccountId:(long long)arg1;
- (void)setArtworkId:(id)arg1;
- (void)setBookmarkTimeMilliseconds:(long long)arg1;
- (void)setChapterMetadataUrl:(id)arg1;
- (void)setCloudStatus:(int)arg1;
- (void)setComment:(id)arg1;
- (void)setContentRating:(int)arg1;
- (void)setContentRatingLevel:(int)arg1;
- (void)setCopyright:(id)arg1;
- (void)setCreationDateTime:(long long)arg1;
- (void)setDrmKey1IdCode:(long long)arg1;
- (void)setDrmKey2IdCode:(long long)arg1;
- (void)setDrmPlatformIdCode:(long long)arg1;
- (void)setDrmVersionsCode:(int)arg1;
- (void)setDuration:(long long)arg1;
- (void)setExplicitContent:(bool)arg1;
- (void)setExtrasUrl:(id)arg1;
- (void)setFamilyAccountId:(long long)arg1;
- (void)setFileKind:(int)arg1;
- (void)setFileSize:(long long)arg1;
- (void)setGrouping:(id)arg1;
- (void)setHasAccountId:(bool)arg1;
- (void)setHasBookmarkTimeMilliseconds:(bool)arg1;
- (void)setHasCloudStatus:(bool)arg1;
- (void)setHasContentRating:(bool)arg1;
- (void)setHasContentRatingLevel:(bool)arg1;
- (void)setHasCreationDateTime:(bool)arg1;
- (void)setHasDrmKey1IdCode:(bool)arg1;
- (void)setHasDrmKey2IdCode:(bool)arg1;
- (void)setHasDrmPlatformIdCode:(bool)arg1;
- (void)setHasDrmVersionsCode:(bool)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasExplicitContent:(bool)arg1;
- (void)setHasFamilyAccountId:(bool)arg1;
- (void)setHasFileKind:(bool)arg1;
- (void)setHasFileSize:(bool)arg1;
- (void)setHasHasLocalAsset:(bool)arg1;
- (void)setHasHidden:(bool)arg1;
- (void)setHasLastPlayedDateTime:(bool)arg1;
- (void)setHasLastSkippedDateTime:(bool)arg1;
- (void)setHasLikedState:(bool)arg1;
- (void)setHasLocalAsset:(bool)arg1;
- (void)setHasMediaType:(bool)arg1;
- (void)setHasModificationDateTime:(bool)arg1;
- (void)setHasNeedsReporting:(bool)arg1;
- (void)setHasPlayCount:(bool)arg1;
- (void)setHasPlayCountDelta:(bool)arg1;
- (void)setHasPurchaseDateTime:(bool)arg1;
- (void)setHasPurchaseHistoryId:(bool)arg1;
- (void)setHasPurchaseHistoryToken:(bool)arg1;
- (void)setHasReleaseDateTime:(bool)arg1;
- (void)setHasRememberBookmark:(bool)arg1;
- (void)setHasSagaId:(bool)arg1;
- (void)setHasSkipCount:(bool)arg1;
- (void)setHasSkipCountDelta:(bool)arg1;
- (void)setHasStoreId:(bool)arg1;
- (void)setHasStorePlaylistId:(bool)arg1;
- (void)setHasStorefrontId:(bool)arg1;
- (void)setHasSubscriptionStoreItemId:(bool)arg1;
- (void)setHasYear:(bool)arg1;
- (void)setHidden:(bool)arg1;
- (void)setLastPlayedDateTime:(long long)arg1;
- (void)setLastSkippedDateTime:(long long)arg1;
- (void)setLibraryIdentifiers:(id)arg1;
- (void)setLikedState:(int)arg1;
- (void)setLongDescription:(id)arg1;
- (void)setMediaType:(int)arg1;
- (void)setModificationDateTime:(long long)arg1;
- (void)setMovie:(id)arg1;
- (void)setNeedsReporting:(bool)arg1;
- (void)setPlayCount:(int)arg1;
- (void)setPlayCountDelta:(int)arg1;
- (void)setPodcast:(id)arg1;
- (void)setPurchaseDateTime:(long long)arg1;
- (void)setPurchaseHistoryId:(long long)arg1;
- (void)setPurchaseHistoryRedownloadParams:(id)arg1;
- (void)setPurchaseHistoryToken:(int)arg1;
- (void)setReleaseDateTime:(long long)arg1;
- (void)setRememberBookmark:(bool)arg1;
- (void)setSagaId:(long long)arg1;
- (void)setSagaRedownloadParams:(id)arg1;
- (void)setShortDescription:(id)arg1;
- (void)setSkipCount:(int)arg1;
- (void)setSkipCountDelta:(int)arg1;
- (void)setSong:(id)arg1;
- (void)setSortTitle:(id)arg1;
- (void)setStoreAssetFlavor:(id)arg1;
- (void)setStoreId:(long long)arg1;
- (void)setStorePlaylistId:(long long)arg1;
- (void)setStoreXID:(id)arg1;
- (void)setStorefrontId:(long long)arg1;
- (void)setSubscriptionStoreItemId:(long long)arg1;
- (void)setTitle:(id)arg1;
- (void)setTvShow:(id)arg1;
- (void)setYear:(int)arg1;
- (id)shortDescription;
- (int)skipCount;
- (int)skipCountDelta;
- (id)song;
- (id)sortTitle;
- (id)storeAssetFlavor;
- (long long)storeId;
- (long long)storePlaylistId;
- (id)storeXID;
- (long long)storefrontId;
- (long long)subscriptionStoreItemId;
- (id)title;
- (id)tvShow;
- (void)writeTo:(id)arg1;
- (int)year;

@end
