/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FrontBoard.framework/FrontBoard
 */

@interface FBWindowContextHostManager : NSObject <FBWindowContextHostViewDelegate> {
    FBWindowContextManager *_contextManager;
    UIColor *_defaultBackgroundColorWhileHosting;
    UIColor *_defaultBackgroundColorWhileNotHosting;
    <FBWindowContextHostManagerDelegate> *_delegate;
    struct { 
        unsigned int delegateOverrideRequester : 1; 
        unsigned int delegateShouldEnableContextHostingForRequester : 1; 
    } _flags;
    NSMutableDictionary *_hostRequesterInfo;
    FBOrderedRequesters *_hostRequesters;
    FBWindowContextHostView *_hostView;
    NSString *_identifier;
    bool _invalidated;
    NSHashTable *_observers;
    FBScene *_scene;
    bool _suspended;
}

@property(assign,copy) NSString * debugDescription;
@property(assign,copy) UIColor * defaultBackgroundColorWhileHosting;
@property(assign,copy) UIColor * defaultBackgroundColorWhileNotHosting;
@property(assign,readwrite) <FBWindowContextHostManagerDelegate> * delegate;
@property(assign,copy) NSString * description;
@property(assign,readonly) unsigned long long hash;
@property(assign,copy) NSString * identifier;
@property(assign,readonly) FBScene * scene;
@property(assign,readonly) Class superclass;

- (void)_applyRequesterInfo:(id)arg1;
- (id)_hostViewForRequester:(id)arg1;
- (id)_hostViewForRequester:(id)arg1 enableAndOrderFront:(bool)arg2;
- (id)_infoForRequester:(id)arg1;
- (void)_notePropertiesSetOnRealContextHostViewWhichIReallyNeedToChangeAndIKnowWhatImDoingISwear:(id)arg1 originalProperties:(id)arg2 forRequester:(id)arg3;
- (id)_overrideRequesterIfNecessary:(id)arg1;
- (unsigned long long)_populateContextIDs:(unsigned int*)arg1 forSnapshotExcludingContexts:(id)arg2;
- (id)_realContextHostViewWhichIReallyNeedToAccessAndIKnowWhatImDoingISwear;
- (void)_removeRequesterInfo:(id)arg1;
- (struct CGImage { }*)_snapshotCGImageRefForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(bool)arg3 outTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; }*)arg4 outIOSurfaceRef:(id*)arg5;
- (void)_updateHostViewFrameForRequester:(id)arg1;
- (void)addObserver:(id)arg1;
- (unsigned long long)contextCount;
- (void)dealloc;
- (id)defaultBackgroundColorWhileHosting;
- (id)defaultBackgroundColorWhileNotHosting;
- (id)delegate;
- (id)description;
- (void)disableHostingForRequester:(id)arg1;
- (void)enableHostingForRequester:(id)arg1 orderFront:(bool)arg2;
- (void)enableHostingForRequester:(id)arg1 priority:(long long)arg2;
- (id)hostViewForRequester:(id)arg1;
- (id)hostViewForRequester:(id)arg1 appearanceStyle:(unsigned long long)arg2;
- (id)hostViewForRequester:(id)arg1 enableAndOrderFront:(bool)arg2;
- (id)hostViewForRequester:(id)arg1 enableAndOrderFront:(bool)arg2 appearanceStyle:(unsigned long long)arg3;
- (id)identifier;
- (id)initWithContextManager:(id)arg1 scene:(id)arg2;
- (void)invalidate;
- (void)orderRequesterFront:(id)arg1;
- (void)removeObserver:(id)arg1;
- (void)resumeContextHosting;
- (id)scene;
- (void)setContextId:(unsigned int)arg1 hidden:(bool)arg2 forRequester:(id)arg3;
- (void)setDefaultBackgroundColorWhileHosting:(id)arg1;
- (void)setDefaultBackgroundColorWhileNotHosting:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (struct CGImage { }*)snapshotCGImageRefForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(bool)arg3 outTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; }*)arg4;
- (struct __IOSurface { }*)snapshotIOSurfaceForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(bool)arg3 outTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; }*)arg4;
- (id)snapshotUIImageForFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(bool)arg3 outTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; }*)arg4;
- (id)snapshotViewWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 excludingContexts:(id)arg2 opaque:(bool)arg3;
- (void)suspendContextHosting;
- (id)visibleContexts;
- (void)windowContextHostViewHostedContextsDidChange:(id)arg1;

@end
