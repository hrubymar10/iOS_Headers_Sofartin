/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/IMDaemonCore.framework/IMDaemonCore
 */

@interface IMDAccount : NSObject <IMSystemMonitorListener> {
    NSString *_account;
    NSMutableDictionary *_accountDefaults;
    bool _isLoading;
    bool _isManaged;
    NSDictionary *_lastPostedStatus;
    NSMutableDictionary *_myStatus;
    IMDService *_service;
    IMDServiceSession *_session;
}

@property(assign,retain) NSDictionary * accountDefaults;
@property(assign,retain) NSString * accountID;
@property(assign,retain) NSDictionary * accountInfoToPost;
@property(assign,readonly) bool isActive;
@property(assign,readonly) bool isDisabled;
@property(assign,readwrite) bool isLoading;
@property(assign,readwrite) bool isManaged;
@property(assign,retain) NSString * loginID;
@property(assign,retain) NSDictionary * registrationAlertInfo;
@property(assign,readonly) int registrationError;
@property(assign,readonly) int registrationStatus;
@property(assign,retain) IMDService * service;
@property(assign,retain) IMDServiceSession * session;
@property(assign,readonly) bool shouldPublishNowPlaying;
@property(assign,retain) NSDictionary * status;
@property(assign,retain) NSDictionary * statusToPost;
@property(assign,retain) NSDictionary * statusToSave;
@property(assign,readwrite) bool wasDisabledAutomatically;

- (id)_registrationInfo;
- (void)_updateIdle;
- (id)accountDefaults;
- (id)accountID;
- (id)accountInfoToPost;
- (void)changeStatus:(id)arg1;
- (void)createSessionIfNecessary;
- (void)dealloc;
- (id)initWithAccountID:(id)arg1 defaults:(id)arg2 service:(id)arg3;
- (bool)isActive;
- (bool)isDisabled;
- (bool)isLoading;
- (bool)isManaged;
- (id)loginID;
- (void)postAccountCapabilities;
- (void)postAccountCapabilitiesToListener:(id)arg1;
- (id)registrationAlertInfo;
- (int)registrationError;
- (int)registrationStatus;
- (void)releaseSession;
- (id)service;
- (id)session;
- (void)setIsLoading:(bool)arg1;
- (void)setIsManaged:(bool)arg1;
- (void)setRegistrationStatus:(int)arg1 error:(int)arg2 alertInfo:(id)arg3;
- (void)setWasDisabledAutomatically:(bool)arg1;
- (bool)shouldPublishNowPlaying;
- (id)status;
- (id)statusToPost;
- (id)statusToSave;
- (void)systemDidBecomeIdle;
- (void)systemDidBecomeUnidle;
- (void)tunesController:(id)arg1 playerInfoChanged:(id)arg2;
- (bool)wasDisabledAutomatically;
- (void)writeAccountDefaults:(id)arg1;

@end
