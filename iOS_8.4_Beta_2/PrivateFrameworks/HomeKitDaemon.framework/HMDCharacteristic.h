/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDCharacteristic : NSObject <NSSecureCoding> {
    HMDAccessory *_accessory;
    NSData *_authorizationData;
    NSNumber *_characteristicInstanceID;
    HMDCharacteristicMetadata *_characteristicMetadata;
    long long _characteristicProperties;
    NSString *_characteristicType;
    HAPCharacteristic *_hapCharacteristic;
    bool _notificationEnabled;
    HMDService *_service;
}

@property(assign,readonly) HMDAccessory * accessory;
@property(assign,copy) NSData * authorizationData;
@property(assign,readonly) HAPCharacteristic * characteristic;
@property(assign,retain) NSNumber * characteristicInstanceID;
@property(assign,retain) HMDCharacteristicMetadata * characteristicMetadata;
@property(assign,readwrite) long long characteristicProperties;
@property(assign,retain) NSString * characteristicType;
@property(assign,retain) HAPCharacteristic * hapCharacteristic;
@property(assign,copy) NSNumber * instanceID;
@property(assign,readonly) HMDCharacteristicMetadata * metadata;
@property(assign,readwrite) bool notificationEnabled;
@property(assign,readonly) long long properties;
@property(assign,readonly) HMDService * service;
@property(assign,copy) NSString * type;
@property(assign,copy) id value;

+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)accessory;
- (id)authorizationData;
- (id)characteristic;
- (id)characteristicInstanceID;
- (id)characteristicMetadata;
- (long long)characteristicProperties;
- (id)characteristicType;
- (void)configureWithCharacteristic:(id)arg1 service:(id)arg2 accessory:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)hapCharacteristic;
- (id)initWithCharacteristic:(id)arg1 service:(id)arg2 accessory:(id)arg3;
- (id)initWithCoder:(id)arg1;
- (id)instanceID;
- (id)metadata;
- (bool)notificationEnabled;
- (long long)properties;
- (id)service;
- (void)setAuthorizationData:(id)arg1;
- (void)setCharacteristicInstanceID:(id)arg1;
- (void)setCharacteristicMetadata:(id)arg1;
- (void)setCharacteristicProperties:(long long)arg1;
- (void)setCharacteristicType:(id)arg1;
- (void)setHapCharacteristic:(id)arg1;
- (void)setNotificationEnabled:(bool)arg1;
- (id)type;
- (void)unconfigure;
- (id)validateValue:(id)arg1 outValue:(id*)arg2;
- (id)value;

@end
