/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterFoundation.framework/GameCenterFoundation
 */

@interface GKGameRecord : GKGame {
    GKPlayer *_player;
}

@property(assign,readonly) unsigned long long achievementPoints;
@property(assign,readonly) unsigned long long achievements;
@property(assign,readonly) NSString * defaultLeaderboardIdentifier;
@property(assign,readonly) unsigned long long friendRank;
@property(assign,retain) GKGameRecordInternal * internal;
@property(assign,readonly) NSDate * lastPlayedDate;
@property(assign,readonly) unsigned long long maxAchievementPoints;
@property(assign,readonly) unsigned long long maxAchievements;
@property(assign,readonly) unsigned long long maxFriendRank;
@property(assign,readonly) unsigned long long maxRank;
@property(assign,readonly) unsigned long long numberOfCategories;
@property(assign,readonly) unsigned long long numberOfLeaderboardSets;
@property(assign,readonly) unsigned long long numberOfLeaderboards;
@property(assign,readonly) bool played;
@property(assign,retain) GKPlayer * player;
@property(assign,readonly) NSDate * purchaseDate;
@property(assign,readonly) unsigned long long rank;
@property(assign,readonly) bool supportsAchievements;
@property(assign,readonly) bool supportsLeaderboardSets;
@property(assign,readonly) bool supportsLeaderboards;

+ (id)cacheKeyForPlayer:(id)arg1 game:(id)arg2;
+ (id)cacheKeyForPlayer:(id)arg1 internal:(id)arg2;
+ (id)gameRecordForPlayer:(id)arg1 game:(id)arg2;
+ (id)internalRepresentationCache;
+ (id)internalRepresentationForPlayer:(id)arg1 game:(id)arg2;
+ (void)invalidateCaches;
+ (void)loadGameRecordForPlayer:(id)arg1 game:(id)arg2 withCompletionHandler:(id)arg3;
+ (void)loadGameRecordsForPlayer:(id)arg1 games:(id)arg2 withCompletionHandler:(id)arg3;
+ (void)partitionGameRecords:(id)arg1 returniOS:(id*)arg2 returnMac:(id*)arg3;
+ (bool)supportsSecureCoding;

- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCoder:(id)arg1;
- (id)initWithInternalRepresentation:(id)arg1;
- (id)initWithInternalRepresentation:(id)arg1 player:(id)arg2;
- (bool)isEqual:(id)arg1;
- (bool)played;
- (id)player;
- (void)setPlayer:(id)arg1;

@end
