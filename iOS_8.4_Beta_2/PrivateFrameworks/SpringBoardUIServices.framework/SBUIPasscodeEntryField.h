/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoardUIServices.framework/SpringBoardUIServices
 */

@interface SBUIPasscodeEntryField : UIView <UITextFieldDelegate> {
    UIColor *_customBackgroundColor;
    <SBUIPasscodeEntryFieldDelegate> *_delegate;
    bool _ignoreCallbacks;
    NSMutableCharacterSet *_numericTrimmingSet;
    bool _resigningFirstResponder;
    UITextField *_textField;
}

@property(assign,retain) UIColor * customBackgroundColor;
@property(assign,copy) NSString * debugDescription;
@property(assign,readwrite) <SBUIPasscodeEntryFieldDelegate> * delegate;
@property(assign,copy) NSString * description;
@property(assign,readonly) unsigned long long hash;
@property(assign,copy) NSString * stringValue;
@property(assign,readonly) Class superclass;
@property(getter=_textField,assign,readonly) UITextField * textField;

- (void)_appendString:(id)arg1;
- (void)_autofillForMesaWithCompletion:(id)arg1;
- (bool)_baseBecomeFirstResponder;
- (bool)_baseResignFirstResponder;
- (void)_deleteLastCharacter;
- (void)_handleKeyUIEvent:(id)arg1 source:(int)arg2;
- (bool)_hasAnyCharacters;
- (void)_resetForFailedPasscode:(bool)arg1 playUnlockFailedSound:(bool)arg2;
- (void)_setLuminosityBoost:(double)arg1;
- (id)_textField;
- (struct CGSize { double x1; double x2; })_viewSize;
- (void)appendString:(id)arg1;
- (bool)becomeFirstResponder;
- (bool)canBecomeFirstResponder;
- (id)customBackgroundColor;
- (void)dealloc;
- (id)delegate;
- (void)deleteLastCharacter;
- (id)initWithDefaultSizeAndLightStyle:(bool)arg1;
- (bool)isFirstResponder;
- (void)notePasscodeFieldDidAcceptEntry;
- (void)notePasscodeFieldTextDidChange;
- (void)reset;
- (void)resetForFailedPasscode;
- (bool)resignFirstResponder;
- (void)setBackgroundAlpha:(double)arg1;
- (void)setCustomBackgroundColor:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setStringValue:(id)arg1;
- (bool)shouldInsertPasscodeText:(id)arg1;
- (id)stringValue;
- (bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementString:(id)arg3;
- (bool)textFieldShouldBeginEditing:(id)arg1;
- (bool)textFieldShouldReturn:(id)arg1;

@end
