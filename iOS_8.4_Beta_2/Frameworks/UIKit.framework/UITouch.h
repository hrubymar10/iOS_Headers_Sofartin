/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UITouch : NSObject <_UIResponderForwardable> {
    <_UITouchPhaseChangeDelegate> *__phaseChangeDelegate;
    UIWindow *__windowServerHitTestWindow;
    struct CGSize { 
        double width; 
        double height; 
    } _displacement;
    bool _eaten;
    long long _edgeType;
    NSMutableArray *_forwardingRecord;
    NSMutableArray *_gestureRecognizers;
    struct CGPoint { 
        double x; 
        double y; 
    } _locationInWindow;
    double _majorRadiusTolerance;
    double _movementMagnitudeSquared;
    unsigned char _pathIdentity;
    unsigned char _pathIndex;
    double _pathMajorRadius;
    long long _phase;
    double _pressure;
    struct CGPoint { 
        double x; 
        double y; 
    } _previousLocationInWindow;
    double _previousPressure;
    long long _savedPhase;
    unsigned long long _tapCount;
    double _timestamp;
    struct { 
        unsigned int _firstTouchForView : 1; 
        unsigned int _isTap : 1; 
        unsigned int _isDelayed : 1; 
        unsigned int _sentTouchesEnded : 1; 
        unsigned int _abandonForwardingRecord : 1; 
    } _touchFlags;
    UIView *_view;
    UIView *_warpedIntoView;
    UIWindow *_window;
}

@property(setter=_setDisplacement:,assign,readwrite) struct CGSize { double x1; double x2; } _displacement;
@property(getter=_isEaten,setter=_setEaten:,assign,readwrite) bool _eaten;
@property(setter=_setEdgeType:,assign,readwrite) long long _edgeType;
@property(setter=_setForwardablePhase:,assign,readwrite) long long _forwardablePhase;
@property(setter=_setPathIdentity:,assign,readwrite) unsigned char _pathIdentity;
@property(setter=_setPathIndex:,assign,readwrite) unsigned char _pathIndex;
@property(setter=_setPhaseChangeDelegate:,assign,retain) <_UITouchPhaseChangeDelegate> * _phaseChangeDelegate;
@property(assign,readonly) double _pressure;
@property(setter=_setResponder:,assign,retain) UIResponder * _responder;
@property(setter=_setWindowServerHitTestWindow:,assign,retain) UIWindow * _windowServerHitTestWindow;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,copy) NSArray * gestureRecognizers;
@property(assign,readonly) unsigned long long hash;
@property(assign,readwrite) bool isTap;
@property(assign,readwrite) double majorRadius;
@property(assign,readonly) double majorRadius;
@property(assign,readwrite) double majorRadiusTolerance;
@property(assign,readonly) double majorRadiusTolerance;
@property(assign,readwrite) long long phase;
@property(assign,readonly) long long phase;
@property(assign,readwrite) bool sentTouchesEnded;
@property(assign,readonly) Class superclass;
@property(assign,readwrite) unsigned long long tapCount;
@property(assign,readonly) unsigned long long tapCount;
@property(assign,readwrite) double timestamp;
@property(assign,readonly) double timestamp;
@property(assign,retain) UIView * view;
@property(assign,retain) UIView * view;
@property(assign,retain) UIView * warpedIntoView;
@property(assign,retain) UIWindow * window;
@property(assign,retain) UIWindow * window;

+ (id)_createTouchesWithGSEvent:(struct __GSEvent { }*)arg1 phase:(long long)arg2 view:(id)arg3;

- (void)_abandonForwardingRecord;
- (void)_addGestureRecognizer:(id)arg1;
- (void)_clearGestureRecognizers;
- (long long)_compareIndex:(id)arg1;
- (struct CGSize { double x1; double x2; })_displacement;
- (double)_distanceFrom:(id)arg1 inView:(id)arg2;
- (long long)_edgeType;
- (long long)_forwardablePhase;
- (id)_forwardingRecord;
- (id)_gestureRecognizers;
- (bool)_isAbandoningForwardingRecord;
- (bool)_isEaten;
- (bool)_isFirstTouchForView;
- (bool)_isStationaryRelativeToTouches:(id)arg1;
- (void)_loadStateFromTouch:(id)arg1;
- (struct CGPoint { double x1; double x2; })_locationInSceneReferenceSpace;
- (struct CGPoint { double x1; double x2; })_locationInWindow:(id)arg1;
- (id)_mutableForwardingRecord;
- (unsigned char)_pathIdentity;
- (unsigned char)_pathIndex;
- (float)_pathMajorRadius;
- (id)_phaseChangeDelegate;
- (id)_phaseDescription;
- (void)_popPhase;
- (double)_pressure;
- (struct CGPoint { double x1; double x2; })_previousLocationInSceneReferenceSpace;
- (struct CGPoint { double x1; double x2; })_previousLocationInWindow:(id)arg1;
- (void)_pushPhase:(long long)arg1;
- (void)_removeGestureRecognizer:(id)arg1;
- (id)_responder;
- (SEL)_responderSelectorForPhase:(long long)arg1;
- (void)_setDisplacement:(struct CGSize { double x1; double x2; })arg1;
- (void)_setEaten:(bool)arg1;
- (void)_setEdgeType:(long long)arg1;
- (void)_setForwardablePhase:(long long)arg1;
- (void)_setIsFirstTouchForView:(bool)arg1;
- (void)_setLocationInWindow:(struct CGPoint { double x1; double x2; })arg1 resetPrevious:(bool)arg2;
- (void)_setPathIdentity:(unsigned char)arg1;
- (void)_setPathIndex:(unsigned char)arg1;
- (void)_setPhaseChangeDelegate:(id)arg1;
- (void)_setPressure:(double)arg1 resetPrevious:(bool)arg2;
- (void)_setResponder:(id)arg1;
- (void)_setWindowServerHitTestWindow:(id)arg1;
- (void)_updateMovementMagnitudeForLocation:(struct CGPoint { double x1; double x2; })arg1;
- (bool)_wantsForwardingFromResponder:(id)arg1 toNextResponder:(id)arg2 withEvent:(id)arg3;
- (id)_windowServerHitTestWindow;
- (void)dealloc;
- (id)description;
- (id)gestureRecognizers;
- (long long)info;
- (bool)isDelayed;
- (bool)isTap;
- (struct CGPoint { double x1; double x2; })locationInNode:(id)arg1;
- (struct CGPoint { double x1; double x2; })locationInView:(id)arg1;
- (double)majorRadius;
- (double)majorRadiusTolerance;
- (long long)phase;
- (struct CGPoint { double x1; double x2; })previousLocationInNode:(id)arg1;
- (struct CGPoint { double x1; double x2; })previousLocationInView:(id)arg1;
- (bool)sentTouchesEnded;
- (void)setIsDelayed:(bool)arg1;
- (void)setIsTap:(bool)arg1;
- (void)setMajorRadius:(double)arg1;
- (void)setMajorRadiusTolerance:(double)arg1;
- (void)setPhase:(long long)arg1;
- (void)setSentTouchesEnded:(bool)arg1;
- (void)setTapCount:(unsigned long long)arg1;
- (void)setTimestamp:(double)arg1;
- (void)setView:(id)arg1;
- (void)setWarpedIntoView:(id)arg1;
- (void)setWindow:(id)arg1;
- (unsigned long long)tapCount;
- (double)timestamp;
- (id)view;
- (id)warpedIntoView;
- (id)window;

@end
