/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIPageControl : UIControl {
    long long _currentPage;
    UIImage *_currentPageImage;
    UIColor *_currentPageIndicatorTintColor;
    long long _displayedPage;
    NSMutableArray *_indicators;
    long long _lastUserInterfaceIdiom;
    _UILegibilitySettings *_legibilitySettings;
    struct { 
        unsigned int hideForSinglePage : 1; 
        unsigned int defersCurrentPageDisplay : 1; 
    } _pageControlFlags;
    UIImage *_pageImage;
    UIColor *_pageIndicatorTintColor;
}

@property(assign,readwrite) long long currentPage;
@property(assign,retain) UIColor * currentPageIndicatorTintColor;
@property(assign,readwrite) bool defersCurrentPageDisplay;
@property(assign,readwrite) bool hidesForSinglePage;
@property(getter=_legibilitySettings,setter=_setLegibilitySettings:,assign,readwrite) _UILegibilitySettings * legibilitySettings;
@property(getter=_legibilityStyle,setter=_setLegibilityStyle:,assign,readwrite) long long legibilityStyle;
@property(assign,readwrite) long long numberOfPages;
@property(assign,retain) UIColor * pageIndicatorTintColor;

- (id)_activePageIndicatorImage;
- (void)_commonPageControlInit;
- (bool)_contentHuggingDefault_isUsuallyFixedHeight;
- (bool)_contentHuggingDefault_isUsuallyFixedWidth;
- (id)_correctIdiomaticNameForImageNamed:(id)arg1;
- (id)_createModernIndicatorImageFromView:(id)arg1;
- (id)_customPageIndicatorCurrentImageForPage:(long long)arg1;
- (id)_customPageIndicatorImageForPage:(long long)arg1;
- (void)_didChangeFromIdiom:(long long)arg1 onScreen:(id)arg2 traverseHierarchy:(bool)arg3;
- (long long)_displayedPage;
- (void)_drawModernIndicatorInView:(id)arg1 enabled:(bool)arg2;
- (bool)_hasCustomImageForPage:(long long)arg1 enabled:(bool)arg2;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_indicatorFrameAtIndex:(long long)arg1;
- (double)_indicatorSpacing;
- (id)_indicatorViewEnabled:(bool)arg1 index:(long long)arg2;
- (id)_indicatorViewEnabled:(bool)arg1 index:(long long)arg2 legible:(bool)arg3;
- (void)_invalidateIndicators;
- (id)_legibilitySettings;
- (long long)_legibilityStyle;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_modernBounds;
- (id)_modernColorEnabled:(bool)arg1;
- (double)_modernCornerRadius;
- (id)_modernIndicatorImageEnabled:(bool)arg1;
- (void)_modernTransitionIndicator:(id)arg1 toEnabled:(bool)arg2 index:(long long)arg3 legible:(bool)arg4;
- (id)_pageIndicatorCurrentImageForPage:(long long)arg1;
- (id)_pageIndicatorImage;
- (id)_pageIndicatorImageForPage:(long long)arg1;
- (void)_populateArchivedSubviews:(id)arg1;
- (void)_setCurrentPage:(long long)arg1;
- (void)_setDisplayedPage:(long long)arg1;
- (void)_setLegibilitySettings:(id)arg1;
- (void)_setLegibilityStyle:(long long)arg1;
- (bool)_shouldDrawLegibly;
- (void)_transitionIndicator:(id)arg1 toEnabled:(bool)arg2 index:(long long)arg3;
- (void)_transitionIndicator:(id)arg1 toEnabled:(bool)arg2 index:(long long)arg3 legible:(bool)arg4;
- (void)_updateCurrentPageDisplay;
- (long long)currentPage;
- (id)currentPageIndicatorTintColor;
- (void)dealloc;
- (bool)defersCurrentPageDisplay;
- (void)encodeWithCoder:(id)arg1;
- (void)endTrackingWithTouch:(id)arg1 withEvent:(id)arg2;
- (bool)gestureRecognizerShouldBegin:(id)arg1;
- (bool)hidesForSinglePage;
- (id)initWithCoder:(id)arg1;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (struct CGSize { double x1; double x2; })intrinsicContentSize;
- (bool)isElementAccessibilityExposedToInterfaceBuilder;
- (void)layoutSubviews;
- (long long)numberOfPages;
- (id)pageIndicatorTintColor;
- (void)setCurrentPage:(long long)arg1;
- (void)setCurrentPageIndicatorTintColor:(id)arg1;
- (void)setDefersCurrentPageDisplay:(bool)arg1;
- (void)setHidesForSinglePage:(bool)arg1;
- (void)setNumberOfPages:(long long)arg1;
- (void)setPageIndicatorTintColor:(id)arg1;
- (struct CGSize { double x1; double x2; })sizeForNumberOfPages:(long long)arg1;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)updateCurrentPageDisplay;

@end
