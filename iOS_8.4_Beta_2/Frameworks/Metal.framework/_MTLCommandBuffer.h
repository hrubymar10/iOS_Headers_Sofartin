/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Metal.framework/Metal
 */

@interface _MTLCommandBuffer : NSObject {
    unsigned long long _commitTime;
    bool _completedCallbacksDone;
    struct MTLDispatch { struct MTLDispatch {} *x1; id x2; /* Warning: Unrecognized filer type: '?' using 'void*' */ void*x3; } *_completedDispatchList;
    unsigned long long _completionHandlerEnqueueTime;
    unsigned long long _completionHandlerExecutionTime;
    unsigned long long _completionInterruptTime;
    struct _opaque_pthread_cond_t { 
        long long __sig; 
        BOOL __opaque[40]; 
    } _cond;
    unsigned long long _creationTime;
    <MTLCommandEncoder> *_currentCommandEncoder;
    unsigned long long _enqueueTime;
    MTLError *_error;
    unsigned long long _kernelCompleteTime;
    unsigned long long _kernelScheduledTime;
    NSString *_label;
    struct _opaque_pthread_mutex_t { 
        long long __sig; 
        BOOL __opaque[56]; 
    } _mutex;
    bool _profilingEnabled;
    NSDictionary *_profilingResults;
    _MTLCommandQueue<MTLCommandQueue> *_queue;
    bool _retainedReferences;
    bool _scheduledCallbacksDone;
    struct MTLDispatch { struct MTLDispatch {} *x1; id x2; /* Warning: Unrecognized filer type: '?' using 'void*' */ void*x3; } *_scheduledDispatchList;
    bool _skipRender;
    unsigned long long _status;
    bool _strongObjectReferences;
    unsigned long long _submitToHardwareTime;
    unsigned long long _submitToKernelTime;
    bool _synchronousDebugMode;
}

@property(assign,readonly) <MTLCommandQueue> * commandQueue;
@property(assign,readonly) NSError * error;
@property(assign,copy) NSString * label;
@property(getter=isProfilingEnabled,assign,readwrite) bool profilingEnabled;
@property(assign,readonly) NSDictionary * profilingResults;
@property(assign,readonly) bool retainedReferences;
@property(assign,readonly) unsigned long long status;
@property(assign,readonly) bool synchronousDebugMode;

+ (void)initialize;

- (void)addCompletedHandler:(id)arg1;
- (void)addScheduledHandler:(id)arg1;
- (id)commandQueue;
- (void)commit;
- (void)commitAndReset;
- (void)dealloc;
- (id)description;
- (void)didComplete:(unsigned long long)arg1 error:(unsigned int)arg2;
- (void)didSchedule:(unsigned long long)arg1 error:(unsigned int)arg2;
- (void)enqueue;
- (id)error;
- (id)initWithQueue:(id)arg1 retainedReferences:(bool)arg2;
- (id)initWithQueue:(id)arg1 retainedReferences:(bool)arg2 synchronousDebugMode:(bool)arg3;
- (bool)isCommitted;
- (bool)isProfilingEnabled;
- (void)kernelSubmitTime;
- (id)label;
- (void)presentDrawable:(id)arg1;
- (void)presentDrawable:(id)arg1 atTime:(double)arg2;
- (id)profilingResults;
- (bool)retainedReferences;
- (void)setCommitted:(bool)arg1;
- (void)setCurrentCommandEncoder:(id)arg1;
- (void)setLabel:(id)arg1;
- (void)setProfilingEnabled:(bool)arg1;
- (bool)skipRender;
- (unsigned long long)status;
- (bool)synchronousDebugMode;
- (void)waitUntilCompleted;
- (void)waitUntilScheduled;

@end
