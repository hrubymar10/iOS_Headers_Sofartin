/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@interface AVURLAsset : AVAsset {
    AVURLAssetInternal *_URLAsset;
}

@property(assign,copy) NSURL * URL;
@property(assign,readonly) AVAssetCache * assetCache;
@property(assign,readonly) NSString * cacheKey;
@property(assign,readonly) double rc_durationInSeconds;
@property(assign,readonly) AVAssetResourceLoader * resourceLoader;
@property(assign,readonly) bool shouldMatchDataInCacheByURLPathComponentOnly;
@property(assign,readonly) bool shouldMatchDataInCacheByURLWithoutQueryComponent;

+ (id)URLAssetWithURL:(id)arg1 options:(id)arg2;
+ (id)_UTTypes;
+ (id)_avfValidationPlist;
+ (id)_figFileMIMETypes;
+ (id)_figFilePathExtensions;
+ (id)_figMIMETypes;
+ (id)_figStreamingMIMETypes;
+ (id)_fileUTTypes;
+ (id)_streamingUTTypes;
+ (id)audiovisualMIMETypes;
+ (id)audiovisualTypes;
+ (bool)isPlayableExtendedMIMEType:(id)arg1;
+ (id)rc_preciseTimingAssetWithURL:(id)arg1;

- (id)SHA1Digest;
- (id)URL;
- (id)_absoluteURL;
- (void)_addFigAssetNotifications;
- (id)_assetInspector;
- (id)_assetInspectorLoader;
- (Class)_classForTrackInspectors;
- (id)_errorForFigNotificationPayload:(struct __CFDictionary { }*)arg1 key:(struct __CFString { }*)arg2;
- (void)_finishLoadingCustomURLProviderRequestWithResponseProperties:(id)arg1 context:(id)arg2;
- (struct OpaqueFigFormatReader { }*)_formatReader;
- (id)_handleURLAssetInitializationOptionsReturningFigAssetCreationOptions:(id)arg1 selector:(SEL)arg2;
- (void)_handleURLRequest:(id)arg1;
- (bool)_hasResourceLoaderDelegate;
- (struct OpaqueFigPlaybackItem { }*)_playbackItem;
- (void)_removeFigAssetNotifications;
- (void)_setAssetInspectorLoader:(id)arg1;
- (bool)_shouldOptimizeAccessForLinearMoviePlayback;
- (id)_tracks;
- (void)_tracksDidChange;
- (id)assetCache;
- (id)cacheKey;
- (void)cancelLoading;
- (void)dealloc;
- (id)description;
- (id)downloadDestinationURL;
- (unsigned long long)downloadToken;
- (void)finalize;
- (id)init;
- (id)initWithURL:(id)arg1 options:(id)arg2;
- (id)lyrics;
- (double)rc_durationInSeconds;
- (unsigned long long)referenceRestrictions;
- (id)resolvedURL;
- (id)resourceLoader;
- (bool)shouldMatchDataInCacheByURLPathComponentOnly;
- (bool)shouldMatchDataInCacheByURLWithoutQueryComponent;
- (id)tracks;

@end
