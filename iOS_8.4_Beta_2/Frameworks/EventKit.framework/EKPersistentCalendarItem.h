/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKit.framework/EventKit
 */

@interface EKPersistentCalendarItem : EKPersistentObject

@property(assign,copy) NSURL * URL;
@property(assign,readonly) NSString * UUID;
@property(assign,copy) NSURL * action;
@property(assign,copy) NSSet * alarms;
@property(getter=isAllDay,assign,readwrite) bool allDay;
@property(assign,copy) NSSet * attachments;
@property(assign,copy) NSSet * attendees;
@property(assign,retain) EKPersistentCalendar * calendar;
@property(assign,copy) NSString * calendarScale;
@property(assign,copy) NSDate * creationDate;
@property(getter=isDefaultAlarmRemoved,assign,readwrite) bool defaultAlarmRemoved;
@property(getter=isDetached,assign,readonly) bool detached;
@property(assign,copy) NSSet * detachedItems;
@property(assign,copy) NSTimeZone * endTimeZone;
@property(assign,copy) NSSet * exceptionDates;
@property(assign,copy) NSData * externalData;
@property(assign,copy) NSString * externalID;
@property(assign,readonly) bool hasAlarms;
@property(assign,readonly) bool hasAttendees;
@property(assign,readonly) bool hasNotes;
@property(assign,readonly) bool hasRecurrenceRules;
@property(assign,copy) NSDate * lastModifiedDate;
@property(assign,copy) EKPersistentLocation * location;
@property(assign,copy) NSString * notes;
@property(assign,retain) EKPersistentOrganizer * organizer;
@property(assign,retain) EKPersistentCalendarItem * originalItem;
@property(assign,copy) NSDate * participationStatusModifiedDate;
@property(assign,readwrite) int priority;
@property(assign,copy) NSSet * recurrenceRules;
@property(assign,retain) EKPersistentAttendee * selfAttendee;
@property(assign,readonly) int selfParticipantStatus;
@property(assign,readwrite) int sequence;
@property(assign,copy) NSString * sharedItemCreatedByDisplayName;
@property(assign,copy) NSString * sharedItemCreatedByEmailAddress;
@property(assign,copy) NSString * sharedItemCreatedByFirstName;
@property(assign,copy) NSString * sharedItemCreatedByLastName;
@property(assign,copy) NSDate * sharedItemCreatedDate;
@property(assign,copy) NSTimeZone * sharedItemCreatedTimeZone;
@property(assign,copy) NSString * sharedItemModifiedByDisplayName;
@property(assign,copy) NSString * sharedItemModifiedByEmailAddress;
@property(assign,copy) NSString * sharedItemModifiedByFirstName;
@property(assign,copy) NSString * sharedItemModifiedByLastName;
@property(assign,copy) NSDate * sharedItemModifiedDate;
@property(assign,copy) NSTimeZone * sharedItemModifiedTimeZone;
@property(assign,copy) NSDate * startDate;
@property(assign,copy) EKPersistentLocation * startLocation;
@property(assign,copy) NSTimeZone * startTimeZone;
@property(assign,copy) NSTimeZone * timeZone;
@property(assign,copy) NSString * title;
@property(assign,copy) NSString * uniqueID;

+ (id)defaultPropertiesToLoad;
+ (id)relations;

- (id)URL;
- (id)UUID;
- (id)action;
- (void)addAlarm:(id)arg1;
- (void)addAttachment:(id)arg1;
- (void)addAttendee:(id)arg1;
- (void)addDetachedItem:(id)arg1;
- (void)addExceptionDate:(id)arg1;
- (void)addRecurrenceRule:(id)arg1;
- (id)alarms;
- (id)attachments;
- (int)attendeeCount;
- (id)attendees;
- (id)calendar;
- (id)calendarScale;
- (id)creationDate;
- (void)deleteSelfAndDetached;
- (id)detachedItems;
- (id)endTimeZone;
- (id)exceptionDates;
- (id)externalData;
- (id)externalID;
- (id)externalModificationTag;
- (bool)hasAlarms;
- (bool)hasAttachments;
- (bool)hasAttendees;
- (bool)hasNotes;
- (bool)hasRecurrenceRules;
- (id)init;
- (bool)isAllDay;
- (bool)isDefaultAlarmRemoved;
- (bool)isDetached;
- (id)lastModifiedDate;
- (id)location;
- (id)notes;
- (id)organizer;
- (id)originalItem;
- (id)participationStatusModifiedDate;
- (void)primitiveValueChangedForKey:(id)arg1;
- (int)priority;
- (id)recurrenceRules;
- (void)removeAlarm:(id)arg1;
- (void)removeAttachment:(id)arg1;
- (void)removeAttendee:(id)arg1;
- (void)removeDetachedItem:(id)arg1;
- (void)removeExceptionDate:(id)arg1;
- (void)removeRecurrenceRule:(id)arg1;
- (id)selfAttendee;
- (int)selfParticipantStatus;
- (int)sequence;
- (void)setAction:(id)arg1;
- (void)setAlarms:(id)arg1;
- (void)setAllDay:(bool)arg1;
- (void)setAttachments:(id)arg1;
- (void)setAttendees:(id)arg1;
- (void)setCalendar:(id)arg1;
- (void)setCalendarScale:(id)arg1;
- (void)setCreationDate:(id)arg1;
- (void)setDefaultAlarmRemoved:(bool)arg1;
- (void)setDetachedItems:(id)arg1;
- (void)setEndTimeZone:(id)arg1;
- (void)setExceptionDates:(id)arg1;
- (void)setExternalData:(id)arg1;
- (void)setExternalID:(id)arg1;
- (void)setExternalModificationTag:(id)arg1;
- (void)setLastModifiedDate:(id)arg1;
- (void)setLocation:(id)arg1;
- (void)setNotes:(id)arg1;
- (void)setOrganizer:(id)arg1;
- (void)setOriginalItem:(id)arg1;
- (void)setParticipationStatusModifiedDate:(id)arg1;
- (void)setPriority:(int)arg1;
- (void)setRecurrenceRules:(id)arg1;
- (void)setSelfAttendee:(id)arg1;
- (void)setSequence:(int)arg1;
- (void)setSharedItemCreatedByDisplayName:(id)arg1;
- (void)setSharedItemCreatedByEmailAddress:(id)arg1;
- (void)setSharedItemCreatedByFirstName:(id)arg1;
- (void)setSharedItemCreatedByLastName:(id)arg1;
- (void)setSharedItemCreatedDate:(id)arg1;
- (void)setSharedItemCreatedTimeZone:(id)arg1;
- (void)setSharedItemModifiedByDisplayName:(id)arg1;
- (void)setSharedItemModifiedByEmailAddress:(id)arg1;
- (void)setSharedItemModifiedByFirstName:(id)arg1;
- (void)setSharedItemModifiedByLastName:(id)arg1;
- (void)setSharedItemModifiedDate:(id)arg1;
- (void)setSharedItemModifiedTimeZone:(id)arg1;
- (void)setStartDate:(id)arg1;
- (void)setStartLocation:(id)arg1;
- (void)setStartTimeZone:(id)arg1;
- (void)setTimeZone:(id)arg1;
- (void)setTitle:(id)arg1;
- (void)setURL:(id)arg1;
- (void)setUniqueID:(id)arg1;
- (id)sharedItemCreatedByDisplayName;
- (id)sharedItemCreatedByEmailAddress;
- (id)sharedItemCreatedByFirstName;
- (id)sharedItemCreatedByLastName;
- (id)sharedItemCreatedDate;
- (id)sharedItemCreatedTimeZone;
- (id)sharedItemModifiedByDisplayName;
- (id)sharedItemModifiedByEmailAddress;
- (id)sharedItemModifiedByFirstName;
- (id)sharedItemModifiedByLastName;
- (id)sharedItemModifiedDate;
- (id)sharedItemModifiedTimeZone;
- (id)startDate;
- (id)startLocation;
- (id)startTimeZone;
- (id)timeZone;
- (id)title;
- (id)uniqueID;
- (bool)validate:(id*)arg1;

@end
