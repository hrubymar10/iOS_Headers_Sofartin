/* Generated by RuntimeBrowser
   Image: /usr/lib/libextension.dylib
 */

@interface NSExtension : NSObject <_NSExtensionContextHosting> {
    long long __assertionRefCount;
    NSBundle *__extensionBundle;
    NSMutableDictionary *__extensionContexts;
    NSMutableDictionary *__extensionExpirationIdentifiers;
    BKSProcessAssertion *__extensionProcessAssertion;
    NSMutableDictionary *__extensionServiceConnections;
    <PKPlugIn> *__plugIn;
    id __requestPostCompletionBlock;
    id __requestPostCompletionBlockWithItems;
    NSObject<OS_dispatch_queue> *__safePluginQueue;
    NSDictionary *_attributes;
    NSString *_extensionPointIdentifier;
    NSString *_identifier;
    NSDictionary *_infoDictionary;
    bool _observingHostAppStateChanges;
    id _requestCancellationBlock;
    id _requestCompletionBlock;
    id _requestInterruptionBlock;
    NSString *_version;
}

@property (setter=_setAssertionRefCount:, nonatomic) long long _assertionRefCount;
@property (setter=_setExtensionBundle:, nonatomic, retain) NSBundle *_extensionBundle;
@property (setter=_setExtensionContexts:, nonatomic, retain) NSMutableDictionary *_extensionContexts;
@property (setter=_setExtensionExpirationsIdentifiers:, nonatomic, retain) NSMutableDictionary *_extensionExpirationIdentifiers;
@property (setter=_setExtensionProcessAssertion:, nonatomic, retain) BKSProcessAssertion *_extensionProcessAssertion;
@property (setter=_setExtensionServiceConnections:, nonatomic, retain) NSMutableDictionary *_extensionServiceConnections;
@property (getter=_extensionState, setter=_setExtensionState:, nonatomic, copy) NSDictionary *_extensionState;
@property (getter=_isMarkedNew, nonatomic, readonly) bool _markedNew;
@property (setter=_setPlugIn:, nonatomic, retain) <PKPlugIn> *_plugIn;
@property (nonatomic, copy) id _requestPostCompletionBlock;
@property (nonatomic, copy) id _requestPostCompletionBlockWithItems;
@property (nonatomic) NSObject<OS_dispatch_queue> *_safePluginQueue;
@property (nonatomic, copy) NSDictionary *attributes;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, copy) NSString *extensionPointIdentifier;
@property (readonly) unsigned long long hash;
@property (nonatomic, copy) NSArray *icons;
@property (nonatomic, copy) NSString *identifier;
@property (nonatomic, copy) NSDictionary *infoDictionary;
@property (getter=_isObservingHostAppStateChanges, setter=_setObservingHostAppStateChanges:, nonatomic) bool observingHostAppStateChanges;
@property (nonatomic, readonly) bool optedIn;
@property (nonatomic, copy) id requestCancellationBlock;
@property (nonatomic, copy) id requestCompletionBlock;
@property (nonatomic, copy) id requestInterruptionBlock;
@property (readonly) Class superclass;
@property (nonatomic, copy) NSString *version;

+ (bool)_shouldLogExtensionDiscovery;
+ (id)beginMatchingExtensionsWithAttributes:(id)arg1 completion:(id)arg2;
+ (void)endMatchingExtensions:(id)arg1;
+ (bool)evaluateActivationRule:(id)arg1 withExtensionItemsRepresentation:(id)arg2;
+ (id)extensionWithIdentifier:(id)arg1 error:(id*)arg2;
+ (void)extensionsWithMatchingAttributes:(id)arg1 completion:(id)arg2;
+ (id)extensionsWithMatchingAttributes:(id)arg1 error:(id*)arg2;
+ (void)initialize;
+ (void)initializeFiltering;
+ (id)predicateForActivationRule:(id)arg1;

- (id)__UIKit_upcall_icons;
- (long long)_assertionRefCount;
- (id)_bareExtensionServiceConnection;
- (void)_cancelRequestWithError:(id)arg1 forExtensionContextWithUUID:(id)arg2 completion:(id)arg3;
- (void)_completeRequestReturningItems:(id)arg1 forExtensionContextWithUUID:(id)arg2 completion:(id)arg3;
- (void)_didCreateExtensionContext:(id)arg1;
- (void)_didShowExtensionManagementInterface;
- (void)_didShowNewExtensionIndicator;
- (id)_extensionBundle;
- (id)_extensionContextForUUID:(id)arg1;
- (id)_extensionContexts;
- (id)_extensionExpirationIdentifiers;
- (id)_extensionProcessAssertion;
- (id)_extensionServiceConnections;
- (id)_extensionState;
- (void)_hostDidBecomeActiveNote:(id)arg1;
- (void)_hostDidEnterBackgroundNote:(id)arg1;
- (void)_hostWillEnterForegroundNote:(id)arg1;
- (void)_hostWillResignActiveNote:(id)arg1;
- (id)_initWithPKPlugin:(id)arg1;
- (bool)_isMarkedNew;
- (bool)_isObservingHostAppStateChanges;
- (bool)_isPhotoServiceAccessGranted;
- (bool)_isSystemExtension;
- (id)_itemProviderForPayload:(id)arg1 extensionContext:(id)arg2;
- (void)_kill:(int)arg1;
- (void)_loadItemForPayload:(id)arg1 contextIdentifier:(id)arg2 completionHandler:(id)arg3;
- (void)_loadPreviewImageForPayload:(id)arg1 contextIdentifier:(id)arg2 completionHandler:(id)arg3;
- (void)_openURL:(id)arg1 completion:(id)arg2;
- (id)_plugIn;
- (int)_plugInProcessIdentifier;
- (void)_reallyBeginExtensionRequestWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 completion:(id)arg3;
- (id)_requestPostCompletionBlock;
- (id)_requestPostCompletionBlockWithItems;
- (void)_resetExtensionState;
- (id)_safePluginQueue;
- (void)_safelyBeginUsing:(id)arg1;
- (void)_safelyEndUsing:(id)arg1;
- (void)_setAssertionRefCount:(long long)arg1;
- (void)_setExtensionBundle:(id)arg1;
- (void)_setExtensionContexts:(id)arg1;
- (void)_setExtensionExpirationsIdentifiers:(id)arg1;
- (void)_setExtensionProcessAssertion:(id)arg1;
- (void)_setExtensionServiceConnections:(id)arg1;
- (void)_setExtensionState:(id)arg1;
- (void)_setObservingHostAppStateChanges:(bool)arg1;
- (void)_setPlugIn:(id)arg1;
- (bool)attemptOptIn:(id*)arg1;
- (bool)attemptOptOut:(id*)arg1;
- (id)attributes;
- (void)beginExtensionRequestWithInputItems:(id)arg1 completion:(id)arg2;
- (void)beginExtensionRequestWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 completion:(id)arg3;
- (void)cancelExtensionRequestWithIdentifier:(id)arg1;
- (void)dealloc;
- (id)description;
- (id)extensionPointIdentifier;
- (unsigned long long)hash;
- (id)icons;
- (id)identifier;
- (id)infoDictionary;
- (id)init;
- (void)instantiateViewControllerWithInputItems:(id)arg1 connectionHandler:(id)arg2;
- (void)instantiateViewControllerWithInputItems:(id)arg1 listenerEndpoint:(id)arg2 connectionHandler:(id)arg3;
- (bool)isEqual:(id)arg1;
- (id)objectForInfoDictionaryKey:(id)arg1;
- (bool)optedIn;
- (int)pidForRequestIdentifier:(id)arg1;
- (id)requestCancellationBlock;
- (id)requestCompletionBlock;
- (id)requestInterruptionBlock;
- (void)setAttributes:(id)arg1;
- (void)setExtensionPointIdentifier:(id)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setInfoDictionary:(id)arg1;
- (void)setRequestCancellationBlock:(id)arg1;
- (void)setRequestCompletionBlock:(id)arg1;
- (void)setRequestInterruptionBlock:(id)arg1;
- (void)setVersion:(id)arg1;
- (void)set_requestPostCompletionBlock:(id)arg1;
- (void)set_requestPostCompletionBlockWithItems:(id)arg1;
- (void)set_safePluginQueue:(id)arg1;
- (id)version;

@end
