/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CoreData.framework/CoreData
 */

@interface PFUbiquitySwitchboardEntryMetadata : NSObject {
    NSString *_activeModelVersionHash;
    PFUbiquityBaselineHeuristics *_baselineHeuristics;
    PFUbiquitySwitchboardCacheWrapper *_cacheWrapper;
    _PFUbiquityRecordsExporter *_exporter;
    _PFUbiquityRecordsImporter *_importer;
    NSString *_localPeerID;
    PFUbiquityLocation *_localRootLocation;
    NSPersistentStoreCoordinator *_privatePSC;
    NSObject<OS_dispatch_queue> *_privateQueue;
    NSSQLCore *_privateStore;
    PFUbiquityRecordsImporterSchedulingContext *_schedulingContext;
    NSString *_storeName;
    NSMutableSet *_stores;
    PFUbiquityLocation *_ubiquityRootLocation;
    bool _useLocaAccount;
    bool _useLocalStorage;
}

@property(assign,readonly) NSString * activeModelVersionHash;
@property(assign,readonly) PFUbiquityBaselineHeuristics * baselineHeuristics;
@property(assign,retain) PFUbiquitySwitchboardCacheWrapper * cacheWrapper;
@property(assign,readonly) _PFUbiquityRecordsExporter * exporter;
@property(assign,readonly) _PFUbiquityRecordsImporter * importer;
@property(assign,readonly) NSPersistentStoreCoordinator * privatePSC;
@property(assign,readonly) NSSQLCore * privateStore;
@property(assign,readonly) PFUbiquityRecordsImporterSchedulingContext * schedulingContext;
@property(assign,readonly) NSSet * stores;
@property(assign,retain) PFUbiquityLocation * ubiquityRootLocation;
@property(assign,readwrite) bool useLocalAccount;
@property(assign,readwrite) bool useLocalStorage;

- (id)activeModelVersionHash;
- (void)addPersistentStore:(id)arg1;
- (id)baselineHeuristics;
- (id)cacheWrapper;
- (void)dealloc;
- (id)exporter;
- (id)importer;
- (id)initWithLocalPeerID:(id)arg1 ubiquityRootLocation:(id)arg2 localRootLocation:(id)arg3 storeName:(id)arg4 andPrivateQueue:(id)arg5;
- (id)privatePSC;
- (id)privateStore;
- (void)removePersistentStore:(id)arg1;
- (id)schedulingContext;
- (void)setCacheWrapper:(id)arg1;
- (void)setUbiquityRootLocation:(id)arg1;
- (void)setUseLocalAccount:(bool)arg1;
- (void)setUseLocalStorage:(bool)arg1;
- (id)stores;
- (void)tearDown;
- (id)ubiquityRootLocation;
- (bool)useLocalAccount;
- (bool)useLocalStorage;

@end
