/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface WKWebViewConfiguration : NSObject <NSCopying> {
    bool _allowsInlineMediaPlayback;
    struct WeakObjCPtr<WKWebView> { 
        id m_weakReference; 
    } _alternateWebViewForNavigationGestures;
    struct LazyInitialized<WKWebViewContentProviderRegistry> { 
        bool m_isInitialized; 
        struct RetainPtr<WKWebViewContentProviderRegistry> { 
            void *m_ptr; 
        } m_value; 
    } _contentProviderRegistry;
    bool _featureCounterEnabled;
    struct RetainPtr<NSString> { 
        void *m_ptr; 
    } _groupIdentifier;
    bool _mediaPlaybackAllowsAirPlay;
    bool _mediaPlaybackRequiresUserAction;
    struct LazyInitialized<WKPreferences> { 
        bool m_isInitialized; 
        struct RetainPtr<WKPreferences> { 
            void *m_ptr; 
        } m_value; 
    } _preferences;
    struct LazyInitialized<WKProcessPool> { 
        bool m_isInitialized; 
        struct RetainPtr<WKProcessPool> { 
            void *m_ptr; 
        } m_value; 
    } _processPool;
    struct WeakObjCPtr<WKWebView> { 
        id m_weakReference; 
    } _relatedWebView;
    long long _selectionGranularity;
    bool _suppressesIncrementalRendering;
    struct LazyInitialized<WKUserContentController> { 
        bool m_isInitialized; 
        struct RetainPtr<WKUserContentController> { 
            void *m_ptr; 
        } m_value; 
    } _userContentController;
    struct LazyInitialized<_WKVisitedLinkProvider> { 
        bool m_isInitialized; 
        struct RetainPtr<_WKVisitedLinkProvider> { 
            void *m_ptr; 
        } m_value; 
    } _visitedLinkProvider;
    struct LazyInitialized<_WKWebsiteDataStore> { 
        bool m_isInitialized; 
        struct RetainPtr<_WKWebsiteDataStore> { 
            void *m_ptr; 
        } m_value; 
    } _websiteDataStore;
}

@property(setter=_setAlternateWebViewForNavigationGestures:,assign,readwrite) WKWebView * _alternateWebViewForNavigationGestures;
@property(setter=_setContentProviderRegistry:,assign,readwrite) WKWebViewContentProviderRegistry * _contentProviderRegistry;
@property(setter=_setFeatureCounterEnabled:,assign,readwrite) bool _featureCounterEnabled;
@property(setter=_setGroupIdentifier:,assign,copy) NSString * _groupIdentifier;
@property(setter=_setRelatedWebView:,assign,readwrite) WKWebView * _relatedWebView;
@property(setter=_setVisitedLinkProvider:,assign,retain) _WKVisitedLinkProvider * _visitedLinkProvider;
@property(setter=_setWebsiteDataStore:,assign,retain) _WKWebsiteDataStore * _websiteDataStore;
@property(assign,readwrite) bool allowsInlineMediaPlayback;
@property(assign,readwrite) bool mediaPlaybackAllowsAirPlay;
@property(assign,readwrite) bool mediaPlaybackRequiresUserAction;
@property(assign,retain) WKPreferences * preferences;
@property(assign,retain) WKProcessPool * processPool;
@property(assign,readwrite) long long selectionGranularity;
@property(assign,readwrite) bool suppressesIncrementalRendering;
@property(assign,retain) WKUserContentController * userContentController;

- (id).cxx_construct;
- (void).cxx_destruct;
- (id)_alternateWebViewForNavigationGestures;
- (id)_contentProviderRegistry;
- (bool)_featureCounterEnabled;
- (id)_groupIdentifier;
- (id)_relatedWebView;
- (void)_setAlternateWebViewForNavigationGestures:(id)arg1;
- (void)_setContentProviderRegistry:(id)arg1;
- (void)_setFeatureCounterEnabled:(bool)arg1;
- (void)_setGroupIdentifier:(id)arg1;
- (void)_setRelatedWebView:(id)arg1;
- (void)_setVisitedLinkProvider:(id)arg1;
- (void)_setWebsiteDataStore:(id)arg1;
- (void)_validate;
- (id)_visitedLinkProvider;
- (id)_websiteDataStore;
- (bool)allowsInlineMediaPlayback;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)init;
- (bool)mediaPlaybackAllowsAirPlay;
- (bool)mediaPlaybackRequiresUserAction;
- (id)preferences;
- (id)processPool;
- (long long)selectionGranularity;
- (void)setAllowsInlineMediaPlayback:(bool)arg1;
- (void)setMediaPlaybackAllowsAirPlay:(bool)arg1;
- (void)setMediaPlaybackRequiresUserAction:(bool)arg1;
- (void)setPreferences:(id)arg1;
- (void)setProcessPool:(id)arg1;
- (void)setSelectionGranularity:(long long)arg1;
- (void)setSuppressesIncrementalRendering:(bool)arg1;
- (void)setUserContentController:(id)arg1;
- (bool)suppressesIncrementalRendering;
- (id)userContentController;

@end
