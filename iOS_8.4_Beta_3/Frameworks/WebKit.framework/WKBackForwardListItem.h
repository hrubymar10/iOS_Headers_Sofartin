/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/WebKit.framework/WebKit
 */

@interface WKBackForwardListItem : NSObject <WKObject> {
    struct ObjectStorage<WebKit::WebBackForwardListItem> { 
        struct type { 
            unsigned char __lx[256]; 
        } data; 
    } _item;
}

@property (readonly, copy) NSURL *URL;
@property (readonly) struct Object { int (**x1)(); id x2; }*_apiObject;
@property (readonly) struct WebBackForwardListItem { int (**x1)(); id x2; struct BackForwardListItemState { unsigned long long x_3_1_1; struct PageState { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_2_2_1; struct FrameState { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_1_4_1; } x_2_3_1; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_2_4_1; } x_2_3_2; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_3_4_1; } x_2_3_3; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_4_4_1; } x_2_3_4; /* Warning: unhandled struct encoding: '{Vector<WTF::String' */ struct x_2_3_5; void*x_2_3_6; void*x_2_3_7; void*x_2_3_8; void*x_2_3_9; void*x_2_3_10; void*x_2_3_11; void*x_2_3_12; void*x_2_3_13; void*x_2_3_14; void*x_2_3_15; void*x_2_3_16; void*x_2_3_17; void*x_2_3_18; void*x_2_3_19; void*x_2_3_20; void*x_2_3_21; void*x_2_3_22; void*x_2_3_23; void*x_2_3_24; void*x_2_3_25; void*x_2_3_26; void*x_2_3_27; void*x_2_3_28; void*x_2_3_29; const void*x_2_3_30; int x_2_3_31; void*x_2_3_32; in void*x_2_3_33; void*x_2_3_34; void*x_2_3_35; void*x_2_3_36; void*x_2_3_37; struct x_2_3_38; void*x_2_3_39; void*x_2_3_40; void*x_2_3_41; short x_2_3_42; void*x_2_3_43; void*x_2_3_44; void*x_2_3_45; const void*x_2_3_46; void*x_2_3_47; void*x_2_3_48; BOOL x_2_3_49; void*x_2_3_50; void*x_2_3_51; void*x_2_3_52; void*x_2_3_53; void*x_2_3_54; void*x_2_3_55; void*x_2_3_56; void*x_2_3_57; void*x_2_3_58; float x_2_3_59; void*x_2_3_60; void*x_2_3_61; void*x_2_3_62; void*x_2_3_63; void*x_2_3_64; const void*x_2_3_65; void*x_2_3_66; void*x_2_3_67; void*x_2_3_68; void*x_2_3_69; void*x_2_3_70; void*x_2_3_71; void*x_2_3_72; void*x_2_3_73; SEL x_2_3_74; void*x_2_3_75; SEL x_2_3_76; void*x_2_3_77; unsigned short x_2_3_78; void*x_2_3_79; void*x_2_3_80; void*x_2_3_81; const void*x_2_3_82; int x_2_3_83; void*x_2_3_84; in void*x_2_3_85; void*x_2_3_86; void*x_2_3_87; unsigned int x_2_3_88; void*x_2_3_89; void*x_2_3_90; void*x_2_3_91; void*x_2_3_92; void*x_2_3_93; long x_2_3_94; void*x_2_3_95; void*x_2_3_96; void*x_2_3_97; void*x_2_3_98; void*x_2_3_99; struct x_2_3_100; void*x_2_3_101; void*x_2_3_102; void*x_2_3_103; short x_2_3_104; void*x_2_3_105; void*x_2_3_106; void*x_2_3_107; const void*x_2_3_108; void*x_2_3_109; void*x_2_3_110; BOOL x_2_3_111; void*x_2_3_112; void*x_2_3_113; void*x_2_3_114; void*x_2_3_115; void*x_2_3_116; unsigned short x_2_3_117; void*x_2_3_118; void*x_2_3_119; void*x_2_3_120; const void*x_2_3_121; int x_2_3_122; void*x_2_3_123; in void*x_2_3_124; void*x_2_3_125; void*x_2_3_126; unsigned int x_2_3_127; void*x_2_3_128; void*x_2_3_129; void*x_2_3_130; void*x_2_3_131; void*x_2_3_132; long x_2_3_133; void*x_2_3_134; void*x_2_3_135; void*x_2_3_136; struct x_2_3_137; void*x_2_3_138; } x_2_2_2; void*x_2_2_3; void*x_2_2_4; void*x_2_2_5; char *x_2_2_6; void*x_2_2_7; void*x_2_2_8; void*x_2_2_9; void*x_2_2_10; void*x_2_2_11; void*x_2_2_12; void*x_2_2_13; void*x_2_2_14; void*x_2_2_15; void*x_2_2_16; void*x_2_2_17; void*x_2_2_18; void*x_2_2_19; void*x_2_2_20; void*x_2_2_21; void*x_2_2_22; void*x_2_2_23; void*x_2_2_24; void*x_2_2_25; } x_3_1_2; void*x_3_1_3; void*x_3_1_4; void*x_3_1_5; void*x_3_1_6; void*x_3_1_7; void*x_3_1_8; void*x_3_1_9; void*x_3_1_10; void*x_3_1_11; void*x_3_1_12; void*x_3_1_13; void*x_3_1_14; void*x_3_1_15; void*x_3_1_16; void*x_3_1_17; void*x_3_1_18; void*x_3_1_19; void*x_3_1_20; void*x_3_1_21; void*x_3_1_22; void*x_3_1_23; } x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; unsigned short x25; void*x26; const int x27; in void*x28; unsigned int x29; void*x30; void*x31; long x32; }*_item; /* unknown property attribute:  WTF::CrashOnOverflow>=^{FrameState}II}}}{RefPtr<WebKit::ViewSnapshot>=^{ViewSnapshot}}}Q} */
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (readonly, copy) NSURL *initialURL;
@property (readonly) Class superclass;
@property (readonly, copy) NSString *title;

- (id).cxx_construct;
- (id)URL;
- (struct Object { int (**x1)(); id x2; }*)_apiObject;
- (struct WebBackForwardListItem { int (**x1)(); id x2; struct BackForwardListItemState { unsigned long long x_3_1_1; struct PageState { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_4_1; } x_1_3_1; } x_2_2_1; struct FrameState { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_1_4_1; } x_2_3_1; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_2_4_1; } x_2_3_2; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_3_4_1; } x_2_3_3; struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_5_1; } x_4_4_1; } x_2_3_4; struct Vector<WTF::String, 0, WTF::CrashOnOverflow> { struct String {} *x_5_4_1; unsigned int x_5_4_2; unsigned int x_5_4_3; } x_2_3_5; struct Optional<WTF::Vector<unsigned char, 0, WTF::CrashOnOverflow> > { bool x_6_4_1; union { struct Vector<unsigned char, 0, WTF::CrashOnOverflow> { char *x_1_6_1; unsigned int x_1_6_2; unsigned int x_1_6_3; } x_2_5_1; } x_6_4_2; } x_2_3_6; long long x_2_3_7; long long x_2_3_8; struct IntPoint { int x_9_4_1; int x_9_4_2; } x_2_3_9; float x_2_3_10; struct Optional<WebKit::HTTPBody> { bool x_11_4_1; union { struct HTTPBody { struct String { struct RefPtr<WTF::StringImpl> { struct StringImpl {} *x_1_8_1; } x_1_7_1; } x_1_6_1; struct Vector<WebKit::HTTPBody::Element, 0, WTF::CrashOnOverflow> { struct Element {} *x_2_7_1; unsigned int x_2_7_2; unsigned int x_2_7_3; } x_1_6_2; } x_2_5_1; } x_11_4_2; } x_2_3_11; struct FloatRect { struct FloatPoint { float x_1_5_1; float x_1_5_2; } x_12_4_1; struct FloatSize { float x_2_5_1; float x_2_5_2; } x_12_4_2; } x_2_3_12; struct IntRect { struct IntPoint { int x_1_5_1; int x_1_5_2; } x_13_4_1; struct IntSize { int x_2_5_1; int x_2_5_2; } x_13_4_2; } x_2_3_13; struct FloatSize { float x_14_4_1; float x_14_4_2; } x_2_3_14; struct IntSize { int x_15_4_1; int x_15_4_2; } x_2_3_15; bool x_2_3_16; struct Vector<WebKit::FrameState, 0, WTF::CrashOnOverflow> { struct FrameState {} *x_17_4_1; unsigned int x_17_4_2; unsigned int x_17_4_3; } x_2_3_17; } x_2_2_2; } x_3_1_2; struct RefPtr<WebKit::ViewSnapshot> { struct ViewSnapshot {} *x_3_2_1; } x_3_1_3; } x3; unsigned long long x4; }*)_item;
- (void)dealloc;
- (id)initialURL;
- (id)title;

@end
