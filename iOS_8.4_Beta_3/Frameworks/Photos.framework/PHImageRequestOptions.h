/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/Photos.framework/Photos
 */

@interface PHImageRequestOptions : NSObject <NSCopying> {
    bool _allowPlaceholder;
    double _aspectRatioHint;
    id _cachingCompletedHandler;
    bool _degradedFormatPreferJPEG;
    bool _deliveryFirstResultAsynchronously;
    long long _deliveryMode;
    double _demoteFactor;
    double _downloadUpdateInterval;
    long long _loadingMode;
    bool _memoryCachingAllowed;
    bool _networkAccessAllowed;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _normalizedCropRect;
    id _progressHandler;
    long long _rank;
    long long _resizeMode;
    bool _synchronous;
    long long _version;
}

@property(assign,readwrite) bool allowPlaceholder;
@property(assign,readwrite) double aspectRatioHint;
@property(assign,copy) id cachingCompletedHandler;
@property(assign,readwrite) bool degradedFormatPreferJPEG;
@property(assign,readwrite) bool deliveryFirstResultAsynchronously;
@property(assign,readwrite) long long deliveryMode;
@property(assign,readwrite) double demoteFactor;
@property(assign,readwrite) double downloadUpdateInterval;
@property(assign,readwrite) long long loadingMode;
@property(getter=isMemoryCachingAllowed,assign,readwrite) bool memoryCachingAllowed;
@property(getter=isNetworkAccessAllowed,assign,readwrite) bool networkAccessAllowed;
@property(assign,readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } normalizedCropRect;
@property(assign,copy) id progressHandler;
@property(assign,readwrite) long long rank;
@property(assign,readwrite) long long resizeMode;
@property(getter=isSynchronous,assign,readwrite) bool synchronous;
@property(assign,readwrite) long long version;

+ (id)defaultOptionsAllowingPlaceholder;

- (void).cxx_destruct;
- (bool)allowPlaceholder;
- (double)aspectRatioHint;
- (id)cachingCompletedHandler;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)degradedFormatPreferJPEG;
- (bool)deliveryFirstResultAsynchronously;
- (long long)deliveryMode;
- (double)demoteFactor;
- (id)description;
- (double)downloadUpdateInterval;
- (id)init;
- (bool)isMemoryCachingAllowed;
- (bool)isNetworkAccessAllowed;
- (bool)isSynchronous;
- (long long)loadingMode;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })normalizedCropRect;
- (id)progressHandler;
- (long long)rank;
- (long long)resizeMode;
- (void)setAllowPlaceholder:(bool)arg1;
- (void)setAspectRatioHint:(double)arg1;
- (void)setCachingCompletedHandler:(id)arg1;
- (void)setDegradedFormatPreferJPEG:(bool)arg1;
- (void)setDeliveryFirstResultAsynchronously:(bool)arg1;
- (void)setDeliveryMode:(long long)arg1;
- (void)setDemoteFactor:(double)arg1;
- (void)setDownloadUpdateInterval:(double)arg1;
- (void)setLoadingMode:(long long)arg1;
- (void)setMemoryCachingAllowed:(bool)arg1;
- (void)setNetworkAccessAllowed:(bool)arg1;
- (void)setNormalizedCropRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setProgressHandler:(id)arg1;
- (void)setRank:(long long)arg1;
- (void)setResizeMode:(long long)arg1;
- (void)setSynchronous:(bool)arg1;
- (void)setVersion:(long long)arg1;
- (long long)version;

@end
