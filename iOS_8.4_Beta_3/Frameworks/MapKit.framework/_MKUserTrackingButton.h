/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MapKit.framework/MapKit
 */

@interface _MKUserTrackingButton : UIButton <MKUserTrackingButtonTarget> {
    _MKUserTrackingButtonController *_controller;
    NSMutableDictionary *_customImages;
    NSMutableDictionary *_customLandscapeImagePhones;
    bool _inMiniBar;
    bool _selectsWhenTracking;
}

@property (nonatomic, readonly) _MKUserTrackingButtonController *controller;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MKMapView *mapView;
@property (getter=_selectsWhenTracking, setter=_setSelectsWhenTracking:, nonatomic) bool selectsWhenTracking;
@property (readonly) Class superclass;
@property (nonatomic, retain) <MKUserTrackingView> *userTrackingView;

+ (Class)_activityIndicatorClass;
+ (id)buttonWithMapView:(id)arg1;
+ (id)buttonWithUserTrackingView:(id)arg1;

- (void).cxx_destruct;
- (long long)_activityIndicatorStyle;
- (id)_defaultImageForUserTrackingMode:(long long)arg1 controlState:(unsigned long long)arg2;
- (id)_defaultLandscapeImagePhoneForUserTrackingMode:(long long)arg1 controlState:(unsigned long long)arg2;
- (id)_imageForState:(long long)arg1 controlState:(unsigned long long)arg2;
- (id)_imageForUserTrackingMode:(long long)arg1 controlState:(unsigned long long)arg2;
- (bool)_isHighlightedForState:(long long)arg1;
- (id)_landscapeImagePhoneForUserTrackingMode:(long long)arg1 controlState:(unsigned long long)arg2;
- (void)_repositionViews;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })_selectedIndicatorBounds;
- (bool)_selectsWhenTracking;
- (void)_setImage:(id)arg1 forUserTrackingMode:(long long)arg2 controlState:(unsigned long long)arg3;
- (void)_setLandscapeImagePhone:(id)arg1 forUserTrackingMode:(long long)arg2 controlState:(unsigned long long)arg3;
- (void)_setSelectsWhenTracking:(bool)arg1;
- (void)_setState:(long long)arg1;
- (long long)_state;
- (void)_updateForState:(long long)arg1;
- (id)controller;
- (id)mapView;
- (void)setMapView:(id)arg1;
- (void)setUserTrackingView:(id)arg1;
- (void)sizeToFit;
- (void)updateForMiniBarState:(bool)arg1;
- (id)userTrackingView;

@end
