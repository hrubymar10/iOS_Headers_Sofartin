/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/MediaPlayer.framework/MediaPlayer
 */

@interface MPCloudServiceStatusController : NSObject <SSVPlaybackLeaseDelegate> {
    unsigned long long _URLBagObservationCount;
    NSObject<OS_dispatch_queue> *_accessQueue;
    unsigned long long _accountStoreChangeObservationCount;
    unsigned long long _automaticLeaseRefreshCount;
    unsigned long long _cloudLibraryObservationCount;
    SSVFairPlaySubscriptionController *_fairPlaySubscriptionController;
    unsigned long long _fairPlaySubscriptionStatusObservationCount;
    bool _hasLoadedMatchStatus;
    bool _hasLoadedURLBag;
    unsigned long long _matchStatus;
    unsigned long long _matchStatusObservationCount;
    SSVPlaybackLease *_playbackLease;
    unsigned long long _purchaseHistoryObservationCount;
    unsigned long long _subscriptionAvailabilityObservationCount;
    bool _subscriptionAvailable;
    unsigned long long _subscriptionLeaseUsageCount;
    unsigned long long _subscriptionStatusObservationCount;
}

@property(getter=isCloudLibraryEnabled,assign,readonly) bool cloudLibraryEnabled;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readonly) bool hasSubscriptionLease;
@property(assign,readonly) bool hasSubscriptionSlot;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) unsigned long long matchStatus;
@property(assign,readonly) SSVPlaybackLease * playbackLease;
@property(getter=isPurchaseHistoryEnabled,assign,readonly) bool purchaseHistoryEnabled;
@property(getter=isSubscriptionAvailable,assign,readonly) bool subscriptionAvailable;
@property(assign,copy) SSVSubscriptionStatus * subscriptionStatus;
@property(assign,readonly) Class superclass;

+ (id)sharedController;

- (void).cxx_destruct;
- (void)_accountStoreChangedNotification:(id)arg1;
- (id)_activeAccount;
- (void)_beginObservingAccountStoreDidChange;
- (void)_beginObservingURLBag;
- (void)_beginUsingSubscriptionLease;
- (void)_cloudClientAuthenticationDidChange;
- (bool)_currentCloudLibraryEnabled;
- (id)_currentFairPlaySubscriptionStatus;
- (bool)_currentPurchaseHistoryEnabled;
- (void)_endObservingAccountStoreDidChange;
- (void)_endObservingURLBag;
- (void)_endUsingSubscriptionLease;
- (id)_fairPlaySubscriptionController;
- (void)_fairPlaySubscriptionControllerSubscriptionStatusDidChangeNotification:(id)arg1;
- (void)_reloadURLBag;
- (void)_storeFrontDidChangeNotification:(id)arg1;
- (void)_subscriptionStatusDidChangeNotification:(id)arg1;
- (void)_updateMatchStatus;
- (void)_updateWithURLBagDictionary:(id)arg1;
- (void)acquireSubscriptionLeaseWithCompletionHandler:(id)arg1;
- (void)beginAutomaticallyRefreshingSubscriptionLease;
- (void)beginObservingCloudLibraryEnabled;
- (void)beginObservingFairPlaySubscriptionStatus;
- (void)beginObservingMatchStatus;
- (void)beginObservingPurchaseHistoryEnabled;
- (void)beginObservingSubscriptionAvailability;
- (void)beginObservingSubscriptionLease;
- (void)beginObservingSubscriptionStatus;
- (void)dealloc;
- (void)endAutomaticallyRefreshingSubscriptionLease;
- (void)endObservingCloudLibraryEnabled;
- (void)endObservingFairPlaySubscriptionStatus;
- (void)endObservingMatchStatus;
- (void)endObservingPurchaseHistoryEnabled;
- (void)endObservingSubscriptionAvailability;
- (void)endObservingSubscriptionLease;
- (void)endObservingSubscriptionStatus;
- (void)endSubscriptionLease;
- (void)getSubscriptionAssetWithRequest:(id)arg1 completionHandler:(id)arg2;
- (void)getSubscriptionStatusWithOptions:(id)arg1 statusBlock:(id)arg2;
- (bool)hasSubscriptionLease;
- (bool)hasSubscriptionSlot;
- (id)init;
- (bool)isCloudLibraryEnabled;
- (bool)isPurchaseHistoryEnabled;
- (bool)isSubscriptionAvailable;
- (unsigned long long)matchStatus;
- (id)playbackLease;
- (void)playbackLease:(id)arg1 automaticRefreshDidFinishWithResponse:(id)arg2 error:(id)arg3;
- (void)playbackLeaseDidEnd:(id)arg1;
- (void)preheatSubscriptionLeaseRequestsWithCompletionHandler:(id)arg1;
- (id)subscriptionStatus;

@end
