/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@interface EKUIOccurrenceTableViewCell : UITableViewCell {
    UIImageView *_angleStripeBackgroundView;
    UILabel *_bottomTimeLabel;
    NSString *_bottomTimeString;
    NSDictionary *_bottomTimeStringDrawingAttributes;
    bool _cancelled;
    ColorBarView *_colorBarView;
    bool _declined;
    bool _drawsOwnRowSeparators;
    UIColor *_eventCalendarColor;
    EKCalendarDate *_eventEndDate;
    NSString *_eventLocation;
    EKCalendarDate *_eventStartDate;
    NSDate *_eventStartDateIncludingTravelTime;
    NSString *_eventTitle;
    NSAttributedString *_eventTitleAttrString;
    bool _isAllDay;
    bool _isBirthday;
    bool _isFacebook;
    bool _isRecurring;
    bool _needsReply;
    long long _nontruncatingOptions;
    UILabel *_primaryLabel;
    NSLayoutConstraint *_primaryTextTopToBaselineConstraint;
    long long _routingMode;
    UIImage *_routingModeImage;
    UILabel *_secondaryLabel;
    NSDictionary *_secondaryStringDrawingAttributes;
    NSLayoutConstraint *_secondaryTextBottomToBaselineConstraint;
    NSLayoutConstraint *_secondaryTextTopToBaselineConstraint;
    UIView *_separatorViewForNonOpaqueTables;
    bool _showingTravelTime;
    bool _tentative;
    NSLayoutConstraint *_timeTextLeftMarginConstraint;
    NSLayoutConstraint *_timeTextRightMarginConstraint;
    NSLayoutConstraint *_timeTextWidthConstraint;
    UILabel *_topTimeLabel;
    NSString *_topTimeString;
    NSDictionary *_topTimeStringDrawingAttributes;
    NSString *_travelAddressString;
    NSDictionary *_travelAddressStringDrawingAttributes;
    NSString *_travelDepartureTimeString;
    NSDictionary *_travelDepartureTimeStringDrawingAttributes;
    double _travelTime;
    NSString *_travelTimeLabelString;
    NSDictionary *_travelTimeLabelStringDrawingAttributes;
    long long _truncatingOptions;
    bool _usesInsetMargin;
    bool _usesVibrantSeparatorOverlayDrawing;
}

@property(assign,readwrite) bool drawsOwnRowSeparators;
@property(assign,readwrite) bool usesInsetMargin;
@property(assign,readwrite) bool usesVibrantSeparatorOverlayDrawing;

+ (id)_birthdayIcon;
+ (void)_clearCaches;
+ (id)_facebookIcon;
+ (id)_needsReplyAngledStripeBackground;
+ (id)_needsReplyDot;
+ (double)_rightImageSpacing;
+ (id)_tentativeAngledStripeBackground;
+ (id)cancelledDeclinedColorBarColor;
+ (double)cellHeightForWidth:(double)arg1;
+ (void)clearFontCaches;
+ (id)constrainedPrimaryTextLabelFont;
+ (void)initialize;
+ (id)invitationPrimaryTextColor;
+ (id)needsReplyBackgroundColor;
+ (double)needsReplyStripeBackgroundAlpha;
+ (id)needsReplyStripeColor;
+ (id)normalBackgroundColor;
+ (id)normalBottomTimeTextColor;
+ (id)normalPrimaryTextColor;
+ (id)normalSecondaryTextColor;
+ (id)normalTopTimeTextColor;
+ (id)prefixPrimaryTextColor;
+ (id)reuseIdentifier;
+ (id)scalablePrimaryTextLabelFont;
+ (id)secondaryTextLabelFont;
+ (id)strikethroughPrimaryTextColor;
+ (id)strikethroughSecondaryTextColor;
+ (id)strikethroughTimeTextColor;
+ (id)tentativeBackgroundColor;
+ (double)tentativeStripeBackgroundAlpha;
+ (id)tentativeStripeColor;
+ (id)timeLabelsFont;

- (void).cxx_destruct;
- (void)_addIcon:(id)arg1 toString:(id)arg2 withFont:(id)arg3;
- (void)_createViews;
- (double)_leftMarginForTimeViewsFromTimeWidth:(double)arg1;
- (double)_rightMarginForTimeViewsFromTimeWidth:(double)arg1;
- (void)_setMarginExtendsToFullWidth:(bool)arg1;
- (void)_setUpConstraints;
- (id)_textForBottomTimeLabel;
- (id)_textForDepartureTimeLabel;
- (id)_textForTopTimeLabel;
- (bool)_textLabelHasAddedImages;
- (id)_textLabelWithAddedImageAttachmentsFromText:(id)arg1 withFont:(id)arg2;
- (id)_travelTimeIcon;
- (void)_updateAngleBackgroundColor;
- (void)_updateBottomTimeLabel;
- (void)_updateColorBarColor;
- (void)_updateContentForSizeCategoryChange:(id)arg1;
- (void)_updatePrimaryTextLabel;
- (void)_updateRoutingModeIcon;
- (void)_updateSecondaryTextLabel;
- (void)_updateTopTimeLabel;
- (void)_updateTravelDepartureTimeLabel;
- (void)_updateTravelTimeAddressLabel;
- (void)_updateTravelTimeLabel;
- (double)_verticalSpacingBottomToBaselineForBottomLabel;
- (double)_verticalSpacingTopToBaselineForBottomLabel;
- (double)_verticalSpacingTopToBaselineForTopLabel;
- (double)_widthForTimeViews;
- (void)contentCategorySizeChanged;
- (void)dealloc;
- (bool)drawsOwnRowSeparators;
- (void)forceUpdateOfAllElements;
- (id)initWithStyle:(long long)arg1 reuseIdentifier:(id)arg2;
- (bool)isAllDay;
- (bool)isBirthday;
- (bool)isCancelled;
- (bool)isDeclined;
- (bool)isFacebook;
- (bool)isTentative;
- (void)layoutSubviews;
- (bool)needsReply;
- (id)primaryTextLabelFont;
- (void)setDrawsOwnRowSeparators:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setUsesInsetMargin:(bool)arg1;
- (void)setUsesVibrantSeparatorOverlayDrawing:(bool)arg1;
- (void)updateConstraints;
- (void)updateWithEvent:(id)arg1 calendar:(id)arg2 placedUnderDayWithStartDate:(id)arg3 showCalendarColors:(bool)arg4;
- (void)updateWithEvent:(id)arg1 calendar:(id)arg2 placedUnderDayWithStartDate:(id)arg3 showCalendarColors:(bool)arg4 extendHeightForTravelTime:(bool)arg5;
- (bool)usesInsetMargin;
- (bool)usesVibrantSeparatorOverlayDrawing;

@end
