/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/EventKitUI.framework/EventKitUI
 */

@interface EKUIInviteeAlternativeTimeSearcher : NSObject {
    bool _availabilityRequestInProgress;
    NSOperationQueue *_availabilityRequestsQueue;
    double _availabilitySearchDurationMultiplier;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSString *_ignoredEventID;
    NSMutableArray *_internalOriginalConflictedParticipants;
    NSDate *_internalOriginalEndDate;
    NSDate *_internalOriginalStartDate;
    bool _internalSearchingForMoreTimesWhenAllAttendeesCanAttend;
    bool _internalSearchingForMoreTimesWhenSomeAttendeesCanAttend;
    NSMutableArray *_internalTimesWhenAllAttendeesCanAttend;
    NSMutableArray *_internalTimesWhenSomeAttendeesCanAttend;
    NSMutableArray *_leftoverSpans;
    NSDate *_nextAvailabilityRangeStartDate;
    NSString *_organizerAddress;
    NSMutableDictionary *_participantAddressesToParticipants;
    NSObject<OS_dispatch_queue> *_processingQueue;
    unsigned long long _remainingSearchAttempts;
    EKSource *_source;
    id _stateChanged;
}

@property(assign,readwrite) bool availabilityRequestInProgress;
@property(assign,retain) NSOperationQueue * availabilityRequestsQueue;
@property(assign,readwrite) double availabilitySearchDurationMultiplier;
@property(assign,retain) NSObject<OS_dispatch_queue> * callbackQueue;
@property(assign,retain) NSString * ignoredEventID;
@property(assign,retain) NSMutableArray * internalOriginalConflictedParticipants;
@property(assign,retain) NSDate * internalOriginalEndDate;
@property(assign,retain) NSDate * internalOriginalStartDate;
@property(assign,readwrite) bool internalSearchingForMoreTimesWhenAllAttendeesCanAttend;
@property(assign,readwrite) bool internalSearchingForMoreTimesWhenSomeAttendeesCanAttend;
@property(assign,retain) NSMutableArray * internalTimesWhenAllAttendeesCanAttend;
@property(assign,retain) NSMutableArray * internalTimesWhenSomeAttendeesCanAttend;
@property(assign,retain) NSMutableArray * leftoverSpans;
@property(assign,retain) NSDate * nextAvailabilityRangeStartDate;
@property(assign,retain) NSString * organizerAddress;
@property(assign,readonly) NSArray * originalConflictedParticipants;
@property(assign,readonly) NSDate * originalEndDate;
@property(assign,readonly) NSDate * originalStartDate;
@property(assign,retain) NSMutableDictionary * participantAddressesToParticipants;
@property(assign,retain) NSObject<OS_dispatch_queue> * processingQueue;
@property(assign,readwrite) unsigned long long remainingSearchAttempts;
@property(assign,readonly) bool searchingForMoreTimesWhenAllAttendeesCanAttend;
@property(assign,readonly) bool searchingForMoreTimesWhenSomeAttendeesCanAttend;
@property(assign,retain) EKSource * source;
@property(assign,copy) id stateChanged;
@property(assign,readonly) NSArray * timesWhenAllAttendeesCanAttend;
@property(assign,readonly) NSArray * timesWhenSomeAttendeesCanAttend;

+ (id)_addressesForParticipants:(id)arg1;
+ (id)_allButFirstItemInArray:(id)arg1;
+ (id)_allButLastItemInArray:(id)arg1;
+ (long long)_binarySearchForIndexOfTimeSpanInArray:(id)arg1 containingDate:(id)arg2;
+ (id)_findHighestRankedNonOptimalTimeSpans:(id)arg1;
+ (id)_findLeftoverSpans:(id)arg1 usingFreeTimes:(id)arg2 andNonOptimalTimes:(id)arg3;
+ (void)_insertUniqueParticipants:(id)arg1 intoExistingParticipantsArray:(id)arg2;
+ (long long)_invalidBinarySearchIndex;
+ (id)_rankNonOptimalTimeSpans:(id)arg1;
+ (id)_selfOrganizerForNewlyScheduledEventWithAddress:(id)arg1;
+ (bool)_span:(id)arg1 hasSameConflictedParticipantsAsSpan:(id)arg2;
+ (void)_validateSpans:(id)arg1;
+ (id)stateAsString:(long long)arg1;

- (void).cxx_destruct;
- (void)_attemptSearch;
- (id)_filterOutUnreasonableTimeSlots:(id)arg1;
- (id)_generateNonOptimalTimesFromTimeSpans:(id)arg1;
- (id)_generateOpenFreeTimesFromTimeSpans:(id)arg1;
- (id)_generateTimeSpansForResults:(id)arg1 betweenStartDate:(id)arg2 endDate:(id)arg3;
- (id)_mergeAdjacentSpansWithSameConflictedParticipants:(id)arg1;
- (id)_participantforParticipantAddress:(id)arg1;
- (void)_processResults:(id)arg1 betweenStartDate:(id)arg2 endDate:(id)arg3;
- (void)_resetSearchFallbackNumbers;
- (void)_sendStateChange:(long long)arg1;
- (id)_spliceLeftTimeSpans:(id)arg1 andNewTimeSpans:(id)arg2;
- (void)_transitionToConflictFoundStateAndSearch;
- (bool)availabilityRequestInProgress;
- (id)availabilityRequestsQueue;
- (double)availabilitySearchDurationMultiplier;
- (id)callbackQueue;
- (void)dealloc;
- (id)ignoredEventID;
- (id)initWithStateChangedCallback:(id)arg1;
- (id)internalOriginalConflictedParticipants;
- (id)internalOriginalEndDate;
- (id)internalOriginalStartDate;
- (bool)internalSearchingForMoreTimesWhenAllAttendeesCanAttend;
- (bool)internalSearchingForMoreTimesWhenSomeAttendeesCanAttend;
- (id)internalTimesWhenAllAttendeesCanAttend;
- (id)internalTimesWhenSomeAttendeesCanAttend;
- (id)leftoverSpans;
- (id)nextAvailabilityRangeStartDate;
- (id)organizerAddress;
- (id)originalConflictedParticipants;
- (id)originalEndDate;
- (id)originalStartDate;
- (id)participantAddressesToParticipants;
- (id)processingQueue;
- (unsigned long long)remainingSearchAttempts;
- (void)resetWithEvent:(id)arg1 organizerAddressForNewlyScheduledEvent:(id)arg2;
- (void)searchForMoreTimesWhenAllAttendeesCanAttend;
- (void)searchForMoreTimesWhenSomeAttendeesCanAttend;
- (bool)searchingForMoreTimesWhenAllAttendeesCanAttend;
- (bool)searchingForMoreTimesWhenSomeAttendeesCanAttend;
- (void)setAvailabilityRequestInProgress:(bool)arg1;
- (void)setAvailabilityRequestsQueue:(id)arg1;
- (void)setAvailabilitySearchDurationMultiplier:(double)arg1;
- (void)setCallbackQueue:(id)arg1;
- (void)setIgnoredEventID:(id)arg1;
- (void)setInternalOriginalConflictedParticipants:(id)arg1;
- (void)setInternalOriginalEndDate:(id)arg1;
- (void)setInternalOriginalStartDate:(id)arg1;
- (void)setInternalSearchingForMoreTimesWhenAllAttendeesCanAttend:(bool)arg1;
- (void)setInternalSearchingForMoreTimesWhenSomeAttendeesCanAttend:(bool)arg1;
- (void)setInternalTimesWhenAllAttendeesCanAttend:(id)arg1;
- (void)setInternalTimesWhenSomeAttendeesCanAttend:(id)arg1;
- (void)setLeftoverSpans:(id)arg1;
- (void)setNextAvailabilityRangeStartDate:(id)arg1;
- (void)setOrganizerAddress:(id)arg1;
- (void)setParticipantAddressesToParticipants:(id)arg1;
- (void)setProcessingQueue:(id)arg1;
- (void)setRemainingSearchAttempts:(unsigned long long)arg1;
- (void)setSource:(id)arg1;
- (void)setStateChanged:(id)arg1;
- (id)source;
- (id)stateChanged;
- (id)timesWhenAllAttendeesCanAttend;
- (id)timesWhenSomeAttendeesCanAttend;

@end
