/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/CloudKit.framework/CloudKit
 */

@interface CKPackage : NSObject <CKRecordValue, NSSecureCoding> {
    NSString *_UUID;
    NSString *_anchorPath;
    NSString *_applicationBundleID;
    NSArray *_assets;
    bool _downloaded;
    NSURL *_fileURL;
    bool _hasSize;
    unsigned long long _nextItemIndex;
    bool _open;
    bool _ownsTheAnchor;
    long long _packageID;
    CKRecord *_record;
    NSString *_recordKey;
    struct _OpaquePCSShareProtection { } *_recordPCS;
    unsigned long long _size;
    CKSQLite *_sqlite;
    bool _transaction;
    bool _uploaded;
    bool _wasCached;
}

@property (nonatomic, retain) NSString *UUID;
@property (nonatomic, retain) NSString *anchorPath;
@property (nonatomic, retain) NSString *applicationBundleID;
@property (nonatomic, copy) NSArray *assets;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic) bool downloaded;
@property (nonatomic, retain) NSURL *fileURL;
@property (nonatomic) bool hasSize;
@property (readonly) unsigned long long hash;
@property (nonatomic) unsigned long long nextItemIndex;
@property (getter=isOpen, nonatomic) bool open;
@property (nonatomic) bool ownsTheAnchor;
@property (nonatomic) long long packageID;
@property (nonatomic) CKRecord *record;
@property (nonatomic, copy) NSString *recordKey;
@property (nonatomic) struct _OpaquePCSShareProtection { }*recordPCS;
@property (nonatomic, copy) NSData *signature;
@property (nonatomic) unsigned long long size;
@property (nonatomic, retain) CKSQLite *sqlite;
@property (readonly) Class superclass;
@property (getter=inTransaction, nonatomic) bool transaction;
@property (nonatomic) bool uploaded;
@property (nonatomic) bool wasCached;

+ (id)BRBundleID;
+ (id)_packagesPathForBundleID:(id)arg1;
+ (void)destroyPackageAnchoredAtURL:(id)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (id)UUID;
- (id)_initWithPath:(id)arg1 UUID:(id)arg2;
- (id)_itemOrNilAtIndex:(unsigned long long)arg1;
- (id)_itemWithColumnsByName:(id)arg1;
- (id)_packageDatabasePathWithUUID:(id)arg1;
- (id)_prettyDictionaryRepresentation;
- (void)_setReferenceCount:(long long)arg1;
- (void)addItem:(id)arg1;
- (void)addSection:(id)arg1;
- (id)anchorPath;
- (id)applicationBundleID;
- (id)assets;
- (void)beginTransaction;
- (void)close;
- (void)dealloc;
- (bool)decReferenceCount;
- (id)description;
- (void)destroy;
- (bool)downloaded;
- (void)encodeWithCoder:(id)arg1;
- (void)endTransaction;
- (id)fileURL;
- (bool)hasSize;
- (bool)inTransaction;
- (void)incReferenceCount;
- (id)init;
- (id)initWithAnchorURL:(id)arg1;
- (id)initWithArchivedAnchoredPackage:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (bool)isAnchorStillValid;
- (bool)isOpen;
- (id)itemAtIndex:(unsigned long long)arg1;
- (unsigned long long)itemCount;
- (id)itemEnumerator;
- (id)itemEnumeratorForSectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)nextItemIndex;
- (void)open;
- (bool)ownsTheAnchor;
- (long long)packageID;
- (id)record;
- (id)recordKey;
- (struct _OpaquePCSShareProtection { }*)recordPCS;
- (id)replacementObjectForCoder:(id)arg1;
- (id)sectionAtIndex:(unsigned long long)arg1;
- (unsigned long long)sectionCount;
- (void)setAnchorPath:(id)arg1;
- (void)setApplicationBundleID:(id)arg1;
- (void)setAssets:(id)arg1;
- (void)setDownloaded:(bool)arg1;
- (void)setFileURL:(id)arg1;
- (void)setHasSize:(bool)arg1;
- (void)setNextItemIndex:(unsigned long long)arg1;
- (void)setOpen:(bool)arg1;
- (void)setOwnsTheAnchor:(bool)arg1;
- (void)setPackageID:(long long)arg1;
- (void)setRecord:(id)arg1;
- (void)setRecordKey:(id)arg1;
- (void)setRecordPCS:(struct _OpaquePCSShareProtection { }*)arg1;
- (void)setSignature:(id)arg1;
- (void)setSize:(unsigned long long)arg1;
- (void)setSqlite:(id)arg1;
- (void)setTransaction:(bool)arg1;
- (void)setUUID:(id)arg1;
- (void)setUploaded:(bool)arg1;
- (void)setWasCached:(bool)arg1;
- (id)signature;
- (unsigned long long)size;
- (id)sqlite;
- (void)updateItemAtIndex:(long long)arg1 withFileURL:(id)arg2;
- (void)updateItemAtIndex:(long long)arg1 withSignature:(id)arg2 size:(unsigned long long)arg3 itemID:(unsigned long long)arg4 sectionIndex:(unsigned long long)arg5;
- (void)updateItemsAtIndexes:(id)arg1 fileURLs:(id)arg2;
- (bool)uploaded;
- (bool)wasCached;

@end
