/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/AVFoundation.framework/AVFoundation
 */

@interface AVAssetWriterHelper : NSObject {
    AVAssetWriterConfigurationState *_configurationState;
    AVWeakReference *_weakReferenceToAssetWriter;
}

@property(assign,readonly) NSArray * availableMediaTypes;
@property(assign,readonly) AVAssetWriterConfigurationState * configurationState;
@property(assign,copy) NSURL * directoryForTemporaryFiles;
@property(assign,readonly) NSError * error;
@property(assign,readonly) NSArray * inputGroups;
@property(assign,readonly) NSArray * inputs;
@property(assign,readonly) AVMediaFileType * mediaFileType;
@property(assign,copy) NSArray * metadata;
@property(assign,readwrite) struct { long long x1; int x2; unsigned int x3; long long x4; } movieFragmentInterval;
@property(assign,readwrite) int movieTimeScale;
@property(assign,readonly) NSURL * outputURL;
@property(assign,readwrite) float preferredRate;
@property(assign,readwrite) struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; } preferredTransform;
@property(assign,readwrite) float preferredVolume;
@property(assign,readwrite) bool shouldOptimizeForNetworkUse;
@property(assign,readonly) long long status;
@property(assign,retain) AVWeakReference * weakReferenceToAssetWriter;

- (bool)_canApplyOutputSettings:(id)arg1 forMediaType:(id)arg2 sourceFormat:(struct opaqueCMFormatDescription { }*)arg3 exceptionReason:(id*)arg4;
- (bool)_canApplyTrackReferences:(id)arg1 exceptionReason:(id*)arg2;
- (bool)_transitionToClientInitiatedTerminalStatus:(long long)arg1;
- (void)addInput:(id)arg1;
- (void)addInputGroup:(id)arg1;
- (id)availableMediaTypes;
- (bool)canAddInput:(id)arg1;
- (bool)canAddInputGroup:(id)arg1;
- (bool)canApplyOutputSettings:(id)arg1 forMediaType:(id)arg2;
- (void)cancelWriting;
- (id)configurationState;
- (void)dealloc;
- (id)directoryForTemporaryFiles;
- (void)endSessionAtSourceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (id)error;
- (void)finishWriting;
- (void)finishWritingWithCompletionHandler:(id)arg1;
- (id)init;
- (id)initWithConfigurationState:(id)arg1;
- (id)inputGroups;
- (id)inputs;
- (id)mediaFileType;
- (id)metadata;
- (struct { long long x1; int x2; unsigned int x3; long long x4; })movieFragmentInterval;
- (int)movieTimeScale;
- (id)outputURL;
- (float)preferredRate;
- (struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })preferredTransform;
- (float)preferredVolume;
- (void)setDirectoryForTemporaryFiles:(id)arg1;
- (void)setMetadata:(id)arg1;
- (void)setMovieFragmentInterval:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)setMovieTimeScale:(int)arg1;
- (void)setPreferredRate:(float)arg1;
- (void)setPreferredTransform:(struct CGAffineTransform { double x1; double x2; double x3; double x4; double x5; double x6; })arg1;
- (void)setPreferredVolume:(float)arg1;
- (void)setShouldOptimizeForNetworkUse:(bool)arg1;
- (void)setWeakReferenceToAssetWriter:(id)arg1;
- (bool)shouldOptimizeForNetworkUse;
- (void)startSessionAtSourceTime:(struct { long long x1; int x2; unsigned int x3; long long x4; })arg1;
- (void)startWriting;
- (long long)status;
- (void)transitionToFailedStatusWithError:(id)arg1;
- (id)weakReferenceToAssetWriter;

@end
