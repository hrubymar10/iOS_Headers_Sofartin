/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/QuartzCore.framework/QuartzCore
 */

@interface CADisplay : NSObject {
    void *_impl;
}

@property(assign,readwrite) bool allowsVirtualModes;
@property(assign,readonly) NSArray * availableModes;
@property(assign,readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } bounds;
@property(getter=isCloned,assign,readonly) bool cloned;
@property(getter=isCloningSupported,assign,readonly) bool cloningSupported;
@property(assign,copy) NSString * colorMode;
@property(assign,readonly) unsigned int connectionSeed;
@property(assign,retain) CADisplayMode * currentMode;
@property(assign,readonly) NSString * deviceName;
@property(assign,readonly) unsigned int displayId;
@property(getter=isExternal,assign,readonly) bool external;
@property(assign,readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } frame;
@property(assign,readonly) NSString * name;
@property(assign,copy) NSString * overscanAdjustment;
@property(assign,readonly) double overscanAmount;
@property(getter=isOverscanned,assign,readonly) bool overscanned;
@property(assign,readonly) CADisplayMode * preferredMode;
@property(assign,readonly) double refreshRate;
@property(assign,readonly) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } safeBounds;
@property(assign,readonly) unsigned int seed;
@property(getter=isSupported,assign,readonly) bool supported;
@property(assign,readonly) long long tag;
@property(assign,readonly) NSString * uniqueId;

+ (id)TVOutDisplay;
+ (bool)automaticallyNotifiesObserversForKey:(id)arg1;
+ (id)displays;
+ (id)mainDisplay;

- (id)_initWithDisplay:(struct Display { int (**x1)(); id x2; struct __CFString {} *x3; struct __CFString {} *x4; unsigned int x5; unsigned int x6; unsigned int x7; struct __CFString {} *x8; struct ModeSet { unsigned int x_9_1_1; unsigned int x_9_1_2[1]; } x9; int x10; int x11; int x12; struct Bounds { int x_13_1_1; int x_13_1_2; int x_13_1_3; int x_13_1_4; } x13; struct Bounds { int x_14_1_1; int x_14_1_2; int x_14_1_3; int x_14_1_4; } x14; unsigned int x15; unsigned int x16; float x17; int x18; bool x19; bool x20; bool x21; bool x22; bool x23; unsigned int x24; double x25; bool x26; bool x27; }*)arg1;
- (void)_invalidate;
- (bool)allowsVirtualModes;
- (id)availableModes;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })bounds;
- (id)colorMode;
- (unsigned int)connectionSeed;
- (id)currentMode;
- (id)description;
- (id)deviceName;
- (unsigned int)displayId;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (bool)isCloned;
- (bool)isCloningSupported;
- (bool)isExternal;
- (bool)isOverscanned;
- (bool)isSupported;
- (id)name;
- (id)overscanAdjustment;
- (double)overscanAmount;
- (id)preferredMode;
- (double)refreshRate;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })safeBounds;
- (unsigned int)seed;
- (void)setAllowsVirtualModes:(bool)arg1;
- (void)setColorMode:(id)arg1;
- (void)setCurrentMode:(id)arg1;
- (void)setOverscanAdjustment:(id)arg1;
- (long long)tag;
- (id)uniqueId;
- (void)update;

@end
