/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SceneKit.framework/SceneKit
 */

@interface SCNMaterialProperty : NSObject <NSSecureCoding, SCNAnimatable> {
    SCNOrderedDictionary *_animations;
    UIColor *_borderColor;
    struct __C3DImage { } *_c3dImage;
    struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } *_contentTransform;
    unsigned char _contentType;
    id _contents;
    struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; struct __C3DImage {} *x3; struct __C3DTextureSampler {} *x4; struct __C3DTexture {} *x5; struct __C3DImageProxy {} *x6; struct __C3DTransforms {} *x7; int x8; float x9; int x10; void *x11; } *_customSlot;
    NSString *_customSlotName;
    float _intensity;
    unsigned int _isCommonProfileProperty;
    unsigned int _isPresentationInstance;
    long long _magnificationFilter;
    long long _mappingChannel;
    float _maxAnisotropy;
    long long _minificationFilter;
    long long _mipFilter;
    id _parent;
    int _propertyType;
    id _reserved;
    struct __C3DTextureProxy { } *_textureProxy;
    long long _wrapS;
    long long _wrapT;
}

@property (nonatomic, retain) id borderColor;
@property (nonatomic, retain) id contents;
@property (nonatomic) struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; } contentsTransform;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic) double intensity;
@property (nonatomic) long long magnificationFilter;
@property (nonatomic) long long mappingChannel;
@property (nonatomic) double maxAnisotropy;
@property (nonatomic) long long minificationFilter;
@property (nonatomic) long long mipFilter;
@property (readonly) Class superclass;
@property (nonatomic) long long wrapS;
@property (nonatomic) long long wrapT;

+ (id)SCNJSExportProtocol;
+ (struct __C3DImage { }*)_copyC3DImageFromImageData:(id)arg1 typeID:(unsigned long long)arg2;
+ (id)_copyImageFromC3DImage:(struct __C3DImage { }*)arg1;
+ (struct __C3DImage { }*)copyC3DImageFromImage:(id)arg1;
+ (id)copyImageFromC3DImage:(struct __C3DImage { }*)arg1;
+ (id)materialPropertyWithContents:(id)arg1;
+ (bool)supportsSecureCoding;

- (void*)__CFObject;
- (void)__allocateContentTransformIfNeeded;
- (void)__removeAnimation:(id)arg1 forKey:(id)arg2;
- (id)_animationPathForKey:(id)arg1;
- (void)_clearContents;
- (void)_customDecodingOfSCNMaterialProperty:(id)arg1;
- (void)_customEncodingOfSCNMaterialProperty:(id)arg1;
- (void)_didDecodeSCNMaterialProperty:(id)arg1;
- (void)_layerDidChange:(id)arg1;
- (void)_pauseAnimation:(bool)arg1 forKey:(id)arg2;
- (long long)_presentationMappingChannel;
- (void)_setC3DImageRef:(struct __C3DImage { }*)arg1;
- (void)_setColor:(id)arg1;
- (void)_setParent:(id)arg1;
- (void)_syncObjCAnimations;
- (void)_syncObjCModel;
- (void)_updateMaterialAttachment:(id)arg1;
- (void)_updateMaterialBorderColor:(id)arg1;
- (void)_updateMaterialColor:(id)arg1;
- (void)_updateMaterialFilters;
- (void)_updateMaterialImage:(id)arg1;
- (void)_updateMaterialLayer:(id)arg1;
- (void)_updateMaterialProceduralContents:(id)arg1;
- (void)_updateMaterialPropertyTransform:(union C3DMatrix4x4 { float x1[16]; /* Warning: Unrecognized filer type: ']' using 'void*' */ void*x2[4]; void*x3; void*x4; void*x5; void*x6; void*x7; void*x8; void*x9; void*x10; void*x11; void*x12; void*x13; void*x14; void*x15; void*x16; void*x17; void*x18; void*x19; void*x20; void*x21; void*x22; void*x23; void*x24; void*x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; void*x55; void*x56; void*x57; void*x58; void*x59; void*x60; void*x61; void*x62; void*x63; void*x64; void*x65; void*x66; void*x67; void*x68; void x69; void*x70; void*x71; void*x72; void*x73; void*x74; void*x75; void*x76; void*x77; void*x78; void*x79; void*x80; void*x81; void*x82; void*x83; void*x84; void*x85; void*x86; void*x87; void*x88; void*x89; void*x90; void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; void*x98; void*x99; void*x100; void*x101; void*x102; void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; void*x127; void*x128; void*x129; void*x130; void*x131; void*x132; void*x133; void*x134; void*x135; void*x136; void*x137; void*x138; void*x139; void*x140; void*x141; void*x142; void*x143; void*x144; void*x145; void*x146; void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; void*x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; void*x181; void*x182; void*x183; void*x184; void*x185; void*x186; void*x187; void*x188; void*x189; void*x190; void*x191; void*x192; void*x193; void*x194; in void*x195; void*x196; void*x197; void*x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; void*x206; void*x207; void*x208; void*x209; void*x210; void*x211; void*x212; void*x213; void*x214; void*x215; void*x216; void*x217; void*x218; void*x219; void*x220; void*x221; void*x222; void*x223; void*x224; })arg1;
- (void)_updateMaterialSKScene:(id)arg1;
- (void)_updateMaterialSKTexture:(id)arg1;
- (void)addAnimation:(id)arg1;
- (void)addAnimation:(id)arg1 forKey:(id)arg2;
- (id)animationForKey:(id)arg1;
- (id)animationKeys;
- (struct __C3DAnimationManager { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct __C3DModelValueStorage {} *x2; struct __CFDictionary {} *x3; struct __CFDictionary {} *x4; struct __CFSet {} *x5; struct __CFArray {} *x6; bool x7; bool x8; bool x9; struct _C3DAnimationPendingEvent {} *x10; struct __C3DAllocator {} *x11; struct __CFDictionary {} *x12; struct __CFArray {} *x13; double x14; double x15; struct _opaque_pthread_mutex_t { long long x_16_1_1; BOOL x_16_1_2[56]; } x16; int x17; int x18; int x19; int x20; }*)animationManager;
- (id)attachment;
- (id)borderColor;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; })borderColor4;
- (id)color;
- (struct C3DColor4 { union { float x_1_1_1[4]; struct { float x_2_2_1; float x_2_2_2; float x_2_2_3; float x_2_2_4; } x_1_1_2; } x1; })color4;
- (struct __C3DEffectCommonProfile { struct __C3DEffectProfile { struct __CFRuntimeBase { unsigned long long x_1_2_1; unsigned char x_1_2_2[4]; unsigned int x_1_2_3; } x_1_1_1; int x_1_1_2; } x1; struct __C3DMaterial {} *x2; int x3; struct __C3DEffectSlot {} *x4; struct __C3DEffectSlot {} *x5; struct __C3DEffectSlot {} *x6; struct __C3DEffectSlot {} *x7; struct __C3DEffectSlot {} *x8; struct __C3DEffectSlot {} *x9; struct __C3DEffectSlot {} *x10; struct __C3DEffectSlot {} *x11; float x12; float x13; float x14; float x15; float x16; BOOL x17; long long x18; bool x19; bool x20; unsigned int x21 : 1; unsigned int x22 : 1; unsigned int x23 : 1; unsigned int x24 : 1; unsigned int x25 : 1; unsigned int x26 : 1; unsigned int x27 : 1; unsigned int x28 : 1; unsigned int x29 : 1; unsigned int x30 : 10; struct __C3DFXProgram {} *x31; }*)commonProfile;
- (id)content;
- (id)contents;
- (struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })contentsTransform;
- (struct __C3DAnimationChannel { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct __C3DAnimation {} *x2; struct __CFArray {} *x3; void *x4; struct __C3DModelTarget {} *x5; struct __CFString {} *x6; }*)copyAnimationChannelForKeyPath:(id)arg1;
- (void)copyPropertiesFrom:(id)arg1;
- (void)dealloc;
- (id)description;
- (struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; struct __C3DImage {} *x3; struct __C3DTextureSampler {} *x4; struct __C3DTexture {} *x5; struct __C3DImageProxy {} *x6; struct __C3DTransforms {} *x7; int x8; float x9; int x10; void *x11; }*)effectSlot;
- (struct __C3DEffectSlot { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_2_1_1; } x2; struct __C3DImage {} *x3; struct __C3DTextureSampler {} *x4; struct __C3DTexture {} *x5; struct __C3DImageProxy {} *x6; struct __C3DTransforms {} *x7; int x8; float x9; int x10; void *x11; }*)effectSlotCreateIfNeeded:(bool)arg1;
- (void)encodeWithCoder:(id)arg1;
- (struct __C3DImage { }*)getC3DImageRef;
- (id)image;
- (id)init;
- (id)initPresentationMaterialPropertyWithModelProperty:(id)arg1;
- (id)initWithCoder:(id)arg1;
- (id)initWithParent:(id)arg1 andCustomName:(id)arg2;
- (id)initWithParent:(id)arg1 propertyType:(int)arg2;
- (double)intensity;
- (bool)isAnimationForKeyPaused:(id)arg1;
- (bool)isPausedOrPausedByInheritance;
- (id)layer;
- (long long)magnificationFilter;
- (long long)mappingChannel;
- (double)maxAnisotropy;
- (long long)minificationFilter;
- (long long)mipFilter;
- (id)parent;
- (void)parentWillDie:(id)arg1;
- (void)pauseAnimationForKey:(id)arg1;
- (id)presentationInstance;
- (id)presentationMaterialProperty;
- (id)proceduralContents;
- (int)propertyType;
- (id)pvrtcData;
- (void)removeAllAnimations;
- (void)removeAnimationForKey:(id)arg1;
- (void)removeAnimationForKey:(id)arg1 fadeOutDuration:(double)arg2;
- (void)resumeAnimationForKey:(id)arg1;
- (struct __C3DScene { }*)sceneRef;
- (void)setAttachment:(id)arg1;
- (void)setBorderColor:(id)arg1;
- (void)setColor:(id)arg1;
- (void)setContent:(id)arg1;
- (void)setContents:(id)arg1;
- (void)setContentsTransform:(struct SCNMatrix4 { float x1; float x2; float x3; float x4; float x5; float x6; float x7; float x8; float x9; float x10; float x11; float x12; float x13; float x14; float x15; float x16; })arg1;
- (void)setImage:(id)arg1;
- (void)setIntensity:(double)arg1;
- (void)setLayer:(id)arg1;
- (void)setMagnificationFilter:(long long)arg1;
- (void)setMappingChannel:(long long)arg1;
- (void)setMaxAnisotropy:(double)arg1;
- (void)setMinificationFilter:(long long)arg1;
- (void)setMipFilter:(long long)arg1;
- (void)setProceduralContents:(id)arg1;
- (void)setSkScene:(id)arg1;
- (void)setSkTexture:(id)arg1;
- (void)setWrapS:(long long)arg1;
- (void)setWrapT:(long long)arg1;
- (id)skScene;
- (id)skTexture;
- (id)slotName;
- (void)synchronizeCustomPropertyWithParent:(id)arg1 andCustomName:(id)arg2;
- (struct __C3DTextureSampler { struct __CFRuntimeBase { unsigned long long x_1_1_1; unsigned char x_1_1_2[4]; unsigned int x_1_1_3; } x1; int x2; int x3; int x4; int x5; int x6; int x7; struct C3DColor4 { union { float x_1_2_1[4]; struct { float x_2_3_1; float x_2_3_2; float x_2_3_3; float x_2_3_4; } x_1_2_2; } x_8_1_1; } x8; float x9; unsigned char x10; int x11; unsigned long long x12; }*)textureSampler;
- (long long)wrapS;
- (long long)wrapT;

@end
