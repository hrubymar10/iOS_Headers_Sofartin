/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/PhotosUI.framework/PhotosUI
 */

@interface PUAlbumListCellContentView : UIView <UITextFieldDelegate> {
    UIImageView *__badgeImageView;
    UIButton *__deleteButton;
    UIButton *__pinButton;
    bool __showsTitleAndSubtitle;
    UILabel *__subtitleLabel;
    UITextField *__titleTextField;
    long long _badgeType;
    bool _combinesPhotoDecorations;
    UIView *_customImageView;
    <PUAlbumListCellDelegate> *_delegate;
    unsigned long long _editCapabilities;
    bool _editing;
    bool _enabled;
    long long _layout;
    bool _pinned;
    bool _showsDeleteButtonWhenEditing;
    PUStackView *_stackView;
    NSString *_subtitle;
    NSString *_title;
    double _xInset;
}

@property(setter=_setBadgeImageView:,assign,retain) UIImageView * _badgeImageView;
@property(setter=_setDeleteButton:,assign,retain) UIButton * _deleteButton;
@property(setter=_setPinButton:,assign,retain) UIButton * _pinButton;
@property(setter=_setShowsTitleAndSubtitle:,assign,readwrite) bool _showsTitleAndSubtitle;
@property(setter=_setSubtitleLabel:,assign,retain) UILabel * _subtitleLabel;
@property(setter=_setTitleTextField:,assign,retain) UITextField * _titleTextField;
@property(assign,readwrite) long long badgeType;
@property(assign,readwrite) bool combinesPhotoDecorations;
@property(assign,retain) UIView * customImageView;
@property(assign,copy) NSString * debugDescription;
@property(assign,readwrite) <PUAlbumListCellDelegate> * delegate;
@property(assign,copy) NSString * description;
@property(assign,readwrite) unsigned long long editCapabilities;
@property(getter=isEditing,assign,readwrite) bool editing;
@property(getter=isEnabled,assign,readwrite) bool enabled;
@property(assign,readonly) unsigned long long hash;
@property(assign,readwrite) long long layout;
@property(getter=isPinned,assign,readwrite) bool pinned;
@property(assign,readwrite) bool showsDeleteButtonWhenEditing;
@property(assign,retain) PUStackView * stackView;
@property(assign,copy) NSString * subtitle;
@property(assign,readonly) Class superclass;
@property(assign,copy) NSString * title;
@property(assign,readwrite) double xInset;

+ (void)_updateLabelGlobalCachedSizes;
+ (void)initialize;

- (void).cxx_destruct;
- (id)_badgeImageView;
- (void)_deleteAction:(id)arg1;
- (id)_deleteButton;
- (struct CGPoint { double x1; double x2; })_deleteButtonCenter;
- (void)_pinAction:(id)arg1;
- (id)_pinButton;
- (struct CGPoint { double x1; double x2; })_pinButtonOriginForBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 pinButtonSize:(struct CGSize { double x1; double x2; })arg2 titleTextFieldFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3 subtitleLabelFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg4;
- (void)_setBadgeImageView:(id)arg1;
- (void)_setDeleteButton:(id)arg1;
- (void)_setPinButton:(id)arg1;
- (void)_setShowsTitleAndSubtitle:(bool)arg1;
- (void)_setStackView:(id)arg1;
- (void)_setSubtitleLabel:(id)arg1;
- (void)_setTitleTextField:(id)arg1;
- (bool)_showsPinButton;
- (bool)_showsTitleAndSubtitle;
- (id)_subtitleLabel;
- (double)_titleFieldAlpha;
- (id)_titleTextField;
- (long long)_titleTextFieldAlignmentForLayout:(long long)arg1;
- (long long)_titleTextFieldClearButtonModeForLayout:(long long)arg1;
- (void)_updateBadgeAnimated:(bool)arg1;
- (void)_updateDeleteButtonAnimated:(bool)arg1;
- (void)_updatePinButtonAnimated:(bool)arg1;
- (void)_updateStackViewAnimated:(bool)arg1;
- (void)_updateSubtitleLabelAnimated:(bool)arg1;
- (void)_updateSubviewOrdering;
- (void)_updateTitleFieldAnimated:(bool)arg1;
- (long long)badgeType;
- (void)cancelPerformRetitleAction;
- (bool)combinesPhotoDecorations;
- (id)customImageView;
- (id)delegate;
- (unsigned long long)editCapabilities;
- (void)handleTransitionFade:(bool)arg1 animate:(bool)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)isEditing;
- (bool)isEnabled;
- (bool)isPinned;
- (long long)layout;
- (void)layoutSubviews;
- (void)prepareForReuse;
- (void)setBadgeType:(long long)arg1;
- (void)setCombinesPhotoDecorations:(bool)arg1;
- (void)setCustomImageView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setEditCapabilities:(unsigned long long)arg1;
- (void)setEditCapabilities:(unsigned long long)arg1 animated:(bool)arg2;
- (void)setEditing:(bool)arg1;
- (void)setEditing:(bool)arg1 animated:(bool)arg2;
- (void)setEnabled:(bool)arg1;
- (void)setEnabled:(bool)arg1 animated:(bool)arg2;
- (void)setLayout:(long long)arg1;
- (void)setPinned:(bool)arg1;
- (void)setShowsDeleteButtonWhenEditing:(bool)arg1;
- (void)setShowsTitle:(bool)arg1 animated:(bool)arg2;
- (void)setSubtitle:(id)arg1;
- (void)setSubtitle:(id)arg1 animated:(bool)arg2;
- (void)setTitle:(id)arg1;
- (void)setXInset:(double)arg1;
- (bool)showsDeleteButtonWhenEditing;
- (id)stackView;
- (id)subtitle;
- (bool)textField:(id)arg1 shouldChangeCharactersInRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 replacementString:(id)arg3;
- (void)textFieldDidEndEditing:(id)arg1;
- (bool)textFieldShouldBeginEditing:(id)arg1;
- (bool)textFieldShouldReturn:(id)arg1;
- (id)title;
- (double)xInset;

@end
