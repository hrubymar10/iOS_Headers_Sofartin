/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/SpriteKit.framework/SpriteKit
 */

@interface SKLabelNode : SKNode {
    SKBitmapFont *_bmf;
    struct { 
        float r; 
        float g; 
        float b; 
        float a; 
    } _fontColor;
    NSString *_fontName;
    float _fontSize;
    long long _horizontalAlignmentMode;
    long long _labelBlendMode;
    UIColor *_labelColor;
    float _labelColorBlend;
    NSString *_text;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _textRect;
    SKSpriteNode *_textSprite;
    NSMutableArray *_textSprites;
    long long _verticalAlignmentMode;
}

@property (nonatomic) long long blendMode;
@property (nonatomic, retain) UIColor *color;
@property (nonatomic) double colorBlendFactor;
@property (nonatomic, retain) UIColor *fontColor;
@property (nonatomic, copy) NSString *fontName;
@property (nonatomic) double fontSize;
@property (nonatomic) long long horizontalAlignmentMode;
@property (nonatomic, copy) NSString *text;
@property (nonatomic) long long verticalAlignmentMode;

+ (id)_labelNodeWithFontNamed:(id)arg1;
+ (id)_labelNodeWithFontTexture:(id)arg1 fontDataString:(id)arg2;
+ (id)labelNodeWithFontNamed:(id)arg1;
+ (id)labelNodeWithText:(id)arg1;

- (id).cxx_construct;
- (void).cxx_destruct;
- (void)_flippedChangedFrom:(bool)arg1 to:(bool)arg2;
- (id)_getTextSprites;
- (void)_initialize;
- (void)_scaleFactorChangedFrom:(float)arg1 to:(float)arg2;
- (long long)blendMode;
- (id)childrenInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)color;
- (double)colorBlendFactor;
- (id)copy;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)createBitmapSpritesForText;
- (void)createSpritesForText;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (id)fontColor;
- (id)fontName;
- (double)fontSize;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })frame;
- (long long)horizontalAlignmentMode;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithFontNamed:(id)arg1;
- (bool)isEqualToNode:(id)arg1;
- (id)nodeAtPoint:(struct CGPoint { double x1; double x2; })arg1 recursive:(bool)arg2;
- (id)nodesAtPoint:(struct CGPoint { double x1; double x2; })arg1;
- (void)setBlendMode:(long long)arg1;
- (void)setColor:(id)arg1;
- (void)setColorBlendFactor:(double)arg1;
- (void)setFontColor:(id)arg1;
- (void)setFontName:(id)arg1;
- (void)setFontSize:(double)arg1;
- (void)setHorizontalAlignmentMode:(long long)arg1;
- (void)setText:(id)arg1;
- (void)setVerticalAlignmentMode:(long long)arg1;
- (id)text;
- (long long)verticalAlignmentMode;

@end
