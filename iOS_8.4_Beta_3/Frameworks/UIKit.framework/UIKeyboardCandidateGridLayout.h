/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIKeyboardCandidateGridLayout : UICollectionViewLayout {
    NSArray *_candidateGroups;
    int _candidatesVisualStyle;
    NSMutableArray *_cellAttributes;
    unsigned long long _columnsCount;
    struct CGSize { 
        double width; 
        double height; 
    } _contentSize;
    NSSet *_emphasizedCandidates;
    bool _expanded;
    bool _hasSecondaryCandidates;
    double _headerViewHeight;
    bool _needsLayout;
    bool _needsPaddingForIndexScrubber;
    NSMutableDictionary *_supplementaryAttributes;
    bool _supportsNumberKeySelection;
    struct { 
        unsigned int idiom : 6; 
        unsigned int landscape : 1; 
        unsigned int split : 1; 
        unsigned int appearance : 8; 
        unsigned int rendering : 16; 
    } _visualStyling;
}

@property(assign,retain) NSArray * candidateGroups;
@property(assign,readwrite) int candidatesVisualStyle;
@property(assign,retain) NSMutableArray * cellAttributes;
@property(assign,readwrite) unsigned long long columnsCount;
@property(assign,retain) NSSet * emphasizedCandidates;
@property(assign,readwrite) bool expanded;
@property(assign,readonly) double groupBarWidth;
@property(assign,readwrite) bool hasSecondaryCandidates;
@property(assign,readwrite) double headerViewHeight;
@property(assign,readwrite) bool needsLayout;
@property(assign,readwrite) bool needsPaddingForIndexScrubber;
@property(assign,readonly) struct CGSize { double x1; double x2; } rowSize;
@property(assign,retain) NSMutableDictionary * supplementaryAttributes;
@property(assign,readwrite) bool supportsNumberKeySelection;
@property(assign,readwrite) struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; } visualStyling;

+ (void)deemphasizeLastItemIfNeeded:(id)arg1;
+ (id)layout;
+ (Class)layoutAttributesClass;

- (id)attributesWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)candidateGroups;
- (int)candidatesVisualStyle;
- (id)cellAttributes;
- (struct CGSize { double x1; double x2; })collectionViewContentSize;
- (unsigned long long)columnsCount;
- (void)dealloc;
- (id)emphasizedCandidates;
- (bool)expanded;
- (void)finishLayoutForRowWithAttributes:(id)arg1 minimumCellWidth:(double)arg2 remainingWidth:(double)arg3 rowOrigin:(struct CGPoint { double x1; double x2; })arg4 isFirstRow:(bool)arg5 isLastRow:(bool)arg6 zIndex:(long long)arg7;
- (void)getGroupBarWidth:(double*)arg1 headerAttributes:(id*)arg2;
- (double)groupBarWidth;
- (bool)hasSecondaryCandidates;
- (double)headerViewHeight;
- (id)init;
- (void)invalidateLayout;
- (id)layoutAttributesForCandidateIndexPath:(id)arg1;
- (id)layoutAttributesForElementsInRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)layoutAttributesForItemAtIndexPath:(id)arg1;
- (id)layoutAttributesForSupplementaryViewOfKind:(id)arg1 atIndexPath:(id)arg2;
- (bool)needsLayout;
- (bool)needsPaddingForIndexScrubber;
- (id)nextCandidateIndexPathFromIndexPath:(id)arg1;
- (unsigned long long)numberOfCandidateSections;
- (unsigned long long)numberOfItemsInSection:(long long)arg1;
- (unsigned long long)numberOfSections;
- (void)prepareLayout;
- (id)previousCandidateIndexPathFromIndexPath:(id)arg1;
- (struct CGSize { double x1; double x2; })rowSize;
- (void)setCandidateGroups:(id)arg1;
- (void)setCandidatesVisualStyle:(int)arg1;
- (void)setCellAttributes:(id)arg1;
- (void)setColumnsCount:(unsigned long long)arg1;
- (void)setEmphasizedCandidates:(id)arg1;
- (void)setExpanded:(bool)arg1;
- (void)setHasSecondaryCandidates:(bool)arg1;
- (void)setHeaderViewHeight:(double)arg1;
- (void)setNeedsLayout:(bool)arg1;
- (void)setNeedsPaddingForIndexScrubber:(bool)arg1;
- (void)setSupplementaryAttributes:(id)arg1;
- (void)setSupportsNumberKeySelection:(bool)arg1;
- (void)setVisualStyling:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1;
- (bool)shouldInvalidateLayoutForBoundsChange:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)supplementaryAttributes;
- (bool)supportsNumberKeySelection;
- (struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })visualStyling;

@end
