/* Generated by RuntimeBrowser
   Image: /System/Library/Frameworks/UIKit.framework/UIKit
 */

@interface UIKeyboardCandidateGridCell : UICollectionViewCell {
    NSString *_alternativeText;
    UILabel *_alternativeTextLabel;
    unsigned long long _candidateNumber;
    UILabel *_candidateNumberLabel;
    struct CGSize { 
        double width; 
        double height; 
    } _candidateNumberSize;
    int _candidatesVisualStyle;
    double _cellPadding;
    bool _dummy;
    unsigned long long _edges;
    bool _emphasizedAppearance;
    double _minimumWidth;
    double _rightPadding;
    double _rowHeight;
    bool _secondaryCandidateAppearance;
    bool _shouldShowCandidateNumber;
    struct CGSize { 
        double width; 
        double height; 
    } _size;
    NSString *_text;
    long long _textAlignment;
    UILabel *_textLabel;
    bool _usesGroupHeaderAppearance;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _visibleBounds;
    struct { 
        unsigned int idiom : 6; 
        unsigned int landscape : 1; 
        unsigned int split : 1; 
        unsigned int appearance : 8; 
        unsigned int rendering : 16; 
    } _visualStyling;
}

@property(assign,copy) NSString * alternativeText;
@property(assign,retain) UILabel * alternativeTextLabel;
@property(assign,readonly) bool canShowCandidateNumber;
@property(assign,readwrite) unsigned long long candidateNumber;
@property(assign,retain) UILabel * candidateNumberLabel;
@property(assign,readwrite) struct CGSize { double x1; double x2; } candidateNumberSize;
@property(assign,readwrite) int candidatesVisualStyle;
@property(assign,readwrite) double cellPadding;
@property(assign,readwrite) bool dummy;
@property(assign,readwrite) unsigned long long edges;
@property(assign,readwrite) bool emphasizedAppearance;
@property(assign,readwrite) double minimumWidth;
@property(assign,readwrite) double rightPadding;
@property(assign,readwrite) double rowHeight;
@property(assign,readwrite) bool secondaryCandidateAppearance;
@property(assign,readwrite) bool shouldShowCandidateNumber;
@property(assign,readwrite) struct CGSize { double x1; double x2; } size;
@property(assign,copy) NSString * text;
@property(assign,readwrite) long long textAlignment;
@property(assign,retain) UILabel * textLabel;
@property(assign,readwrite) bool usesGroupHeaderAppearance;
@property(assign,readwrite) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } visibleBounds;
@property(assign,readwrite) struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; } visualStyling;

+ (bool)drawsSideBorders;
+ (struct CGColor { }*)legacy_outlineColorForVisualStyling:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1 candidatesVisualStyle:(int)arg2;
+ (struct CGColor { }*)legacy_outlineShadowColorForVisualStyling:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1 candidatesVisualStyle:(int)arg2;
+ (id)reuseIdentifier;
+ (double)rightPaddingForIndex;
+ (struct CGSize { double x1; double x2; })sizeForGroupHeader:(id)arg1 visualStyle:(int)arg2;
+ (double)widthForCandidate:(id)arg1 candidateNumber:(unsigned long long)arg2 visualStyle:(int)arg3;

- (id)alternativeText;
- (id)alternativeTextLabel;
- (void)applyLayoutAttributes:(id)arg1;
- (bool)canShowCandidateNumber;
- (unsigned long long)candidateNumber;
- (id)candidateNumberLabel;
- (struct CGSize { double x1; double x2; })candidateNumberSize;
- (int)candidatesVisualStyle;
- (double)cellPadding;
- (void)dealloc;
- (void)drawBackgroundAndBorders;
- (void)drawRect:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)dummy;
- (unsigned long long)edges;
- (bool)emphasizedAppearance;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (double)minimumWidth;
- (void)prepareForReuse;
- (double)rightPadding;
- (double)rowHeight;
- (bool)secondaryCandidateAppearance;
- (void)setAlternativeText:(id)arg1;
- (void)setAlternativeTextLabel:(id)arg1;
- (void)setCandidateNumber:(unsigned long long)arg1;
- (void)setCandidateNumberLabel:(id)arg1;
- (void)setCandidateNumberSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setCandidatesVisualStyle:(int)arg1;
- (void)setCellPadding:(double)arg1;
- (void)setDummy:(bool)arg1;
- (void)setEdges:(unsigned long long)arg1;
- (void)setEmphasizedAppearance:(bool)arg1;
- (void)setHighlighted:(bool)arg1;
- (void)setMinimumWidth:(double)arg1;
- (void)setRightPadding:(double)arg1;
- (void)setRowHeight:(double)arg1;
- (void)setSecondaryCandidateAppearance:(bool)arg1;
- (void)setSelected:(bool)arg1;
- (void)setShouldShowCandidateNumber:(bool)arg1;
- (void)setSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setText:(id)arg1;
- (void)setTextAlignment:(long long)arg1;
- (void)setTextLabel:(id)arg1;
- (void)setUsesGroupHeaderAppearance:(bool)arg1;
- (void)setVisibleBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setVisualStyling:(struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })arg1;
- (bool)shouldShowCandidateNumber;
- (struct CGSize { double x1; double x2; })size;
- (id)text;
- (long long)textAlignment;
- (id)textLabel;
- (void)updateGroupHeaderLabelPosition;
- (void)updateLabelColors;
- (void)updateLabels;
- (bool)usesGroupHeaderAppearance;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })visibleBounds;
- (struct { unsigned int x1 : 6; unsigned int x2 : 1; unsigned int x3 : 1; unsigned int x4 : 8; unsigned int x5 : 16; })visualStyling;

@end
