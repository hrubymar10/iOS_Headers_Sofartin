/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDQueuedFetch : NSObject {
    bool _allowsCellularAccess;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    id _completionHandler;
    NSMutableDictionary *_completionHandlersByItemID;
    CKDClientContext *_context;
    NSString *_deviceIdentifier;
    CKDDatabaseOperation *_fetchOp;
    bool _isFinished;
    NSDate *_lastRequestDate;
    NSOperationQueue *_operationQueue;
    long long _qos;
    long long _scope;
    NSString *_sourceApplicationBundleIdentifier;
    NSString *_sourceApplicationSecondaryIdentifier;
    NSDate *_startDate;
    long long _usesBackgroundSession;
}

@property (nonatomic) bool allowsCellularAccess;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *callbackQueue;
@property (nonatomic, copy) id completionHandler;
@property (nonatomic, retain) NSMutableDictionary *completionHandlersByItemID;
@property (nonatomic) CKDClientContext *context;
@property (nonatomic, retain) NSString *deviceIdentifier;
@property (nonatomic, retain) CKDDatabaseOperation *fetchOp;
@property (nonatomic) bool isFinished;
@property (nonatomic, retain) NSDate *lastRequestDate;
@property (nonatomic) NSOperationQueue *operationQueue;
@property (nonatomic) long long qos;
@property (nonatomic) long long scope;
@property (nonatomic, readonly) bool shouldStart;
@property (nonatomic, retain) NSString *sourceApplicationBundleIdentifier;
@property (nonatomic, retain) NSString *sourceApplicationSecondaryIdentifier;
@property (nonatomic, retain) NSDate *startDate;
@property (nonatomic) long long usesBackgroundSession;

- (void).cxx_destruct;
- (id)CKPropertiesDescription;
- (void)addCallbackForItemWithID:(id)arg1 callback:(id)arg2;
- (id)allItemIDs;
- (bool)allowsCellularAccess;
- (id)callbackQueue;
- (id)callbacksForItemWithID:(id)arg1;
- (bool)canBeUsedForOperation:(id)arg1;
- (id)completionHandler;
- (id)completionHandlersByItemID;
- (id)context;
- (id)description;
- (id)deviceIdentifier;
- (id)fetchOp;
- (id)fetchOperation;
- (void)finishFetchOperationWithError:(id)arg1;
- (id)initWithOperation:(id)arg1 context:(id)arg2 operationQueue:(id)arg3;
- (bool)isFinished;
- (id)lastRequestDate;
- (int)numberOfCallbacks;
- (id)operationInfo;
- (Class)operationInfoClass;
- (id)operationQueue;
- (void)performCallbacksForItemWithID:(id)arg1 withItem:(id)arg2 error:(id)arg3;
- (long long)qos;
- (void)removeCallbacksForItemWithID:(id)arg1;
- (long long)scope;
- (void)setAllowsCellularAccess:(bool)arg1;
- (void)setCallbackQueue:(id)arg1;
- (void)setCompletionHandler:(id)arg1;
- (void)setCompletionHandlersByItemID:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setDeviceIdentifier:(id)arg1;
- (void)setFetchOp:(id)arg1;
- (void)setIsFinished:(bool)arg1;
- (void)setLastRequestDate:(id)arg1;
- (void)setOperationQueue:(id)arg1;
- (void)setQos:(long long)arg1;
- (void)setScope:(long long)arg1;
- (void)setSourceApplicationBundleIdentifier:(id)arg1;
- (void)setSourceApplicationSecondaryIdentifier:(id)arg1;
- (void)setStartDate:(id)arg1;
- (void)setUsesBackgroundSession:(long long)arg1;
- (bool)shouldStart;
- (id)sourceApplicationBundleIdentifier;
- (id)sourceApplicationSecondaryIdentifier;
- (void)start;
- (id)startDate;
- (long long)usesBackgroundSession;

@end
