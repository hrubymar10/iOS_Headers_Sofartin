/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudKitDaemon.framework/CloudKitDaemon
 */

@interface CKDClientProxy : NSObject <CKDSystemAvailabilityWatcher, CKXPCDaemon> {
    NSOperationQueue *_backgroundOperationThrottleQueue;
    NSString *_bundleIdentifier;
    NSArray *_cachedSandboxExtensions;
    NSString *_cachedSourceApplicationBundleIdentifier;
    bool _canOpenByID;
    bool _canUsePackages;
    NSObject<OS_dispatch_queue> *_cancellationQueue;
    NSXPCConnection *_connection;
    CKDClientContext *_context;
    NSOperationQueue *_operationQueue;
    NSMutableArray *_pendingContexts;
    NSMutableSet *_pendingOperationIDs;
    int _pid;
    NSString *_procName;
    bool _sandboxed;
    NSObject<OS_dispatch_queue> *_setupQueue;
    CKWatchdog *_watchdog;
}

@property (nonatomic, readonly) struct { unsigned int x1[8]; } auditToken;
@property (nonatomic, retain) NSOperationQueue *backgroundOperationThrottleQueue;
@property (nonatomic, retain) NSString *bundleIdentifier;
@property (nonatomic, retain) NSArray *cachedSandboxExtensions;
@property (nonatomic, retain) NSString *cachedSourceApplicationBundleIdentifier;
@property (nonatomic) bool canOpenByID;
@property (nonatomic) bool canUsePackages;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *cancellationQueue;
@property (nonatomic) NSXPCConnection *connection;
@property (nonatomic, readonly) CKDClientContext *context;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSOperationQueue *operationQueue;
@property (nonatomic, retain) NSMutableArray *pendingContexts;
@property (nonatomic, retain) NSMutableSet *pendingOperationIDs;
@property (nonatomic, readonly) int pid;
@property (nonatomic, readonly) NSString *procName;
@property (getter=isSandboxed, nonatomic) bool sandboxed;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *setupQueue;
@property (readonly) Class superclass;
@property (nonatomic, retain) CKWatchdog *watchdog;

+ (id)sharedClientThrottlingOperationQueue;

- (void).cxx_destruct;
- (long long)_accountStatusWithClientContext:(id)arg1;
- (void)_addOperationWithOperationInfo:(id)arg1 factoryBlock:(id)arg2;
- (long long)_applicationPermissionStatusFromUserPrivacySetting:(long long)arg1;
- (id)_clientPrefixEntitlement;
- (void)_finishClientSetupWithClientContext:(id)arg1 completionHandler:(id)arg2;
- (void)_globalStatusForApplicationPermission:(unsigned long long)arg1 setupInfo:(id)arg2 completionHandler:(id)arg3;
- (void)_handleCompletionForOperation:(id)arg1 withBlock:(id)arg2;
- (void)_handleProgressForOperation:(id)arg1 withArguments:(id)arg2;
- (bool)_hasCustomAccountsEntitlement;
- (bool)_hasEntitlementForKey:(id)arg1;
- (bool)_hasEnvironmentEntitlement;
- (bool)_hasMasqueradingEntitlement;
- (bool)_isConnectionAuthorizedForOperation:(id)arg1 error:(id*)arg2;
- (void)_setApplicationPermission:(unsigned long long)arg1 enabled:(bool)arg2 setupInfo:(id)arg3 completionHandler:(id)arg4;
- (void)_setupClientWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (void)_setupOperationQueues;
- (void)_startClientSetupWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (void)accountChangedWithID:(id)arg1;
- (void)accountStatusWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (void)accountsDidGrantAccessToBundleID:(id)arg1 containerIdentifiers:(id)arg2;
- (void)accountsDidRevokeAccessToBundleID:(id)arg1 containerIdentifiers:(id)arg2;
- (void)accountsWillDeleteAccount:(id)arg1 completionHandler:(id)arg2;
- (id)apsEnvironmentEntitlement;
- (struct { unsigned int x1[8]; })auditToken;
- (id)backgroundOperationThrottleQueue;
- (id)bundleIdentifier;
- (id)cachedSandboxExtensions;
- (id)cachedSourceApplicationBundleIdentifier;
- (bool)canOpenByID;
- (bool)canReadMMCSItem:(id)arg1 error:(id*)arg2;
- (bool)canUsePackages;
- (bool)canUsePackagesWithError:(id*)arg1;
- (void)cancelOperationWithIdentifier:(id)arg1;
- (id)cancellationQueue;
- (void)clearAssetCacheWithSetupInfo:(id)arg1 databaseScope:(long long)arg2;
- (void)clearAuthTokensWithSetupInfo:(id)arg1 recordID:(id)arg2 databaseScope:(long long)arg3;
- (void)clearRecordCacheWithSetupInfo:(id)arg1 databaseScope:(long long)arg2;
- (id)connection;
- (id)context;
- (void)currentUserIDWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (bool)darkWakeEnabledEntitlement;
- (void)dealloc;
- (void)forceFinishClientSetupWithClientContext:(id)arg1;
- (void)getBehaviorOptionForKey:(id)arg1 isContainerOption:(bool)arg2 completionHandler:(id)arg3;
- (void)getNewWebSharingIdentityWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (void)getPCSDiagnosticsForZonesWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (void)getSandboxExtensionsWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (bool)hasCloudKitSystemServiceEntitlement;
- (bool)hasDarkWakeNetworkReachabilityEnabledEntitlement;
- (bool)hasDeviceIdentifierEntitlement;
- (bool)hasProtectionDataEntitlement;
- (id)initWithConnection:(id)arg1;
- (bool)isSandboxed;
- (id)operationQueue;
- (id)pendingContexts;
- (id)pendingOperationIDs;
- (void)performAcceptSharesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performDiscoverAllContactsOperation:(id)arg1 withBlock:(id)arg2;
- (void)performDiscoverUserInfosOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchChangedRecordZonesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchNotificationChangesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchRecordChangesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchRecordVersionsOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchRecordZonesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchRecordsOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchShareInfoOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchSharesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchSubscriptionsOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchUserIdentitiesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchUserQuotaOperation:(id)arg1 withBlock:(id)arg2;
- (void)performFetchWebAuthTokenOperation:(id)arg1 withBlock:(id)arg2;
- (void)performMarkNotificationsReadOperation:(id)arg1 withBlock:(id)arg2;
- (void)performModifyBadgeOperation:(id)arg1 withBlock:(id)arg2;
- (void)performModifyRecordAccessOperation:(id)arg1 withBlock:(id)arg2;
- (void)performModifyRecordZonesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performModifyRecordsOperation:(id)arg1 withBlock:(id)arg2;
- (void)performModifySharesOperation:(id)arg1 withBlock:(id)arg2;
- (void)performModifySubscriptionsOperation:(id)arg1 withBlock:(id)arg2;
- (void)performModifyWebSharingOperation:(id)arg1 withBlock:(id)arg2;
- (void)performPublishAssetsOperation:(id)arg1 withBlock:(id)arg2;
- (void)performQueryOperation:(id)arg1 withBlock:(id)arg2;
- (int)pid;
- (id)procName;
- (void)repairZonePCSWithOperationInfo:(id)arg1 withBlock:(id)arg2;
- (void)requestApplicationPermission:(unsigned long long)arg1 setupInfo:(id)arg2 completionHandler:(id)arg3;
- (void)resetAllApplicationPermissionsWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (void)serverPreferredPushEnvironmentWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (void)setApplicationPermission:(unsigned long long)arg1 enabled:(bool)arg2 setupInfo:(id)arg3 completionHandler:(id)arg4;
- (void)setBackgroundOperationThrottleQueue:(id)arg1;
- (void)setBundleIdentifier:(id)arg1;
- (void)setCachedSandboxExtensions:(id)arg1;
- (void)setCachedSourceApplicationBundleIdentifier:(id)arg1;
- (void)setCanOpenByID:(bool)arg1;
- (void)setCanUsePackages:(bool)arg1;
- (void)setCancellationQueue:(id)arg1;
- (void)setConnection:(id)arg1;
- (void)setContext:(id)arg1;
- (void)setFakeError:(id)arg1 forNextRequestOfClassName:(id)arg2 setupInfo:(id)arg3;
- (void)setOperationQueue:(id)arg1;
- (void)setPendingContexts:(id)arg1;
- (void)setPendingOperationIDs:(id)arg1;
- (void)setSandboxed:(bool)arg1;
- (void)setSetupQueue:(id)arg1;
- (void)setWatchdog:(id)arg1;
- (id)setupQueue;
- (void)statusForApplicationPermission:(unsigned long long)arg1 setupInfo:(id)arg2 completionHandler:(id)arg3;
- (void)statusGroupsForApplicationPermission:(unsigned long long)arg1 setupInfo:(id)arg2 completionHandler:(id)arg3;
- (id)statusReport;
- (void)systemAvailabilityChanged:(bool)arg1;
- (void)tearDown;
- (void)tossConfigWithSetupInfo:(id)arg1 completionHandler:(id)arg2;
- (void)updatePushTokens;
- (bool)usePublicTokenEntitlement;
- (id)watchdog;
- (void)wipeAllCachesAndDie;

@end
