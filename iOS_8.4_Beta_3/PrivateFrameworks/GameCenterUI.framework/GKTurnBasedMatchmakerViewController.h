/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GameCenterUI.framework/GameCenterUI
 */

@interface GKTurnBasedMatchmakerViewController : UINavigationController {
    UIAlertController *_alertController;
    GKHostedTurnBasedViewController *_hostedViewController;
    GKMatchRequest *_matchRequest;
    GKRemoteTurnBasedViewController *_remoteViewController;
    bool _showExistingMatches;
    <GKTurnBasedMatchmakerViewControllerDelegate> *_turnBasedMatchmakerDelegateWeak;
}

@property(assign,retain) UIAlertController * alertController;
@property(assign,retain) GKHostedTurnBasedViewController * hostedViewController;
@property(assign,retain) GKMatchRequest * matchRequest;
@property(assign,retain) GKRemoteTurnBasedViewController * remoteViewController;
@property(assign,readwrite) bool showExistingMatches;
@property(assign,readwrite) <GKTurnBasedMatchmakerViewControllerDelegate> * turnBasedMatchmakerDelegate;

+ (bool)_preventsAppearanceProxyCustomization;

- (void)_setupChildViewController;
- (id)alertController;
- (void)authenticationChanged:(id)arg1;
- (void)cancel;
- (void)dealloc;
- (void)finishWithError:(id)arg1;
- (void)finishWithMatch:(id)arg1;
- (id)hostedViewController;
- (id)init;
- (id)initWithMatchRequest:(id)arg1;
- (void)loadView;
- (id)matchRequest;
- (void)playerQuitMatch:(id)arg1;
- (id)remoteViewController;
- (void)setAlertController:(id)arg1;
- (void)setHostedViewController:(id)arg1;
- (void)setMatchRequest:(id)arg1;
- (void)setRemoteViewController:(id)arg1;
- (void)setShowExistingMatches:(bool)arg1;
- (void)setTurnBasedMatchmakerDelegate:(id)arg1;
- (bool)shouldAutorotateToInterfaceOrientation:(long long)arg1;
- (bool)showExistingMatches;
- (unsigned long long)supportedInterfaceOrientations;
- (id)turnBasedMatchmakerDelegate;
- (void)viewDidAppear:(bool)arg1;
- (void)viewWillAppear:(bool)arg1;

@end
