/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/GeoServices.framework/GeoServices
 */

@interface GEORouteAttributes : PBCodable <NSCopying> {
    struct { 
        int *list; 
        unsigned long long count; 
        unsigned long long size; 
    } _additionalTransportTypes;
    int _basicPointsToBeIncluded;
    struct { 
        unsigned int timepoint : 1; 
        unsigned int basicPointsToBeIncluded : 1; 
        unsigned int mainTransportType : 1; 
        unsigned int trafficType : 1; 
        unsigned int walkingLimitMeters : 1; 
        unsigned int includeContingencyRoutes : 1; 
        unsigned int includeHistoricTravelTime : 1; 
        unsigned int includeLaneGuidance : 1; 
        unsigned int includeManeuverIcons : 1; 
        unsigned int includePhonetics : 1; 
        unsigned int includeSubsteps : 1; 
        unsigned int includeTrafficAlongRoute : 1; 
        unsigned int includeTrafficIncidents : 1; 
        unsigned int includeZilchPoints : 1; 
    } _has;
    bool _includeContingencyRoutes;
    bool _includeHistoricTravelTime;
    bool _includeLaneGuidance;
    bool _includeManeuverIcons;
    bool _includePhonetics;
    bool _includeSubsteps;
    bool _includeTrafficAlongRoute;
    bool _includeTrafficIncidents;
    bool _includeZilchPoints;
    int _mainTransportType;
    NSString *_phoneticLocaleIdentifier;
    struct { 
        double _time; 
        int _flexibility; 
        int _type; 
        struct { 
            unsigned int time : 1; 
            unsigned int flexibility : 1; 
            unsigned int type : 1; 
        } _has; 
    } _timepoint;
    int _trafficType;
    unsigned int _walkingLimitMeters;
}

@property (nonatomic, readonly) int*additionalTransportTypes;
@property (nonatomic, readonly) unsigned long long additionalTransportTypesCount;
@property (nonatomic) int basicPointsToBeIncluded;
@property (nonatomic) bool hasBasicPointsToBeIncluded;
@property (nonatomic) bool hasIncludeContingencyRoutes;
@property (nonatomic) bool hasIncludeHistoricTravelTime;
@property (nonatomic) bool hasIncludeLaneGuidance;
@property (nonatomic) bool hasIncludeManeuverIcons;
@property (nonatomic) bool hasIncludePhonetics;
@property (nonatomic) bool hasIncludeSubsteps;
@property (nonatomic) bool hasIncludeTrafficAlongRoute;
@property (nonatomic) bool hasIncludeTrafficIncidents;
@property (nonatomic) bool hasIncludeZilchPoints;
@property (nonatomic) bool hasMainTransportType;
@property (nonatomic, readonly) bool hasPhoneticLocaleIdentifier;
@property (nonatomic) bool hasTimepoint;
@property (nonatomic) bool hasTrafficType;
@property (nonatomic) bool hasWalkingLimitMeters;
@property (nonatomic) bool includeContingencyRoutes;
@property (nonatomic) bool includeHistoricTravelTime;
@property (nonatomic) bool includeLaneGuidance;
@property (nonatomic) bool includeManeuverIcons;
@property (nonatomic) bool includePhonetics;
@property (nonatomic) bool includeSubsteps;
@property (nonatomic) bool includeTrafficAlongRoute;
@property (nonatomic) bool includeTrafficIncidents;
@property (nonatomic) bool includeZilchPoints;
@property (nonatomic) int mainTransportType;
@property (nonatomic, retain) NSString *phoneticLocaleIdentifier;
@property (nonatomic) struct { double x1; int x2; int x3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; } timepoint;
@property (nonatomic) int trafficType;
@property (nonatomic) unsigned int walkingLimitMeters;

- (void)addAdditionalTransportType:(int)arg1;
- (int)additionalTransportTypeAtIndex:(unsigned long long)arg1;
- (int*)additionalTransportTypes;
- (unsigned long long)additionalTransportTypesCount;
- (int)basicPointsToBeIncluded;
- (void)clearAdditionalTransportTypes;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)dealloc;
- (id)description;
- (id)dictionaryRepresentation;
- (bool)hasBasicPointsToBeIncluded;
- (bool)hasIncludeContingencyRoutes;
- (bool)hasIncludeHistoricTravelTime;
- (bool)hasIncludeLaneGuidance;
- (bool)hasIncludeManeuverIcons;
- (bool)hasIncludePhonetics;
- (bool)hasIncludeSubsteps;
- (bool)hasIncludeTrafficAlongRoute;
- (bool)hasIncludeTrafficIncidents;
- (bool)hasIncludeZilchPoints;
- (bool)hasMainTransportType;
- (bool)hasPhoneticLocaleIdentifier;
- (bool)hasTimepoint;
- (bool)hasTrafficType;
- (bool)hasWalkingLimitMeters;
- (unsigned long long)hash;
- (bool)includeContingencyRoutes;
- (bool)includeHistoricTravelTime;
- (bool)includeLaneGuidance;
- (bool)includeManeuverIcons;
- (bool)includePhonetics;
- (bool)includeSubsteps;
- (bool)includeTrafficAlongRoute;
- (bool)includeTrafficIncidents;
- (bool)includeZilchPoints;
- (bool)isEqual:(id)arg1;
- (int)mainTransportType;
- (void)mergeFrom:(id)arg1;
- (id)phoneticLocaleIdentifier;
- (bool)readFrom:(id)arg1;
- (void)setAdditionalTransportTypes:(int*)arg1 count:(unsigned long long)arg2;
- (void)setBasicPointsToBeIncluded:(int)arg1;
- (void)setHasBasicPointsToBeIncluded:(bool)arg1;
- (void)setHasIncludeContingencyRoutes:(bool)arg1;
- (void)setHasIncludeHistoricTravelTime:(bool)arg1;
- (void)setHasIncludeLaneGuidance:(bool)arg1;
- (void)setHasIncludeManeuverIcons:(bool)arg1;
- (void)setHasIncludePhonetics:(bool)arg1;
- (void)setHasIncludeSubsteps:(bool)arg1;
- (void)setHasIncludeTrafficAlongRoute:(bool)arg1;
- (void)setHasIncludeTrafficIncidents:(bool)arg1;
- (void)setHasIncludeZilchPoints:(bool)arg1;
- (void)setHasMainTransportType:(bool)arg1;
- (void)setHasTimepoint:(bool)arg1;
- (void)setHasTrafficType:(bool)arg1;
- (void)setHasWalkingLimitMeters:(bool)arg1;
- (void)setIncludeContingencyRoutes:(bool)arg1;
- (void)setIncludeHistoricTravelTime:(bool)arg1;
- (void)setIncludeLaneGuidance:(bool)arg1;
- (void)setIncludeManeuverIcons:(bool)arg1;
- (void)setIncludePhonetics:(bool)arg1;
- (void)setIncludeSubsteps:(bool)arg1;
- (void)setIncludeTrafficAlongRoute:(bool)arg1;
- (void)setIncludeTrafficIncidents:(bool)arg1;
- (void)setIncludeZilchPoints:(bool)arg1;
- (void)setMainTransportType:(int)arg1;
- (void)setPhoneticLocaleIdentifier:(id)arg1;
- (void)setTimepoint:(struct { double x1; int x2; int x3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; })arg1;
- (void)setTrafficType:(int)arg1;
- (void)setWalkingLimitMeters:(unsigned int)arg1;
- (struct { double x1; int x2; int x3; struct { unsigned int x_4_1_1 : 1; unsigned int x_4_1_2 : 1; unsigned int x_4_1_3 : 1; } x4; })timepoint;
- (int)trafficType;
- (unsigned int)walkingLimitMeters;
- (void)writeTo:(id)arg1;

@end
