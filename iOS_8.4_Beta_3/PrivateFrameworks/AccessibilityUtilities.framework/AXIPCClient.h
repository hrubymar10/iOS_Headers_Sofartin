/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@interface AXIPCClient : NSObject {
    unsigned int _assignedServerMachPort;
    NSString *_clientIdentifier;
    struct __CFRunLoopSource { } *_clientSource;
    bool _connected;
    unsigned long long _connectionAttempts;
    AXAccessQueue *_connectionQueue;
    int _pid;
    AXAccessQueue *_portDeathAccessQueue;
    id _portDeathHandler;
    NSMutableArray *_postConnectionTasks;
    struct __CFMachPort { } *_serverPort;
    NSLock *_serverPortLock;
    NSString *_serviceName;
    float _timeout;
    bool _usesPerPidLookup;
    unsigned int clientCallbackPort;
    struct __CFRunLoopSource { } *clientCallbackSource;
    bool shouldRegisterCallbackSourceOnMainRunloop;
}

@property(assign,readonly) unsigned int clientCallbackPort;
@property(assign,readonly) struct __CFRunLoopSource { }* clientCallbackSource;
@property(assign,copy) NSString * clientIdentifier;
@property(getter=isConnected,assign,readwrite) bool connected;
@property(assign,retain) AXAccessQueue * connectionQueue;
@property(assign,readwrite) int pid;
@property(assign,retain) AXAccessQueue * portDeathAccessQueue;
@property(assign,copy) id portDeathHandler;
@property(assign,retain) NSMutableArray * postConnectionTasks;
@property(assign,readwrite) struct __CFMachPort { }* serverPort;
@property(assign,readonly) unsigned int serviceMachPort;
@property(assign,copy) NSString * serviceName;
@property(assign,readwrite) bool shouldRegisterCallbackSourceOnMainRunloop;
@property(assign,readwrite) float timeout;
@property(assign,readwrite) bool usesPerPidLookup;

+ (id)allClients;
+ (void)initialize;

- (void)_attemptToEstablishConnection;
- (void)_commonInit;
- (bool)_handleErrorWithMessage:(id)arg1 outError:(id*)arg2;
- (void)_registerWithServer;
- (void)_serverDied;
- (bool)_verifyConnectionWithError:(id*)arg1;
- (unsigned int)clientCallbackPort;
- (struct __CFRunLoopSource { }*)clientCallbackSource;
- (id)clientIdentifier;
- (bool)connectWithError:(id*)arg1;
- (id)connectionQueue;
- (void)dealloc;
- (id)description;
- (bool)disconnectWithError:(id*)arg1;
- (void)establishConnectionWithTimeout:(double)arg1 completion:(id)arg2;
- (id)initWithPort:(unsigned int)arg1;
- (id)initWithServiceName:(id)arg1;
- (bool)isConnected;
- (int)pid;
- (id)portDeathAccessQueue;
- (id)portDeathHandler;
- (id)postConnectionTasks;
- (id)sendMessage:(id)arg1 withError:(id*)arg2;
- (void)sendSimpleMessage:(id)arg1;
- (bool)sendSimpleMessage:(id)arg1 synchronizationPort:(unsigned int)arg2 error:(id*)arg3;
- (bool)sendSimpleMessage:(id)arg1 withError:(id*)arg2;
- (struct __CFMachPort { }*)serverPort;
- (unsigned int)serviceMachPort;
- (id)serviceName;
- (void)setClientIdentifier:(id)arg1;
- (void)setConnected:(bool)arg1;
- (void)setConnectionQueue:(id)arg1;
- (void)setPid:(int)arg1;
- (void)setPortDeathAccessQueue:(id)arg1;
- (void)setPortDeathHandler:(id)arg1;
- (void)setPostConnectionTasks:(id)arg1;
- (void)setServerPort:(struct __CFMachPort { }*)arg1;
- (void)setServiceName:(id)arg1;
- (void)setShouldRegisterCallbackSourceOnMainRunloop:(bool)arg1;
- (void)setTimeout:(float)arg1;
- (void)setUsesPerPidLookup:(bool)arg1;
- (bool)shouldRegisterCallbackSourceOnMainRunloop;
- (float)timeout;
- (bool)usesPerPidLookup;
- (bool)verifyConnectionExists;

@end
