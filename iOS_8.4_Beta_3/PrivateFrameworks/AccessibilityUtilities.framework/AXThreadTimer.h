/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@interface AXThreadTimer : NSObject <AXTimer> {
    bool _automaticallyCancelPendingBlockUponSchedulingNewBlock;
    id _cancelBlock;
    AXThreadTimerTask *_task;
    NSThread *_thread;
}

@property(getter=isActive,assign,readonly) bool active;
@property(assign,readwrite) bool automaticallyCancelPendingBlockUponSchedulingNewBlock;
@property(getter=isCancelled,assign,readonly) bool cancelled;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readonly) unsigned long long hash;
@property(getter=isPending,assign,readonly) bool pending;
@property(assign,readonly) Class superclass;
@property(assign,retain) AXThreadTimerTask * task;

- (void)_runAfterDelay:(id)arg1;
- (void)afterDelay:(double)arg1 processBlock:(id)arg2;
- (void)afterDelay:(double)arg1 processBlock:(id)arg2 cancelBlock:(id)arg3;
- (bool)automaticallyCancelPendingBlockUponSchedulingNewBlock;
- (void)cancel;
- (void)dealloc;
- (id)initWithThread:(id)arg1;
- (bool)isActive;
- (bool)isCancelled;
- (bool)isPending;
- (void)setAutomaticallyCancelPendingBlockUponSchedulingNewBlock:(bool)arg1;
- (void)setTask:(id)arg1;
- (id)task;

@end
