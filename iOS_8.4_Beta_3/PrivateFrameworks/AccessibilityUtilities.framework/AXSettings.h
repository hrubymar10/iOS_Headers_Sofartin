/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@interface AXSettings : NSObject {
    NSObject<OS_dispatch_queue> *_axFeatureQueue;
    NSMutableSet *_registeredNotifications;
    NSMutableDictionary *_synchronizeDomains;
    NSLock *_synchronizeDomainsLock;
    NSMutableDictionary *_updateBlocks;
}

@property (nonatomic, retain) NSURL *alexLocalAssetURL;
@property (nonatomic) bool allowHearingAidControlOnLockScreen;
@property (nonatomic) bool assistiveTouchActionRepeatEnabled;
@property (nonatomic) double assistiveTouchActionRepeatInterval;
@property (nonatomic) bool assistiveTouchAlwaysShowMenuEnabled;
@property (nonatomic) bool assistiveTouchAutoScanningEnabled;
@property (nonatomic) double assistiveTouchAxisSweepSpeed;
@property (nonatomic) bool assistiveTouchCameraSwitchPreviewEnabled;
@property (nonatomic, retain) NSArray *assistiveTouchCommonTasks;
@property (nonatomic) long long assistiveTouchCursorColor;
@property (nonatomic, retain) NSArray *assistiveTouchCustomGestures;
@property (nonatomic) double assistiveTouchDelayAfterInput;
@property (nonatomic) bool assistiveTouchDelayAfterInputEnabled;
@property (nonatomic) bool assistiveTouchGroupElementsEnabled;
@property (nonatomic) long long assistiveTouchHeadMovementSensitivity;
@property (nonatomic) bool assistiveTouchHeadlessModeEnabled;
@property (nonatomic) double assistiveTouchInputCoalescingDuration;
@property (nonatomic) bool assistiveTouchInputCoalescingEnabled;
@property (nonatomic) double assistiveTouchInputHoldDuration;
@property (nonatomic) bool assistiveTouchInputHoldEnabled;
@property (nonatomic) bool assistiveTouchOpenMenuSwaggleEnabled;
@property (nonatomic) long long assistiveTouchPreferredPointPicker;
@property (nonatomic, retain) NSArray *assistiveTouchRecentGestures;
@property (nonatomic, retain) NSArray *assistiveTouchSavedGestures;
@property (nonatomic) long long assistiveTouchScanCycles;
@property (nonatomic) double assistiveTouchScanTimeout;
@property (nonatomic) bool assistiveTouchScanTimeoutEnabled;
@property (nonatomic) bool assistiveTouchScannerAddedTripleClickAutomatically;
@property (nonatomic) bool assistiveTouchScannerCompactMenuEnabled;
@property (nonatomic) bool assistiveTouchScannerCursorHighVisibilityEnabled;
@property (nonatomic, retain) NSString *assistiveTouchScannerDefaultDialect;
@property (nonatomic, readonly) long long assistiveTouchScannerIncludedMenuItems;
@property (nonatomic) bool assistiveTouchScannerMenuIncludeDeviceItem;
@property (nonatomic) bool assistiveTouchScannerMenuIncludeGesturesItem;
@property (nonatomic) bool assistiveTouchScannerMenuIncludeHomeItem;
@property (nonatomic) bool assistiveTouchScannerMenuIncludeScrollItem;
@property (nonatomic) bool assistiveTouchScannerMenuIncludeSettingsItem;
@property (nonatomic) bool assistiveTouchScannerMenuLabelsEnabled;
@property (nonatomic) bool assistiveTouchScannerPointPickerDefaultsToRescan;
@property (nonatomic) bool assistiveTouchScannerSoundEnabled;
@property (nonatomic) bool assistiveTouchScannerSpeechEnabled;
@property (nonatomic) bool assistiveTouchScannerSpeechIsInterruptedByScanning;
@property (nonatomic) double assistiveTouchScannerSpeechRate;
@property (nonatomic) long long assistiveTouchScanningMode;
@property (nonatomic) double assistiveTouchSelectTimeout;
@property (nonatomic) bool assistiveTouchSelectTimeoutEnabled;
@property (nonatomic) double assistiveTouchSpeed;
@property (nonatomic) double assistiveTouchStepInterval;
@property (nonatomic) bool assistiveTouchSwitchUsageConfirmed;
@property (nonatomic, retain) NSSet *assistiveTouchSwitches;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *axFeatureQueue;
@property (nonatomic) bool enableHearingAidReporter;
@property (nonatomic, copy) NSString *gaxInternalSettingsActiveAppID;
@property (nonatomic, copy) NSNumber *gaxInternalSettingsActiveAppOrientation;
@property (nonatomic, copy) NSString *gaxInternalSettingsDeviceID;
@property (nonatomic) bool gaxInternalSettingsIsActiveAppSelfLocked;
@property (nonatomic, retain) NSDate *gaxInternalSettingsLastActivationDate;
@property (nonatomic, retain) NSDate *gaxInternalSettingsLastPasscodeSetDate;
@property (nonatomic, copy) NSString *gaxInternalSettingsProductBuildVersion;
@property (nonatomic, retain) NSDictionary *gaxInternalSettingsSavedAccessibilityFeatures;
@property (nonatomic, retain) NSArray *gaxInternalSettingsSavedAccessibilityTripleClickOptions;
@property (nonatomic) bool gaxInternalSettingsSystemDidRestartDueToLowBattery;
@property (nonatomic) bool gaxInternalSettingsTimeRestrictionHasExpired;
@property (nonatomic, retain) NSDictionary *gaxInternalSettingsUserAppProfile;
@property (nonatomic, retain) NSArray *gaxInternalSettingsUserConfiguredAppIDs;
@property (nonatomic, retain) NSDictionary *gaxInternalSettingsUserGlobalProfile;
@property (nonatomic) bool gizmoApplicationAccessibilityEnabled;
@property (nonatomic) bool guidedAccessAXFeaturesEnabled;
@property (nonatomic) bool guidedAccessAllowsUnlockWithTouchID;
@property (nonatomic, readonly) NSString *guidedAccessDefaultToneIdentifierForTimeRestrictionEvents;
@property (nonatomic) bool guidedAccessDisallowDirectInactiveToActiveTransition;
@property (nonatomic, retain) NSNumber *guidedAccessOverrideTimeRestrictionDuration;
@property (nonatomic) bool guidedAccessShouldSpeakForTimeRestrictionEvents;
@property (nonatomic, copy) NSString *guidedAccessToneIdentifierForTimeRestrictionEvents;
@property (nonatomic) long long guidedAccessUsageCount;
@property (nonatomic) bool ignoreAXAsserts;
@property (nonatomic) bool ignoreAXServerEntitlements;
@property (nonatomic) bool includeBacktraceInLogs;
@property (nonatomic) bool independentHearingAidSettings;
@property (nonatomic) long long internalLoggingColorTheme;
@property (nonatomic) bool logAXNotificationPosting;
@property (nonatomic, retain) NSArray *logToFileSubsystems;
@property (nonatomic, retain) NSDictionary *pairedHearingAids;
@property (nonatomic) bool quickSpeakHighlightText;
@property (nonatomic) struct CGPoint { double x1; double x2; } quickSpeakNubbitNormalizedPosition;
@property (nonatomic) float quickSpeakSpeakingRate;
@property (nonatomic) float quickSpeakVolume;
@property (nonatomic) float reduceWhitePointLevel;
@property (nonatomic, retain) NSMutableSet *registeredNotifications;
@property (nonatomic) bool shouldStreamToLeftAid;
@property (nonatomic) bool shouldStreamToRightAid;
@property (nonatomic) bool skipHearingAidMFiAuth;
@property (nonatomic) bool speakCorrectionsEnabled;
@property (nonatomic, retain) NSMutableDictionary *synchronizeDomains;
@property (nonatomic, retain) NSMutableDictionary *updateBlocks;
@property (nonatomic) bool validateSecondPartyApps;
@property (nonatomic) long long voiceOverActivationWorkaround;
@property (nonatomic) bool voiceOverAlwaysUseNemethCodeForMathEnabled;
@property (nonatomic) bool voiceOverAudioDuckingEnabled;
@property (nonatomic, readonly) bool voiceOverBrailleGesturesEnabled;
@property (nonatomic) bool voiceOverBrailleGradeTwoAutoTranslateEnabled;
@property (nonatomic, copy) NSString *voiceOverBrailleTableIdentifier;
@property (nonatomic) bool voiceOverCompactVoiceEnabled;
@property (nonatomic, copy) NSString *voiceOverDefaultDialect;
@property (nonatomic, readonly) bool voiceOverHandwritingEnabled;
@property (nonatomic, retain) NSNumber *voiceOverHandwritingWasNativeAutocorrectEnabled;
@property (nonatomic, retain) NSNumber *voiceOverHandwritingWasNativeSpellCheckingEnabled;
@property (nonatomic) long long voiceOverHardwareTypingFeedback;
@property (nonatomic) bool voiceOverHearingAidRoutingEnabled;
@property (nonatomic) long long voiceOverHelpMode;
@property (nonatomic) bool voiceOverHintsEnabled;
@property (nonatomic) bool voiceOverLargeCursorEnabled;
@property (nonatomic) long long voiceOverNavigateImagesOption;
@property (nonatomic) long long voiceOverPhoneticsFeedback;
@property (nonatomic) bool voiceOverPitchChangeEnabled;
@property (nonatomic, retain) NSArray *voiceOverPronunciationDictionary;
@property (nonatomic, copy) NSArray *voiceOverRotorItems;
@property (nonatomic) bool voiceOverShouldOutputToHearingAid;
@property (nonatomic) bool voiceOverShowSoftwareKeyboardWithBraille;
@property (nonatomic) long long voiceOverSoftwareTypingFeedback;
@property (nonatomic) bool voiceOverSoundEffectsEnabled;
@property (nonatomic) bool voiceOverSpeakNotificationsEnabled;
@property (nonatomic) bool voiceOverSpeakingRateInRotorEnabled;
@property (nonatomic) long long voiceOverTouchBrailleDisplayInputMode;
@property (nonatomic) long long voiceOverTouchBrailleDisplayOutputMode;
@property (nonatomic) long long voiceOverTouchBrailleGesturesInputMode;
@property (nonatomic) bool voiceOverTouchBraillePanningAutoTurnsReadingContent;
@property (nonatomic) bool voiceOverTouchSingleLetterQuickNavEnabled;
@property (nonatomic) bool writeAXLogsToFile;
@property (nonatomic) bool zoomAlwaysUseWindowedZoomForTyping;
@property (nonatomic, retain) NSString *zoomCurrentLensEffect;
@property (nonatomic, retain) NSString *zoomCurrentLensMode;
@property (nonatomic) bool zoomDebugDisableZoomLensScaleTransform;
@property (nonatomic) bool zoomDebugShowExternalFocusRect;
@property (nonatomic) double zoomIdleSlugOpacity;
@property (nonatomic) bool zoomInStandby;
@property (nonatomic) struct CGPoint { double x1; double x2; } zoomPanOffset;
@property (nonatomic) bool zoomPreferencesWereInitialized;
@property (nonatomic, retain) NSString *zoomPreferredCurrentLensMode;
@property (nonatomic, retain) NSOrderedSet *zoomPreferredLensModes;
@property (nonatomic) double zoomPreferredMaximumZoomScale;
@property (nonatomic) double zoomScale;
@property (nonatomic) bool zoomShouldAllowFullscreenAutopanning;
@property (nonatomic) bool zoomShouldFollowFocus;
@property (nonatomic) bool zoomShouldShowSlug;
@property (nonatomic) struct CGPoint { double x1; double x2; } zoomSlugNormalizedPosition;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } zoomWindowFrame;

+ (void)initialize;
+ (id)sharedInstance;

- (int)_domainForPreferenceKey:(id)arg1;
- (struct __CFString { }*)_domainNameForDomain:(int)arg1;
- (void)_handlePreferenceChanged:(id)arg1;
- (id)_migratePreferenceIfNecessary:(id)arg1;
- (id)_notificationForPreferenceKey:(id)arg1;
- (id)_preferenceKeyForSelector:(SEL)arg1;
- (void)_registerForNotification:(id)arg1;
- (void)_setValue:(id)arg1 forPreferenceKey:(id)arg2;
- (bool)_switchFromRootUserIfNecessary:(id)arg1;
- (void)_synchronizeIfNecessary:(id)arg1 domain:(int)arg2;
- (id)_valueForPreferenceKey:(id)arg1;
- (bool)_voiceOverRotorItemEnabled:(id)arg1;
- (id)alexLocalAssetURL;
- (bool)allowHearingAidControlOnLockScreen;
- (bool)assistiveTouchActionRepeatEnabled;
- (double)assistiveTouchActionRepeatInterval;
- (bool)assistiveTouchAlwaysShowMenuEnabled;
- (bool)assistiveTouchAutoScanningEnabled;
- (double)assistiveTouchAxisSweepSpeed;
- (bool)assistiveTouchCameraSwitchPreviewEnabled;
- (id)assistiveTouchCommonTasks;
- (long long)assistiveTouchCursorColor;
- (id)assistiveTouchCustomGestures;
- (double)assistiveTouchDelayAfterInput;
- (bool)assistiveTouchDelayAfterInputEnabled;
- (bool)assistiveTouchGroupElementsEnabled;
- (long long)assistiveTouchHeadMovementSensitivity;
- (bool)assistiveTouchHeadlessModeEnabled;
- (double)assistiveTouchInputCoalescingDuration;
- (bool)assistiveTouchInputCoalescingEnabled;
- (double)assistiveTouchInputHoldDuration;
- (bool)assistiveTouchInputHoldEnabled;
- (bool)assistiveTouchOpenMenuSwaggleEnabled;
- (long long)assistiveTouchPreferredPointPicker;
- (id)assistiveTouchRecentGestures;
- (id)assistiveTouchSavedGestures;
- (long long)assistiveTouchScanCycles;
- (double)assistiveTouchScanTimeout;
- (bool)assistiveTouchScanTimeoutEnabled;
- (bool)assistiveTouchScannerAddedTripleClickAutomatically;
- (id)assistiveTouchScannerAlternativeVoiceId:(id)arg1;
- (bool)assistiveTouchScannerCompactMenuEnabled;
- (bool)assistiveTouchScannerCursorHighVisibilityEnabled;
- (id)assistiveTouchScannerDefaultDialect;
- (long long)assistiveTouchScannerIncludedMenuItems;
- (bool)assistiveTouchScannerMenuIncludeDeviceItem;
- (bool)assistiveTouchScannerMenuIncludeGesturesItem;
- (bool)assistiveTouchScannerMenuIncludeHomeItem;
- (bool)assistiveTouchScannerMenuIncludeScrollItem;
- (bool)assistiveTouchScannerMenuIncludeSettingsItem;
- (bool)assistiveTouchScannerMenuLabelsEnabled;
- (bool)assistiveTouchScannerPointPickerDefaultsToRescan;
- (bool)assistiveTouchScannerPrefersCompact:(id)arg1;
- (bool)assistiveTouchScannerSoundEnabled;
- (bool)assistiveTouchScannerSpeechEnabled;
- (bool)assistiveTouchScannerSpeechIsInterruptedByScanning;
- (double)assistiveTouchScannerSpeechRate;
- (long long)assistiveTouchScanningMode;
- (double)assistiveTouchSelectTimeout;
- (bool)assistiveTouchSelectTimeoutEnabled;
- (double)assistiveTouchSpeed;
- (double)assistiveTouchStepInterval;
- (bool)assistiveTouchSwitchUsageConfirmed;
- (id)assistiveTouchSwitches;
- (id)axFeatureQueue;
- (void)clearVoicePrefersCompactSettings;
- (void)dealloc;
- (bool)enableHearingAidReporter;
- (id)gaxInternalSettingsActiveAppID;
- (id)gaxInternalSettingsActiveAppOrientation;
- (id)gaxInternalSettingsDeviceID;
- (bool)gaxInternalSettingsIsActiveAppSelfLocked;
- (id)gaxInternalSettingsLastActivationDate;
- (id)gaxInternalSettingsLastPasscodeSetDate;
- (id)gaxInternalSettingsProductBuildVersion;
- (id)gaxInternalSettingsSavedAccessibilityFeatures;
- (id)gaxInternalSettingsSavedAccessibilityTripleClickOptions;
- (bool)gaxInternalSettingsSystemDidRestartDueToLowBattery;
- (bool)gaxInternalSettingsTimeRestrictionHasExpired;
- (id)gaxInternalSettingsUserAppProfile;
- (id)gaxInternalSettingsUserConfiguredAppIDs;
- (id)gaxInternalSettingsUserGlobalProfile;
- (bool)gizmoApplicationAccessibilityEnabled;
- (bool)guidedAccessAXFeaturesEnabled;
- (bool)guidedAccessAllowsUnlockWithTouchID;
- (id)guidedAccessDefaultToneIdentifierForTimeRestrictionEvents;
- (bool)guidedAccessDisallowDirectInactiveToActiveTransition;
- (id)guidedAccessOverrideTimeRestrictionDuration;
- (bool)guidedAccessShouldSpeakForTimeRestrictionEvents;
- (id)guidedAccessToneIdentifierForTimeRestrictionEvents;
- (long long)guidedAccessUsageCount;
- (bool)ignoreAXAsserts;
- (bool)ignoreAXServerEntitlements;
- (bool)includeBacktraceInLogs;
- (bool)independentHearingAidSettings;
- (id)init;
- (long long)internalLoggingColorTheme;
- (bool)logAXNotificationPosting;
- (id)logToFileSubsystems;
- (id)pairedHearingAids;
- (bool)preferenceHasDefaultValue:(SEL)arg1;
- (id)quickSpeakAlternativeVoiceForLanguage:(id)arg1;
- (bool)quickSpeakCompactPreference:(id)arg1;
- (bool)quickSpeakHighlightText;
- (struct CGPoint { double x1; double x2; })quickSpeakNubbitNormalizedPosition;
- (float)quickSpeakSpeakingRate;
- (float)quickSpeakSpeakingRateForLanguage:(id)arg1;
- (float)quickSpeakVolume;
- (float)reduceWhitePointLevel;
- (void)registerUpdateBlock:(id)arg1 forRetrieveSelector:(SEL)arg2 withListener:(id)arg3;
- (id)registeredNotifications;
- (void)setAlexLocalAssetURL:(id)arg1;
- (void)setAllowHearingAidControlOnLockScreen:(bool)arg1;
- (void)setAssistiveTouchActionRepeatEnabled:(bool)arg1;
- (void)setAssistiveTouchActionRepeatInterval:(double)arg1;
- (void)setAssistiveTouchAlwaysShowMenuEnabled:(bool)arg1;
- (void)setAssistiveTouchAutoScanningEnabled:(bool)arg1;
- (void)setAssistiveTouchAxisSweepSpeed:(double)arg1;
- (void)setAssistiveTouchCameraSwitchPreviewEnabled:(bool)arg1;
- (void)setAssistiveTouchCommonTasks:(id)arg1;
- (void)setAssistiveTouchCursorColor:(long long)arg1;
- (void)setAssistiveTouchCustomGestures:(id)arg1;
- (void)setAssistiveTouchDelayAfterInput:(double)arg1;
- (void)setAssistiveTouchDelayAfterInputEnabled:(bool)arg1;
- (void)setAssistiveTouchGroupElementsEnabled:(bool)arg1;
- (void)setAssistiveTouchHeadMovementSensitivity:(long long)arg1;
- (void)setAssistiveTouchHeadlessModeEnabled:(bool)arg1;
- (void)setAssistiveTouchInputCoalescingDuration:(double)arg1;
- (void)setAssistiveTouchInputCoalescingEnabled:(bool)arg1;
- (void)setAssistiveTouchInputHoldDuration:(double)arg1;
- (void)setAssistiveTouchInputHoldEnabled:(bool)arg1;
- (void)setAssistiveTouchOpenMenuSwaggleEnabled:(bool)arg1;
- (void)setAssistiveTouchPreferredPointPicker:(long long)arg1;
- (void)setAssistiveTouchRecentGestures:(id)arg1;
- (void)setAssistiveTouchSavedGestures:(id)arg1;
- (void)setAssistiveTouchScanCycles:(long long)arg1;
- (void)setAssistiveTouchScanTimeout:(double)arg1;
- (void)setAssistiveTouchScanTimeoutEnabled:(bool)arg1;
- (void)setAssistiveTouchScannerAddedTripleClickAutomatically:(bool)arg1;
- (void)setAssistiveTouchScannerAlternativeVoiceId:(id)arg1 forLanguage:(id)arg2;
- (void)setAssistiveTouchScannerCompactMenuEnabled:(bool)arg1;
- (void)setAssistiveTouchScannerCursorHighVisibilityEnabled:(bool)arg1;
- (void)setAssistiveTouchScannerDefaultDialect:(id)arg1;
- (void)setAssistiveTouchScannerMenuIncludeDeviceItem:(bool)arg1;
- (void)setAssistiveTouchScannerMenuIncludeGesturesItem:(bool)arg1;
- (void)setAssistiveTouchScannerMenuIncludeHomeItem:(bool)arg1;
- (void)setAssistiveTouchScannerMenuIncludeScrollItem:(bool)arg1;
- (void)setAssistiveTouchScannerMenuIncludeSettingsItem:(bool)arg1;
- (void)setAssistiveTouchScannerMenuLabelsEnabled:(bool)arg1;
- (void)setAssistiveTouchScannerPointPickerDefaultsToRescan:(bool)arg1;
- (void)setAssistiveTouchScannerPrefersCompact:(bool)arg1 forLanguage:(id)arg2;
- (void)setAssistiveTouchScannerSoundEnabled:(bool)arg1;
- (void)setAssistiveTouchScannerSpeechEnabled:(bool)arg1;
- (void)setAssistiveTouchScannerSpeechIsInterruptedByScanning:(bool)arg1;
- (void)setAssistiveTouchScannerSpeechRate:(double)arg1;
- (void)setAssistiveTouchScanningMode:(long long)arg1;
- (void)setAssistiveTouchSelectTimeout:(double)arg1;
- (void)setAssistiveTouchSelectTimeoutEnabled:(bool)arg1;
- (void)setAssistiveTouchSpeed:(double)arg1;
- (void)setAssistiveTouchStepInterval:(double)arg1;
- (void)setAssistiveTouchSwitchUsageConfirmed:(bool)arg1;
- (void)setAssistiveTouchSwitches:(id)arg1;
- (void)setAxFeatureQueue:(id)arg1;
- (void)setEnableHearingAidReporter:(bool)arg1;
- (void)setGaxInternalSettingsActiveAppID:(id)arg1;
- (void)setGaxInternalSettingsActiveAppOrientation:(id)arg1;
- (void)setGaxInternalSettingsDeviceID:(id)arg1;
- (void)setGaxInternalSettingsIsActiveAppSelfLocked:(bool)arg1;
- (void)setGaxInternalSettingsLastActivationDate:(id)arg1;
- (void)setGaxInternalSettingsLastPasscodeSetDate:(id)arg1;
- (void)setGaxInternalSettingsProductBuildVersion:(id)arg1;
- (void)setGaxInternalSettingsSavedAccessibilityFeatures:(id)arg1;
- (void)setGaxInternalSettingsSavedAccessibilityTripleClickOptions:(id)arg1;
- (void)setGaxInternalSettingsSystemDidRestartDueToLowBattery:(bool)arg1;
- (void)setGaxInternalSettingsTimeRestrictionHasExpired:(bool)arg1;
- (void)setGaxInternalSettingsUserAppProfile:(id)arg1;
- (void)setGaxInternalSettingsUserConfiguredAppIDs:(id)arg1;
- (void)setGaxInternalSettingsUserGlobalProfile:(id)arg1;
- (void)setGizmoApplicationAccessibilityEnabled:(bool)arg1;
- (void)setGuidedAccessAXFeaturesEnabled:(bool)arg1;
- (void)setGuidedAccessAllowsUnlockWithTouchID:(bool)arg1;
- (void)setGuidedAccessDisallowDirectInactiveToActiveTransition:(bool)arg1;
- (void)setGuidedAccessOverrideTimeRestrictionDuration:(id)arg1;
- (void)setGuidedAccessShouldSpeakForTimeRestrictionEvents:(bool)arg1;
- (void)setGuidedAccessToneIdentifierForTimeRestrictionEvents:(id)arg1;
- (void)setGuidedAccessUsageCount:(long long)arg1;
- (void)setIgnoreAXAsserts:(bool)arg1;
- (void)setIgnoreAXServerEntitlements:(bool)arg1;
- (void)setIncludeBacktraceInLogs:(bool)arg1;
- (void)setIndependentHearingAidSettings:(bool)arg1;
- (void)setInternalLoggingColorTheme:(long long)arg1;
- (void)setLogAXNotificationPosting:(bool)arg1;
- (void)setLogToFileSubsystems:(id)arg1;
- (void)setPairedHearingAids:(id)arg1;
- (void)setQuickSpeakAlternativeVoice:(id)arg1 forLanguage:(id)arg2;
- (void)setQuickSpeakCompactPreference:(id)arg1 prefersCompact:(bool)arg2;
- (void)setQuickSpeakHighlightText:(bool)arg1;
- (void)setQuickSpeakNubbitNormalizedPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setQuickSpeakSpeakingRate:(float)arg1;
- (void)setQuickSpeakSpeakingRate:(float)arg1 forLanguage:(id)arg2;
- (void)setQuickSpeakVolume:(float)arg1;
- (void)setReduceWhitePointLevel:(float)arg1;
- (void)setRegisteredNotifications:(id)arg1;
- (void)setShouldStreamToLeftAid:(bool)arg1;
- (void)setShouldStreamToRightAid:(bool)arg1;
- (void)setSkipHearingAidMFiAuth:(bool)arg1;
- (void)setSpeakCorrectionsEnabled:(bool)arg1;
- (void)setSynchronizeDomains:(id)arg1;
- (void)setUpdateBlocks:(id)arg1;
- (void)setValidateSecondPartyApps:(bool)arg1;
- (void)setVoiceOverActivationWorkaround:(long long)arg1;
- (void)setVoiceOverAlternativeVoiceIdentifier:(id)arg1 forLanguage:(id)arg2;
- (void)setVoiceOverAlwaysUseNemethCodeForMathEnabled:(bool)arg1;
- (void)setVoiceOverAudioDuckingEnabled:(bool)arg1;
- (void)setVoiceOverBrailleGradeTwoAutoTranslateEnabled:(bool)arg1;
- (void)setVoiceOverBrailleTableIdentifier:(id)arg1;
- (void)setVoiceOverCompactVoiceEnabled:(bool)arg1;
- (void)setVoiceOverDefaultDialect:(id)arg1;
- (void)setVoiceOverHandwritingWasNativeAutocorrectEnabled:(id)arg1;
- (void)setVoiceOverHandwritingWasNativeSpellCheckingEnabled:(id)arg1;
- (void)setVoiceOverHardwareTypingFeedback:(long long)arg1;
- (void)setVoiceOverHearingAidRoutingEnabled:(bool)arg1;
- (void)setVoiceOverHelpMode:(long long)arg1;
- (void)setVoiceOverHintsEnabled:(bool)arg1;
- (void)setVoiceOverLargeCursorEnabled:(bool)arg1;
- (void)setVoiceOverNavigateImagesOption:(long long)arg1;
- (void)setVoiceOverPhoneticsFeedback:(long long)arg1;
- (void)setVoiceOverPitchChangeEnabled:(bool)arg1;
- (void)setVoiceOverPrefersCompact:(bool)arg1 forLanguage:(id)arg2;
- (void)setVoiceOverPronunciationDictionary:(id)arg1;
- (void)setVoiceOverRotorItems:(id)arg1;
- (void)setVoiceOverShouldOutputToHearingAid:(bool)arg1;
- (void)setVoiceOverShowSoftwareKeyboardWithBraille:(bool)arg1;
- (void)setVoiceOverSoftwareTypingFeedback:(long long)arg1;
- (void)setVoiceOverSoundEffectsEnabled:(bool)arg1;
- (void)setVoiceOverSpeakNotificationsEnabled:(bool)arg1;
- (void)setVoiceOverSpeakingRate:(float)arg1 forLanguage:(id)arg2;
- (void)setVoiceOverSpeakingRateInRotorEnabled:(bool)arg1;
- (void)setVoiceOverTouchBrailleDisplayInputMode:(long long)arg1;
- (void)setVoiceOverTouchBrailleDisplayOutputMode:(long long)arg1;
- (void)setVoiceOverTouchBrailleGesturesInputMode:(long long)arg1;
- (void)setVoiceOverTouchBraillePanningAutoTurnsReadingContent:(bool)arg1;
- (void)setVoiceOverTouchSingleLetterQuickNavEnabled:(bool)arg1;
- (void)setWriteAXLogsToFile:(bool)arg1;
- (void)setZoomAlwaysUseWindowedZoomForTyping:(bool)arg1;
- (void)setZoomCurrentLensEffect:(id)arg1;
- (void)setZoomCurrentLensMode:(id)arg1;
- (void)setZoomDebugDisableZoomLensScaleTransform:(bool)arg1;
- (void)setZoomDebugShowExternalFocusRect:(bool)arg1;
- (void)setZoomIdleSlugOpacity:(double)arg1;
- (void)setZoomInStandby:(bool)arg1;
- (void)setZoomPanOffset:(struct CGPoint { double x1; double x2; })arg1;
- (void)setZoomPreferencesWereInitialized:(bool)arg1;
- (void)setZoomPreferredCurrentLensMode:(id)arg1;
- (void)setZoomPreferredLensModes:(id)arg1;
- (void)setZoomPreferredMaximumZoomScale:(double)arg1;
- (void)setZoomScale:(double)arg1;
- (void)setZoomShouldAllowFullscreenAutopanning:(bool)arg1;
- (void)setZoomShouldFollowFocus:(bool)arg1;
- (void)setZoomShouldShowSlug:(bool)arg1;
- (void)setZoomSlugNormalizedPosition:(struct CGPoint { double x1; double x2; })arg1;
- (void)setZoomWindowFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (bool)shouldStreamToLeftAid;
- (bool)shouldStreamToRightAid;
- (bool)skipHearingAidMFiAuth;
- (bool)speakCorrectionsEnabled;
- (id)synchronizeDomains;
- (id)updateBlocks;
- (bool)validateSecondPartyApps;
- (long long)voiceOverActivationWorkaround;
- (id)voiceOverAlternativeVoiceIdentifier:(id)arg1;
- (bool)voiceOverAlwaysUseNemethCodeForMathEnabled;
- (bool)voiceOverAudioDuckingEnabled;
- (bool)voiceOverBrailleGesturesEnabled;
- (bool)voiceOverBrailleGradeTwoAutoTranslateEnabled;
- (id)voiceOverBrailleTableIdentifier;
- (bool)voiceOverCompactVoiceEnabled;
- (id)voiceOverDefaultDialect;
- (bool)voiceOverHandwritingEnabled;
- (id)voiceOverHandwritingWasNativeAutocorrectEnabled;
- (id)voiceOverHandwritingWasNativeSpellCheckingEnabled;
- (long long)voiceOverHardwareTypingFeedback;
- (bool)voiceOverHearingAidRoutingEnabled;
- (long long)voiceOverHelpMode;
- (bool)voiceOverHintsEnabled;
- (bool)voiceOverLargeCursorEnabled;
- (long long)voiceOverNavigateImagesOption;
- (long long)voiceOverPhoneticsFeedback;
- (bool)voiceOverPitchChangeEnabled;
- (bool)voiceOverPrefersCompact:(id)arg1;
- (id)voiceOverPronunciationDictionary;
- (id)voiceOverRotorItems;
- (bool)voiceOverShouldOutputToHearingAid;
- (bool)voiceOverShowSoftwareKeyboardWithBraille;
- (long long)voiceOverSoftwareTypingFeedback;
- (bool)voiceOverSoundEffectsEnabled;
- (bool)voiceOverSpeakNotificationsEnabled;
- (float)voiceOverSpeakingRateForLanguage:(id)arg1;
- (bool)voiceOverSpeakingRateInRotorEnabled;
- (long long)voiceOverTouchBrailleDisplayInputMode;
- (long long)voiceOverTouchBrailleDisplayOutputMode;
- (long long)voiceOverTouchBrailleGesturesInputMode;
- (bool)voiceOverTouchBraillePanningAutoTurnsReadingContent;
- (bool)voiceOverTouchSingleLetterQuickNavEnabled;
- (bool)writeAXLogsToFile;
- (bool)zoomAlwaysUseWindowedZoomForTyping;
- (id)zoomCurrentLensEffect;
- (id)zoomCurrentLensMode;
- (bool)zoomDebugDisableZoomLensScaleTransform;
- (bool)zoomDebugShowExternalFocusRect;
- (double)zoomIdleSlugOpacity;
- (bool)zoomInStandby;
- (struct CGPoint { double x1; double x2; })zoomPanOffset;
- (bool)zoomPreferencesWereInitialized;
- (id)zoomPreferredCurrentLensMode;
- (id)zoomPreferredLensModes;
- (double)zoomPreferredMaximumZoomScale;
- (double)zoomScale;
- (bool)zoomShouldAllowFullscreenAutopanning;
- (bool)zoomShouldFollowFocus;
- (bool)zoomShouldShowSlug;
- (struct CGPoint { double x1; double x2; })zoomSlugNormalizedPosition;
- (void)zoomUserHadLegacyZoomEnabled:(bool*)arg1 wasZoomedIn:(bool*)arg2 withScale:(double*)arg3;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })zoomWindowFrame;

@end
