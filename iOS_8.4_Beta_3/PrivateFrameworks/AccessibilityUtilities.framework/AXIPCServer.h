/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/AccessibilityUtilities.framework/AccessibilityUtilities
 */

@interface AXIPCServer : NSObject {
    unsigned int _assignedServerPort;
    id _clientInvalidationHandler;
    unsigned int _clientInvalidationPort;
    struct __CFRunLoopSource { } *_clientInvalidationSource;
    NSMutableSet *_connectedClients;
    id _defaultHandler;
    NSMutableDictionary *_entitlements;
    NSMutableDictionary *_handlers;
    bool _perPidService;
    bool _running;
    unsigned int _serverPort;
    struct __CFRunLoopSource { } *_serverRunLoopSource;
    NSString *_serviceName;
    NSMutableDictionary *_validSecurityTokens;
}

@property(assign,copy) id clientInvalidationCallback;
@property(assign,copy) id defaultHandler;
@property(assign,retain) NSMutableDictionary * handlers;
@property(assign,readonly) unsigned int machPort;
@property(assign,readwrite) bool perPidService;
@property(getter=isRunning,assign,readwrite) bool running;
@property(assign,retain) NSString * serviceName;

- (id)_clientIdentificationForAuditToken:(struct { unsigned int x1[8]; })arg1;
- (bool)_clientWithPort:(unsigned int)arg1 auditToken:(struct { unsigned int x1[8]; })arg2 hasAnyEntitlementRequiredForMessage:(id)arg3;
- (void)_handleClientInvalidation:(unsigned int)arg1;
- (void)_handleClientRegistration:(id)arg1;
- (bool)_handleErrorWithMessage:(id)arg1 outError:(id*)arg2;
- (id)_handleIncomingMessage:(id)arg1 securityToken:(struct { unsigned int x1[2]; })arg2 auditToken:(struct { unsigned int x1[8]; })arg3 clientPort:(unsigned int)arg4;
- (void)_startServerThread;
- (void)addPossibleRequiredEntitlement:(id)arg1 forMessageWithKey:(int)arg2;
- (id)clientInvalidationCallback;
- (void)dealloc;
- (id)defaultHandler;
- (id)description;
- (id)handlers;
- (id)initWithPort:(unsigned int)arg1 serviceRunLoopSource:(struct __CFRunLoopSource { }*)arg2;
- (id)initWithServiceName:(id)arg1 perPidService:(bool)arg2;
- (bool)isRunning;
- (unsigned int)machPort;
- (bool)perPidService;
- (void)removeAllHandlersForTarget:(id)arg1;
- (void)removeHandlerForKey:(int)arg1;
- (void)removePossibleRequiredEntitlement:(id)arg1 forMessageWithKey:(int)arg2;
- (id)serviceName;
- (void)setClientInvalidationCallback:(id)arg1;
- (void)setDefaultHandler:(id)arg1;
- (void)setHandler:(id)arg1 forKey:(int)arg2;
- (void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 forKey:(int)arg3;
- (void)setHandlerWithTarget:(id)arg1 selector:(SEL)arg2 forKey:(int)arg3 possibleRequiredEntitlements:(id)arg4;
- (void)setHandlers:(id)arg1;
- (void)setPerPidService:(bool)arg1;
- (void)setRunning:(bool)arg1;
- (void)setServiceName:(id)arg1;
- (void)setServiceRunLoopSource:(struct __CFRunLoopSource { }*)arg1;
- (bool)startServerWithError:(id*)arg1;
- (bool)stopServerWithError:(id*)arg1;

@end
