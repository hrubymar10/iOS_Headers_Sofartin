/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ScreenReaderCore.framework/ScreenReaderCore
 */

@interface SCRCMathExpression : NSObject {
    unsigned long long _cachedMaximumDepth;
    SCRCMathExpression *_parent;
}

@property(assign,readonly) bool beginsWithSpace;
@property(assign,readonly) bool canBeUsedWithBase;
@property(assign,readonly) bool canBeUsedWithRange;
@property(assign,readonly) bool canBeWrappedInLatexMathIndicators;
@property(assign,readonly) NSArray * children;
@property(assign,readonly) bool endsWithSpace;
@property(assign,readonly) unsigned long long fractionLevel;
@property(assign,readonly) bool hasSimpleArrayOfChildren;
@property(assign,readonly) long long integerValue;
@property(assign,readonly) bool isBaseSubSuperscript;
@property(assign,readonly) bool isEllipsis;
@property(assign,readonly) bool isFenceDelimiter;
@property(assign,readonly) bool isFunctionName;
@property(assign,readonly) bool isInteger;
@property(assign,readonly) bool isMultiRowTable;
@property(assign,readonly) bool isNaturalSuperscript;
@property(assign,readonly) bool isNumber;
@property(assign,readonly) bool isOperationSymbol;
@property(assign,readonly) bool isRangeSubSuperscript;
@property(assign,readonly) bool isSimpleNumericalFraction;
@property(assign,readonly) bool isTermSeparator;
@property(assign,readonly) bool isUnlinedFraction;
@property(assign,readonly) bool isWordOrAbbreviation;
@property(assign,readonly) NSString * latexFormatStringAsOver;
@property(assign,readonly) NSString * latexFormatStringAsUnder;
@property(assign,readwrite) SCRCMathExpression * parent;
@property(assign,readonly) NSArray * siblings;
@property(assign,readonly) NSArray * subExpressions;

+ (Class)_classForExpressionType:(id)arg1;
+ (id)mathExpressionWithDictionary:(id)arg1;
+ (void)setPathToSegmentOrderingPlist:(id)arg1;

- (void)_applyTreePositionOfOriginalSegment:(id)arg1 toPrefixedOrSuffixedSegment:(id)arg2;
- (id)_scrcBundle;
- (id)arrayWithoutNilsFromFirstChild:(id)arg1 secondChild:(id)arg2 thirdChild:(id)arg3;
- (bool)beginsWithSpace;
- (bool)canBeUsedWithBase;
- (bool)canBeUsedWithRange;
- (bool)canBeWrappedInLatexMathIndicators;
- (bool)canFormWordStartingWithExpression:(id)arg1;
- (id)children;
- (id)dollarCodeDescription;
- (id)dollarCodeDescriptionAsBinomialCoefficientWithTreePosition:(id)arg1 numberOfOuterRadicals:(unsigned long long)arg2;
- (id)dollarCodeDescriptionAsMixedNumberFractionWithTreePosition:(id)arg1;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2;
- (id)dollarCodeDescriptionWithNumberOfOuterRadicals:(unsigned long long)arg1 treePosition:(id)arg2 openOperator:(id)arg3 openOperatorTreePosition:(id)arg4 closeOperator:(id)arg5 closeOperatorTreePosition:(id)arg6;
- (bool)endsWithSpace;
- (id)fenceDelimiters;
- (unsigned long long)fractionLevel;
- (bool)hasSimpleArrayOfChildren;
- (id)initWithDictionary:(id)arg1;
- (long long)integerValue;
- (bool)isBaseSubSuperscript;
- (bool)isEllipsis;
- (bool)isFenceDelimiter;
- (bool)isFunctionName;
- (bool)isInteger;
- (bool)isMultiRowTable;
- (bool)isNaturalSuperscript;
- (bool)isNumber;
- (bool)isOperationSymbol;
- (bool)isRangeSubSuperscript;
- (bool)isSimpleNumericalFraction;
- (bool)isTermSeparator;
- (bool)isUnlinedFraction;
- (bool)isWordOrAbbreviation;
- (id)latexDescription;
- (id)latexDescriptionForChildrenJoinedByString:(id)arg1;
- (id)latexDescriptionInMathMode:(bool)arg1;
- (id)latexFormatStringAsOver;
- (id)latexFormatStringAsUnder;
- (id)latexIdentifierForFenceOperator:(id)arg1 isClosingOperator:(bool)arg2;
- (id)latexIdentifierForIdentifier:(id)arg1;
- (id)latexMathModeDescription;
- (id)localizedAttributedStringForKey:(id)arg1;
- (id)localizedAttributedStringForKey:(id)arg1 treePosition:(id)arg2;
- (id)localizedSegmentOrderingForKey:(id)arg1;
- (id)localizedStringForKey:(id)arg1;
- (id)localizedStringForNumber:(id)arg1;
- (id)mathMLString;
- (unsigned long long)maximumDepth;
- (unsigned long long)maximumFractionLevelOfSubExpressions;
- (unsigned long long)numberOfTables;
- (id)parent;
- (void)setParent:(id)arg1;
- (id)siblings;
- (id)speakableDescription;
- (id)speakableDescriptionAsBinomialCoefficientWithSpeakingStyle:(int)arg1;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(bool)arg2;
- (id)speakableDescriptionWithSpeakingStyle:(int)arg1 arePausesAllowed:(bool)arg2 isPartOfWord:(bool)arg3;
- (id)speakableSegments:(id)arg1 withLocalizablePrefix:(id)arg2 localizableSuffix:(id)arg3;
- (id)speakableSegments:(id)arg1 withPrefix:(id)arg2 suffix:(id)arg3;
- (id)speakableSegmentsAsBinomialCoefficientWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableSegmentsUpToDepth:(unsigned long long)arg1;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3 localizablePrefix:(id)arg4 localizableSuffix:(id)arg5;
- (id)speakableSegmentsWithSpeakingStyle:(int)arg1 upToDepth:(unsigned long long)arg2 treePosition:(id)arg3 prefix:(id)arg4 suffix:(id)arg5;
- (id)speakableSummary;
- (id)subExpressions;

@end
