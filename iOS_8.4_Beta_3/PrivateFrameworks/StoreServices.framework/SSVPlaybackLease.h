/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

@interface SSVPlaybackLease : NSObject {
    NSMutableArray *_assetOperations;
    NSData *_certificateData;
    NSString *_certificateURLBagKey;
    SSVPlaybackLeaseConfiguration *_configuration;
    <SSVPlaybackLeaseDelegate> *_delegate;
    NSObject<OS_dispatch_queue> *_delegateQueue;
    SSVFairPlaySubscriptionController *_fairPlaySubscriptionController;
    int _leaseDidEndNotificationToken;
    NSDate *_leaseExpirationDate;
    unsigned long long _leaseStartOperationIdentifier;
    SSVRefreshSubscriptionRequest *_offlineSlotRequest;
    NSOperationQueue *_operationQueue;
    NSMapTable *_pendingRequestsToLeaseStartOperationIdentifier;
    NSObject<OS_dispatch_source> *_refreshTimer;
    bool _refreshesAutomatically;
    NSObject<OS_dispatch_queue> *_serialQueue;
    SSURLBag *_urlBag;
}

@property(assign,copy) NSData * certificateData;
@property(assign,copy) NSString * certificateURLBagKey;
@property(assign,readwrite) <SSVPlaybackLeaseDelegate> * delegate;
@property(assign,readwrite) bool refreshesAutomatically;

- (void).cxx_destruct;
- (id)_addOperationWithRequest:(id)arg1 configurationURL:(id)arg2 bagKey:(id)arg3 completionBlock:(id)arg4;
- (void)_beginLeaseRequest:(id)arg1;
- (void)_cancelRefreshTimer;
- (void)_completeLeaseRequest:(id)arg1 withResponse:(id)arg2 error:(inout id*)arg3;
- (void)_endLease;
- (void)_fireRefreshTimer;
- (void)_importSubscriptionBagFromResponse:(id)arg1 returningError:(id*)arg2;
- (id)_initSSVPlaybackLease;
- (void)_sendLeaseDidEnd;
- (bool)_shouldEndLeaseForError:(id)arg1;
- (void)_startRefreshTimerIfNecessary;
- (void)_updateForLeaseResponse:(id)arg1 error:(id)arg2;
- (void)beginExternalLeaseRequest:(id)arg1;
- (void)beginLeaseWithRequest:(id)arg1 completionBlock:(id)arg2;
- (void)cancelAllAssetRequests;
- (id)certificateData;
- (id)certificateURLBagKey;
- (void)completeExternalLeaseRequest:(id)arg1 withResponse:(id)arg2 error:(inout id*)arg3;
- (void)dealloc;
- (id)delegate;
- (void)endLease;
- (void)getAssetWithRequest:(id)arg1 completionBlock:(id)arg2;
- (void)getCertificateDataWithCompletionBlock:(id)arg1;
- (id)init;
- (id)initWithLeaseConfiguration:(id)arg1;
- (id)initWithURLBag:(id)arg1;
- (void)preheatLeaseRequestsWithCompletionBlock:(id)arg1;
- (void)refreshLeaseWithRequest:(id)arg1 completionBlock:(id)arg2;
- (bool)refreshesAutomatically;
- (void)setCertificateData:(id)arg1;
- (void)setCertificateURLBagKey:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setRefreshesAutomatically:(bool)arg1;

@end
