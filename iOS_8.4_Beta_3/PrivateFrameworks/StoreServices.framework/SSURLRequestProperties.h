/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreServices.framework/StoreServices
 */

@interface SSURLRequestProperties : NSObject <NSCoding, NSCopying, NSMutableCopying, SSXPCCoding> {
    long long _allowedRetryCount;
    bool _allowsBootstrapCellularData;
    unsigned long long _cachePolicy;
    NSString *_clientAuditBundleIdentifier;
    NSData *_clientAuditTokenData;
    NSString *_clientIdentifier;
    NSObject<OS_dispatch_queue> *_dispatchQueue;
    long long _expectedContentLength;
    NSData *_httpBody;
    NSInputStream *_httpBodyStream;
    NSDictionary *_httpHeaders;
    NSString *_httpMethod;
    bool _isITunesStoreRequest;
    long long _kbsyncType;
    bool _largeDownload;
    long long _machineDataStyle;
    unsigned long long _networkServiceType;
    NSDictionary *_requestParameters;
    bool _requiresCellularDataNetwork;
    BOOL _requiresExtendedValidationCertificates;
    bool _requiresHTTPS;
    bool _shouldDecodeResponse;
    bool _shouldDisableCellular;
    bool _shouldDisableCellularFallback;
    bool _shouldProcessProtocol;
    bool _shouldSendSecureToken;
    bool _shouldSetCookies;
    double _timeoutInterval;
    NSString *_urlBagKey;
    long long _urlBagType;
    id _urlBagURLBlock;
    NSArray *_urls;
    NSArray *_userAgentComponents;
}

@property(assign,copy) NSData * HTTPBody;
@property(assign,retain) NSInputStream * HTTPBodyStream;
@property(assign,copy) NSDictionary * HTTPHeaders;
@property(assign,copy) NSString * HTTPMethod;
@property(getter=isITunesStoreRequest,assign,readonly) bool ITunesStoreRequest;
@property(assign,readonly) long long KBSyncType;
@property(assign,retain) NSURL * URL;
@property(assign,copy) NSString * URLBagKey;
@property(assign,readonly) long long URLBagType;
@property(assign,copy) id URLBagURLBlock;
@property(assign,copy) NSArray * URLs;
@property(assign,readonly) long long allowedRetryCount;
@property(assign,readonly) bool allowsBootstrapCellularData;
@property(assign,readonly) unsigned long long cachePolicy;
@property(assign,readonly) bool canBeResolved;
@property(assign,copy) NSString * clientAuditBundleIdentifier;
@property(assign,copy) NSData * clientAuditTokenData;
@property(assign,copy) NSString * clientIdentifier;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readonly) long long expectedContentLength;
@property(assign,readonly) unsigned long long hash;
@property(getter=isLargeDownload,assign,readonly) bool largeDownload;
@property(assign,readonly) long long machineDataStyle;
@property(assign,readonly) unsigned long long networkServiceType;
@property(assign,copy) NSDictionary * requestParameters;
@property(assign,readonly) bool requiresCellularDataNetwork;
@property(assign,readonly) bool requiresExtendedValidationCertificates;
@property(assign,readonly) bool requiresHTTPS;
@property(assign,readonly) bool shouldAddKBSyncData;
@property(assign,readonly) bool shouldDecodeResponse;
@property(assign,readonly) bool shouldDisableCellular;
@property(assign,readonly) bool shouldDisableCellularFallback;
@property(assign,readonly) bool shouldProcessProtocol;
@property(assign,readonly) bool shouldSendSecureToken;
@property(assign,readonly) bool shouldSetCookies;
@property(assign,readonly) Class superclass;
@property(assign,readonly) double timeoutInterval;
@property(assign,copy) NSArray * userAgentComponents;

- (id)HTTPBody;
- (id)HTTPBodyStream;
- (id)HTTPHeaders;
- (id)HTTPMethod;
- (long long)KBSyncType;
- (id)URL;
- (id)URLBagKey;
- (long long)URLBagType;
- (id)URLBagURLBlock;
- (id)URLs;
- (id)_initCommon;
- (long long)allowedRetryCount;
- (bool)allowsBootstrapCellularData;
- (unsigned long long)cachePolicy;
- (bool)canBeResolved;
- (id)clientAuditBundleIdentifier;
- (id)clientAuditTokenData;
- (id)clientIdentifier;
- (id)copyURLRequest;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)copyXPCEncoding;
- (void)dealloc;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (long long)expectedContentLength;
- (id)init;
- (id)initWithCoder:(id)arg1;
- (id)initWithURL:(id)arg1;
- (id)initWithURLRequest:(id)arg1;
- (id)initWithXPCEncoding:(id)arg1;
- (bool)isEqual:(id)arg1;
- (bool)isITunesStoreRequest;
- (bool)isLargeDownload;
- (long long)machineDataStyle;
- (id)mutableCopyWithZone:(struct _NSZone { }*)arg1;
- (unsigned long long)networkServiceType;
- (id)requestParameters;
- (bool)requiresCellularDataNetwork;
- (bool)requiresExtendedValidationCertificates;
- (bool)requiresHTTPS;
- (bool)shouldAddKBSyncData;
- (bool)shouldDecodeResponse;
- (bool)shouldDisableCellular;
- (bool)shouldDisableCellularFallback;
- (bool)shouldProcessProtocol;
- (bool)shouldSendSecureToken;
- (bool)shouldSetCookies;
- (double)timeoutInterval;
- (id)userAgentComponents;

@end
