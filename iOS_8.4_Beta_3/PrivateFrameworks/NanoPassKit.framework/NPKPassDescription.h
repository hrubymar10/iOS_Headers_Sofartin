/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoPassKit.framework/NanoPassKit
 */

@interface NPKPassDescription : NSObject <NSCopying, NSSecureCoding> {
    PKColor *_backgroundColor;
    PKImage *_backgroundImage;
    NSData *_backgroundImageEncoded;
    bool _deletePending;
    PKColor *_foregroundColor;
    NSNumber *_groupID;
    NSDate *_ingestionDate;
    PKColor *_labelColor;
    PKImage *_logoImage;
    NSData *_logoImageEncoded;
    NSString *_logoText;
    NSData *_manifestHash;
    NSString *_passTypeIdentifier;
    PKPaymentApplication *_paymentApplication;
    NSDate *_relevantDate;
    long long _style;
    NSString *_uniqueID;
}

@property(assign,retain) PKColor * backgroundColor;
@property(assign,retain) PKImage * backgroundImage;
@property(assign,retain) NSData * backgroundImageEncoded;
@property(assign,readwrite) bool deletePending;
@property(assign,retain) PKColor * foregroundColor;
@property(assign,retain) NSNumber * groupID;
@property(assign,retain) NSDate * ingestionDate;
@property(assign,retain) PKColor * labelColor;
@property(assign,retain) PKImage * logoImage;
@property(assign,retain) NSData * logoImageEncoded;
@property(assign,retain) NSString * logoText;
@property(assign,retain) NSData * manifestHash;
@property(assign,retain) NSString * passTypeIdentifier;
@property(assign,retain) PKPaymentApplication * paymentApplication;
@property(assign,retain) NSDate * relevantDate;
@property(assign,readwrite) long long style;
@property(assign,retain) NSString * uniqueID;

+ (bool)isCachingEnabled;
+ (void)setCachingEnabled:(bool)arg1;
+ (bool)supportsSecureCoding;

- (void).cxx_destruct;
- (id)backgroundColor;
- (id)backgroundImage;
- (id)backgroundImageEncoded;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (bool)deletePending;
- (id)description;
- (id)encodeAsData:(id)arg1;
- (void)encodeObject:(id)arg1 asDataInCoder:(id)arg2 withKey:(id)arg3;
- (void)encodeWithCoder:(id)arg1;
- (id)foregroundColor;
- (id)groupID;
- (unsigned long long)hash;
- (id)ingestionDate;
- (id)initWithCoder:(id)arg1;
- (id)initWithPass:(id)arg1;
- (bool)isEqual:(id)arg1;
- (id)labelColor;
- (id)logoImage;
- (id)logoImageEncoded;
- (id)logoText;
- (id)manifestHash;
- (id)passTypeIdentifier;
- (id)paymentApplication;
- (id)relevantDate;
- (id)safeUnarchiveObjectOfClass:(Class)arg1 WithData:(id)arg2;
- (void)setBackgroundColor:(id)arg1;
- (void)setBackgroundImage:(id)arg1;
- (void)setBackgroundImageEncoded:(id)arg1;
- (void)setDeletePending:(bool)arg1;
- (void)setForegroundColor:(id)arg1;
- (void)setGroupID:(id)arg1;
- (void)setIngestionDate:(id)arg1;
- (void)setLabelColor:(id)arg1;
- (void)setLogoImage:(id)arg1;
- (void)setLogoImageEncoded:(id)arg1;
- (void)setLogoText:(id)arg1;
- (void)setManifestHash:(id)arg1;
- (void)setPassTypeIdentifier:(id)arg1;
- (void)setPaymentApplication:(id)arg1;
- (void)setRelevantDate:(id)arg1;
- (void)setStyle:(long long)arg1;
- (void)setUniqueID:(id)arg1;
- (long long)style;
- (id)uniqueID;

@end
