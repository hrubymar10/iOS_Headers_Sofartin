/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/MediaPlayerUI.framework/MediaPlayerUI
 */

@interface MPUNowPlayingViewController : UIViewController <MPTransportControlsTarget, MPUNowPlayingPlaybackControlsViewDelegate, MPURatingControlDelegate, UIGestureRecognizerDelegate, UINavigationBarDelegate> {
    MPUApplicationDefaults *_applicationDefaults;
    bool _canMarqueeText;
    UIView *_contentView;
    UIViewController *_contentViewController;
    UINavigationItem *_effectiveNavigationItem;
    MPQueueFeeder *_feeder;
    bool _hasProperApplicationStateForWantingVideoLayer;
    bool _hasVisibilityForWantingVideoLayer;
    bool _isDetailScrubbing;
    bool _isShowingRatings;
    bool _isWide;
    MPAVItem *_item;
    UIViewController *_lastPresentedViewController;
    MPULyricsView *_lyricsView;
    MPNowPlayingObserver *_nowPlayingObserver;
    UINavigationBar *_padFakeNavigationBar;
    MPUNowPlayingPlaybackControlsView *_playbackControlsView;
    MPAVController *_player;
    UINavigationItem *_previousNavigationItem;
    MPURatingControl *_ratingControl;
    NSTimer *_skipInformationRevealTimer;
    UITapGestureRecognizer *_tapGestureRecognizer;
    MPUNowPlayingTitlesView *_titlesView;
    bool _wantsVideoLayer;
}

@property(assign,readonly) UIView * _contentView;
@property(assign,readonly) UIViewController * _contentViewController;
@property(getter=_isDetailScrubbing,assign,readonly) bool _detailScrubbing;
@property(assign,readonly) UINavigationItem * _effectiveNavigationItem;
@property(assign,readonly) MPAVItem * _item;
@property(assign,readonly) MPUNowPlayingPlaybackControlsView * _playbackControlsView;
@property(assign,retain) MPUApplicationDefaults * applicationDefaults;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readonly) unsigned long long hash;
@property(assign,retain) MPNowPlayingObserver * nowPlayingObserver;
@property(assign,retain) MPAVController * player;
@property(assign,readonly) Class superclass;

- (void).cxx_destruct;
- (bool)MPU_supportsMiniPlayer;
- (SEL)_actionForHandlingDoubleTapOnArtworkImageView;
- (id)_albumTextForItem:(id)arg1;
- (void)_applicationDidEnterBackground:(id)arg1;
- (void)_applicationWillEnterForeground:(id)arg1;
- (id)_artistTextForItem:(id)arg1;
- (void)_bufferingStateDidChangeNotification:(id)arg1;
- (void)_cleanupForDeallocationContentView:(id)arg1 contentViewController:(id)arg2;
- (id)_contentView;
- (id)_contentViewController;
- (struct CGSize { double x1; double x2; })_contentViewSizeForItem:(id)arg1 withContentView:(id)arg2 orientation:(long long)arg3;
- (id)_createContentViewForItem:(id)arg1 contentViewController:(id*)arg2;
- (void)_didSkipTrackNotification:(id)arg1;
- (void)_didUpdateArtworkImage;
- (id)_effectiveNavigationItem;
- (void)_invalidateSkipInformationRevealTimer;
- (bool)_isActionForHandlingDoubleTapOnArtworkImageViewEnabled;
- (bool)_isDetailScrubbing;
- (id)_item;
- (void)_itemArtworkDidChangeNotification:(id)arg1;
- (void)_itemDidChangeNotification:(id)arg1;
- (void)_itemIsExplicitDidChangeNotification:(id)arg1;
- (void)_itemRatingDidChangeNotification:(id)arg1;
- (bool)_itemSupportsRatings:(id)arg1;
- (void)_itemTitlesDidChange;
- (void)_itemTitlesDidChangeNotification:(id)arg1;
- (void)_layoutForOrientation:(long long)arg1;
- (void)_mediaLibraryDisplayValuesDidChangeNotification:(id)arg1;
- (void)_playbackContentsDidChangeNotification:(id)arg1;
- (id)_playbackControlsView;
- (Class)_playbackControlsViewClass;
- (void)_playbackStateDidChangeNotification:(id)arg1;
- (void)_popIfNecessary;
- (void)_registerForPlayerNotifications;
- (void)_revealSkipInformationMomentarily;
- (void)_scheduleSkipInformationRevealTimer;
- (void)_setShowingRatings:(bool)arg1 animated:(bool)arg2;
- (void)_setWantsVideoLayer:(bool)arg1 forItem:(id)arg2;
- (bool)_shouldAbortUpdatingContentView:(id)arg1 forItem:(id)arg2;
- (bool)_shouldHaveArtworkPlaceholderTextForItem:(id)arg1;
- (bool)_shouldPopForCurrentPlaybackState;
- (bool)_shouldUpdateContentView:(id)arg1 forBufferingState:(unsigned long long)arg2;
- (void)_showLyrics;
- (void)_skipLimitDidChangeNotification:(id)arg1;
- (void)_statusBarHeightChangedNotification:(id)arg1;
- (void)_tapAction:(id)arg1;
- (id)_titleTextForItem:(id)arg1;
- (double)_titleWidth;
- (long long)_transitionDirectionForChangeFromItem:(id)arg1 toItem:(id)arg2;
- (void)_unregisterForPlayerNotifications;
- (void)_updateContentView:(id)arg1 forItem:(id)arg2;
- (void)_updateControlVisibilityForOrientation:(long long)arg1 animated:(bool)arg2;
- (void)_updateForCurrentItemAnimated:(bool)arg1;
- (bool)_updateItemRelatedStateForChangeToItem:(id)arg1 animated:(bool)arg2;
- (void)_updateMarqueeStatusAllowingCurrentMarqueeToFinish:(bool)arg1;
- (bool)_updateNavigationItemAnimated:(bool)arg1;
- (void)_updateSizeClass;
- (void)_updateTitles;
- (void)_updateTitlesInView:(id)arg1 forItem:(id)arg2;
- (void)_updateWantsVideoLayer;
- (void)_willPresentViewController:(id)arg1;
- (id)applicationDefaults;
- (void)controlsOverlay:(id)arg1 detailSliderTrackingDidChangeScrubSpeed:(long long)arg2;
- (bool)controlsOverlay:(id)arg1 shouldUseDetailScrubberForItem:(id)arg2;
- (void)controlsOverlayDetailSliderTrackingDidBegin:(id)arg1;
- (void)controlsOverlayDetailSliderTrackingDidEnd:(id)arg1;
- (void)crossedTimeMakerWithEvent:(id)arg1;
- (void)dealloc;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)initWithNibName:(id)arg1 bundle:(id)arg2;
- (bool)navigationBar:(id)arg1 shouldPopItem:(id)arg2;
- (id)nowPlayingObserver;
- (void)playbackControls:(id)arg1 didSelectCreateAction:(long long)arg2;
- (id)player;
- (void)ratingDidChangeForRatingControl:(id)arg1;
- (void)setApplicationDefaults:(id)arg1;
- (void)setNowPlayingObserver:(id)arg1;
- (void)setPlayer:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (bool)transportControls:(id)arg1 tappedButtonPart:(unsigned long long)arg2;
- (bool)videoController:(id)arg1 shouldDisplayAlertForError:(id)arg2;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)willAnimateRotationToInterfaceOrientation:(long long)arg1 duration:(double)arg2;

@end
