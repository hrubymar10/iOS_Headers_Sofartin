/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ToneLibrary.framework/ToneLibrary
 */

@interface TLVibrationManager : NSObject {
    TLAccessQueue *_accessQueue;
    bool _allowsAutoRefresh;
    NSDictionary *_cachedSystemVibrationPatterns;
    NSDictionary *_cachedUserGeneratedVibrationPatterns;
    bool _needsRefresh;
    unsigned long long _specialBehaviors;
    NPSDomainAccessor *_transientNanoPreferencesDomainAccessor;
}

@property(setter=_setAccessQueue:,assign,retain) TLAccessQueue * _accessQueue;
@property(setter=_setAllowsAutoRefresh:,assign,readwrite) bool _allowsAutoRefresh;
@property(setter=_setCachedSystemVibrationPatterns:,assign,retain) NSDictionary * _cachedSystemVibrationPatterns;
@property(setter=_setCachedUserGeneratedVibrationPatterns:,assign,retain) NSDictionary * _cachedUserGeneratedVibrationPatterns;
@property(setter=_setSpecialBehaviors:,assign,readwrite) unsigned long long _specialBehaviors;
@property(assign,readonly) NSDictionary * _systemVibrationPatterns;
@property(setter=_setTransientNanoPreferencesDomainAccessor:,assign,retain) NPSDomainAccessor * _transientNanoPreferencesDomainAccessor;
@property(getter=_isUnitTestingModeEnabled,assign,readonly) bool _unitTestingModeEnabled;
@property(assign,readonly) NSDictionary * _userGeneratedVibrationPatterns;
@property(assign,readwrite) bool allowsAutoRefresh;
@property(assign,readwrite) bool needsRefresh;
@property(assign,readonly) bool shouldVibrateForCurrentRingerSwitchState;
@property(assign,readonly) bool shouldVibrateOnRing;
@property(assign,readonly) bool shouldVibrateOnSilent;

+ (void)_handleVibrateOnRingOrSilentDidChangeNotification;
+ (void)_handleVibrationPreferencesDidChangeNotificationForPreferencesKinds:(unsigned long long)arg1 atInitiativeOfVibrationManager:(id)arg2;
+ (id)sharedVibrationManager;

- (id)_accessQueue;
- (bool)_allowsAutoRefresh;
- (bool)_booleanPreferenceForKey:(struct __CFString { }*)arg1 defaultValue:(bool)arg2;
- (id)_cachedSystemVibrationPatterns;
- (id)_cachedUserGeneratedVibrationPatterns;
- (id)_currentVibrationIdentifierForAlertType:(int)arg1 accountIdentifier:(id)arg2;
- (int)_currentVibrationWatchAlertPolicyForAlertType:(int)arg1;
- (int)_currentVibrationWatchAlertPolicyForAlertType:(int)arg1 accountIdentifier:(id)arg2;
- (int)_currentVibrationWatchAlertPolicyForAlertType:(int)arg1 accountIdentifier:(id)arg2 didFindPersistedWatchAlertPolicy:(bool*)arg3;
- (id)_currentVibrationWatchAlertPolicyPreferenceKeyForAlertType:(int)arg1 accountIdentifier:(id)arg2;
- (void)_didChangeUserGeneratedVibrationPatterns;
- (void)_didSetVibrationPreferenceSuccessfullyWithKey:(id)arg1 inDomain:(id)arg2 usingPreferencesOfKind:(unsigned long long)arg3;
- (void)_handleUserGeneratedVibrationsDidChangeNotification;
- (id)_initWithSpecialBehaviors:(unsigned long long)arg1;
- (bool)_isUnitTestingModeEnabled;
- (id)_localizedNameForVibrationWithIdentifier:(id)arg1;
- (void)_makeSystemVibrationDataMigrationVersionCurrentIfNecessary;
- (bool)_migrateLegacySettings;
- (id)_nameOfVibrationWithIdentifier:(id)arg1;
- (id)_newServiceConnection;
- (unsigned long long)_numberOfUserGeneratedVibrations;
- (id)_patternForSystemVibrationWithIdentifier:(id)arg1;
- (void)_performBlockInAccessQueue:(id)arg1;
- (bool)_removeAllUserGeneratedVibrationPatternsUsingServiceWithError:(id*)arg1;
- (bool)_removeAllUserGeneratedVibrationsWithError:(id*)arg1;
- (id)_retrieveUserGeneratedVibrationPatternsUsingService;
- (bool)_saveUserGeneratedVibrationPatterns:(id)arg1 error:(id*)arg2;
- (void)_setAccessQueue:(id)arg1;
- (void)_setAllowsAutoRefresh:(bool)arg1;
- (void)_setCachedSystemVibrationPatterns:(id)arg1;
- (void)_setCachedUserGeneratedVibrationPatterns:(id)arg1;
- (void)_setCurrentVibrationWatchAlertPolicy:(int)arg1 forAlertType:(int)arg2;
- (void)_setCurrentVibrationWatchAlertPolicy:(int)arg1 forAlertType:(int)arg2 accountIdentifier:(id)arg3;
- (void)_setNeedsRefresh:(bool)arg1;
- (void)_setSpecialBehaviors:(unsigned long long)arg1;
- (void)_setTransientNanoPreferencesDomainAccessor:(id)arg1;
- (bool)_setUserGeneratedVibrationPatternsUsingService:(id)arg1 error:(id*)arg2;
- (unsigned long long)_specialBehaviors;
- (unsigned long long)_storedSystemVibrationDataMigrationVersion;
- (id)_systemVibrationPatterns;
- (id)_systemWideVibrationPatternPreferenceKeyForAlertType:(int)arg1;
- (id)_transientNanoPreferencesDomainAccessor;
- (id)_userGeneratedVibrationPatterns;
- (bool)_vibrationIsSettableForAlertType:(int)arg1;
- (id)addUserGeneratedVibrationPattern:(id)arg1 name:(id)arg2 error:(id*)arg3;
- (id)allUserGeneratedVibrationIdentifiers;
- (id)allUserSelectableSystemVibrationIdentifiers;
- (bool)allowsAutoRefresh;
- (id)currentVibrationIdentifierForAlertType:(int)arg1;
- (id)currentVibrationIdentifierForAlertType:(int)arg1 accountIdentifier:(id)arg2;
- (id)currentVibrationNameForAlertType:(int)arg1;
- (id)currentVibrationPatternForAlertType:(int)arg1;
- (void)dealloc;
- (id)defaultVibrationIdentifierForAlertType:(int)arg1;
- (id)defaultVibrationNameForAlertType:(int)arg1;
- (id)defaultVibrationPatternForAlertType:(int)arg1;
- (bool)deleteUserGeneratedVibrationPatternWithIdentifier:(id)arg1 error:(id*)arg2;
- (id)init;
- (id)nameOfVibrationWithIdentifier:(id)arg1;
- (bool)needsRefresh;
- (id)noneVibrationName;
- (id)noneVibrationPattern;
- (id)patternForVibrationWithIdentifier:(id)arg1;
- (id)patternForVibrationWithIdentifier:(id)arg1 repeating:(bool)arg2;
- (bool)refresh;
- (void)setAllowsAutoRefresh:(bool)arg1;
- (void)setCurrentVibrationIdentifier:(id)arg1 forAlertType:(int)arg2;
- (void)setCurrentVibrationIdentifier:(id)arg1 forAlertType:(int)arg2 accountIdentifier:(id)arg3;
- (bool)setName:(id)arg1 forUserGeneratedVibrationWithIdentifier:(id)arg2 error:(id*)arg3;
- (bool)shouldVibrateForCurrentRingerSwitchState;
- (bool)shouldVibrateOnRing;
- (bool)shouldVibrateOnSilent;
- (bool)vibrationWithIdentifierIsValid:(id)arg1;

@end
