/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RadioUI.framework/RadioUI
 */

@interface RURadioAdAVItem : MPAVAdItem {
    RURadioAdTrack *_adTrack;
    bool _isUsingPlaybackLease;
    MPPlayerPlaybackLeaseController *_playbackLeaseController;
    NSString *_playbackLeaseUsageName;
    RadioStation *_station;
    NSString *_stationHash;
    long long _stationID;
    NSString *_stationName;
    NSString *_stationStringID;
}

@property (nonatomic, retain) RadioStation *station;
@property (nonatomic, readonly) NSString *stationHash;
@property (nonatomic, readonly) long long stationID;
@property (nonatomic, readonly) NSString *stationName;
@property (nonatomic, readonly) NSString *stationStringID;

- (void).cxx_destruct;
- (void)_applyLoudnessInfo;
- (void)_beginUsingPlaybackLease;
- (void)_stopUsingPlaybackLeaseIfNeeded;
- (void)_willResignActivePlayerItem;
- (id)adTrack;
- (id)album;
- (id)artworkCatalogForPlaybackTime:(double)arg1;
- (void)dealloc;
- (id)initWithAdTrack:(id)arg1;
- (bool)isStreamable;
- (bool)isValidPlayerSubstituteForItem:(id)arg1;
- (void)loadAssetAndPlayerItem;
- (id)mainTitle;
- (id)mpuReporting_externalID;
- (unsigned long long)mpuReporting_itemType;
- (bool)mpuReporting_shouldReportPlayEventsToStore;
- (void)reevaluateType;
- (void)setStation:(id)arg1;
- (id)station;
- (id)stationHash;
- (long long)stationID;
- (id)stationName;
- (id)stationStringID;
- (id)storeLookupDictionary;
- (bool)supportsSkip;
- (id)title;
- (id)titlesForTime:(double)arg1;
- (unsigned long long)type;
- (bool)usesSubscriptionLease;

@end
