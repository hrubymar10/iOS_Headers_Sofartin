/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/RadioUI.framework/RadioUI
 */

@interface RURadioPlaybackContext : MPPlaybackContext {
    NSArray *_allPreparedAdSlotRadioTracks;
    SSVPlaybackLease *_playbackLease;
    MPAVItem *_prefixItem;
    NSMapTable *_preparedAdSlotByRadioTrack;
    RadioStation *_station;
    RadioStationMatchContext *_stationMatchContext;
    NSArray *_tracks;
    bool _transitioningPlaybackModes;
}

@property(assign,copy) NSArray * allPreparedAdSlotRadioTracks;
@property(assign,retain) SSVPlaybackLease * playbackLease;
@property(assign,retain) MPAVItem * prefixItem;
@property(assign,retain) RadioStation * station;
@property(assign,retain) RadioStationMatchContext * stationMatchContext;
@property(assign,copy) NSArray * tracks;
@property(getter=isTransitioningPlaybackModes,assign,readwrite) bool transitioningPlaybackModes;

+ (Class)queueFeederClass;
+ (void)setDefaultPlaybackLease:(id)arg1;

- (void).cxx_destruct;
- (void)addPreparedAdSlot:(id)arg1 forRadioTrack:(id)arg2;
- (id)allPreparedAdSlotRadioTracks;
- (void)configureWithStationPlaybackMetadata:(id)arg1;
- (id)init;
- (bool)isTransitioningPlaybackModes;
- (id)playbackLease;
- (id)prefixItem;
- (id)preparedAdSlotForRadioTrack:(id)arg1;
- (void)setPlaybackLease:(id)arg1;
- (void)setPrefixItem:(id)arg1;
- (void)setStation:(id)arg1;
- (void)setStationMatchContext:(id)arg1;
- (void)setTracks:(id)arg1;
- (void)setTransitioningPlaybackModes:(bool)arg1;
- (id)station;
- (id)stationMatchContext;
- (id)tracks;

@end
