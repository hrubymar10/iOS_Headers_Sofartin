/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CompanionSync.framework/CompanionSync
 */

@interface SYStore : NSObject <IDSServiceDelegate, NMSMessageCenterDelegate, SYChangeTrackingWithErrors> {
    bool _allowsDeletes;
    bool _alwaysWins;
    NSMutableIndexSet *_batchChunkUnackedIndices;
    unsigned long long _batchCounter;
    NSDictionary *_customIDSDeliveryOptions;
    NSString *_databaseFileName;
    bool _deferredFullSync;
    <SYStoreDelegate> *_delegate;
    bool _encryptPayloads;
    struct { 
        unsigned int delegateWillUpdate : 1; 
        unsigned int delegateWillUpdateWithCount : 1; 
        unsigned int delegateDidUpdate : 1; 
        unsigned int delegateDidCompleteFullSync : 1; 
        unsigned int delegateAllObjectsDeleted : 1; 
        unsigned int delegateAllObjects : 1; 
        unsigned int delegateShouldPerformInitialSync : 1; 
        unsigned int delegateBeginSyncingAllObjects : 1; 
        unsigned int delegateShouldDeleteOnFailedSync : 1; 
        unsigned int delegateErrorInFullSync : 1; 
        unsigned int delegateStoreEncounteredError : 1; 
        unsigned int delegateDidPair : 1; 
        unsigned int delegateDidUnpair : 1; 
        unsigned int delegateSentMessage : 1; 
        unsigned int delegatePeerProcessedMessage : 1; 
        unsigned int delegateSentLastSyncMessage : 1; 
    } _flags;
    bool _fullSyncWasRequestedBySlave;
    struct __CFString { } *_loggingFacility;
    NMSMessageCenter *_messageCenter;
    id _nextBatchStep;
    NSError *_overflowRetryError;
    NSObject<OS_dispatch_source> *_overflowRetryTimer;
    NSUUID *_pairedDeviceID;
    SYPersistentStore *_persistentStore;
    long long _priority;
    NSObject<OS_dispatch_queue> *_qosTargetQueue;
    NSObject<OS_dispatch_queue> *_queue;
    bool _registeredNotificationHandlers;
    NSMutableDictionary *_sendSignals;
    <SYSerialization> *_serializer;
    NSString *_service;
    SYRetryTimer *_syncRetryTimer;
    bool _tracksChanges;
    SYVectorClock *_vectorClock;
}

@property(assign,readwrite) bool allowsDeletes;
@property(assign,readwrite) bool alwaysWins;
@property(assign,copy) NSDictionary * customIDSDeliveryOptions;
@property(assign,retain) NSString * databaseFileName;
@property(assign,copy) NSString * debugDescription;
@property(assign,readwrite) <SYStoreDelegate> * delegate;
@property(assign,readwrite) unsigned int deliveryQOS;
@property(assign,copy) NSString * description;
@property(assign,readwrite) bool encryptPayloads;
@property(assign,readwrite) bool fullSyncWasRequestedBySlave;
@property(assign,readonly) bool hasCompletedFullSync;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) bool inDeltaSync;
@property(assign,readwrite) struct __CFString { }* loggingFacility;
@property(assign,readwrite) long long maxBytesInFlight;
@property(assign,retain) NMSMessageCenter * messageCenter;
@property(assign,copy) id nextBatchStep;
@property(getter=isPaired,assign,readonly) bool paired;
@property(assign,retain) NSUUID * pairedDeviceID;
@property(assign,retain) SYPersistentStore * persistentStore;
@property(assign,readwrite) long long priority;
@property(assign,retain) NSObject<OS_dispatch_queue> * queue;
@property(assign,readwrite) bool registeredNotificationHandlers;
@property(assign,retain) <SYSerialization> * serializer;
@property(assign,retain) NSString * service;
@property(assign,readonly) long long state;
@property(assign,readonly) Class superclass;
@property(assign,readwrite) double timeToLive;
@property(assign,readwrite) bool tracksChanges;
@property(assign,retain) SYVectorClock * vectorClock;

+ (id)fullSyncActivityDictionary;

- (void).cxx_destruct;
- (bool)_allowDeltaSyncWithContext:(id)arg1 error:(id*)arg2;
- (id)_batchChunkUnackedIndices;
- (bool)_checkMessageHeader:(id)arg1 messageID:(id)arg2;
- (void)_copyPeerClockFromMessageHeaderIfNecessary:(id)arg1;
- (void)_devicePaired:(id)arg1;
- (void)_deviceUnpaired:(id)arg1;
- (void)_handleIDSOverflowWithError:(id)arg1;
- (bool)_isPairedWithDevice:(id)arg1;
- (void)_listenForPrefsChangeNotifications;
- (id)_pathForMessageCenterCache;
- (void)_postBatchEndMessageWithState:(id)arg1 error:(id)arg2 then:(id)arg3;
- (void)_postBatchStartMessageWithState:(id)arg1 then:(id)arg2;
- (void)_prefsChanged;
- (void)_recordLastSeqNo:(id)arg1;
- (void)_restartBatchSyncWithState:(id)arg1 then:(id)arg2;
- (void)_retrySync;
- (void)_sendBatchChunk:(id)arg1 withState:(id)arg2 then:(id)arg3;
- (void)_setupMessageCenter_LOCKED;
- (bool)_shouldIgnoreSyncID:(id)arg1;
- (bool)_shouldSkipNonSyncMessages;
- (void)_syncEndedWithSyncID:(id)arg1;
- (void)_transaction:(id)arg1 context:(id)arg2 idsOptions:(id)arg3 blockUntilSent:(bool)arg4 reportError:(id)arg5;
- (void)_updateMessageCenterPrefs:(id)arg1;
- (void)_vectorClockUpdated;
- (void)addObject:(id)arg1;
- (void)addObject:(id)arg1 completion:(id)arg2;
- (void)addObject:(id)arg1 context:(id)arg2;
- (void)addObject:(id)arg1 context:(id)arg2 idsOptions:(id)arg3;
- (bool)addObject:(id)arg1 context:(id)arg2 idsOptions:(id)arg3 error:(id*)arg4;
- (bool)addObject:(id)arg1 error:(id*)arg2;
- (bool)allowsDeletes;
- (bool)alwaysWins;
- (void)blockingTransaction:(id)arg1;
- (void)blockingTransaction:(id)arg1 handlingError:(id)arg2;
- (id)customIDSDeliveryOptions;
- (id)databaseFileName;
- (void)dealloc;
- (id)decodeSYObject:(id)arg1;
- (id)delegate;
- (void)deleteObject:(id)arg1;
- (void)deleteObject:(id)arg1 completion:(id)arg2;
- (void)deleteObject:(id)arg1 context:(id)arg2;
- (void)deleteObject:(id)arg1 context:(id)arg2 idsOptions:(id)arg3;
- (bool)deleteObject:(id)arg1 context:(id)arg2 idsOptions:(id)arg3 error:(id*)arg4;
- (bool)deleteObject:(id)arg1 error:(id*)arg2;
- (unsigned int)deliveryQOS;
- (void)didEndDeltaSync;
- (id)encodeSYObject:(id)arg1;
- (bool)encryptPayloads;
- (bool)fullSyncWasRequestedBySlave;
- (void)handleBatchSyncChunk:(id)arg1 response:(id)arg2;
- (void)handleBatchSyncEnd:(id)arg1 response:(id)arg2;
- (void)handleBatchSyncStart:(id)arg1;
- (void)handleChangeMessage:(id)arg1;
- (void)handleFullSyncRequest:(id)arg1 response:(id)arg2;
- (void)handleObjectChanges:(id)arg1 contextInfo:(id)arg2 idsOptions:(id)arg3 blockUntilSent:(bool)arg4 reportError:(id)arg5;
- (void)handleSyncAllObjects:(id)arg1 response:(id)arg2;
- (bool)hasCompletedFullSync;
- (bool)inDeltaSync;
- (bool)inFullSync;
- (id)initWithBundleIdentifier:(id)arg1;
- (id)initWithBundleIdentifier:(id)arg1 isGStore:(bool)arg2 highPriority:(bool)arg3;
- (id)initWithService:(id)arg1;
- (id)initWithService:(id)arg1 isGStore:(bool)arg2 highPriority:(bool)arg3;
- (id)initWithService:(id)arg1 isGStore:(bool)arg2 highPriority:(bool)arg3 isMasterStore:(bool)arg4;
- (id)initWithService:(id)arg1 isGStore:(bool)arg2 highPriority:(bool)arg3 isMasterStore:(bool)arg4 tracksChanges:(bool)arg5;
- (id)initWithService:(id)arg1 isGStore:(bool)arg2 priority:(long long)arg3 isMasterStore:(bool)arg4;
- (id)initWithService:(id)arg1 isGStore:(bool)arg2 priority:(long long)arg3 isMasterStore:(bool)arg4 tracksChanges:(bool)arg5;
- (bool)isPaired;
- (void)logChanges:(id)arg1;
- (struct __CFString { }*)loggingFacility;
- (long long)maxBytesInFlight;
- (id)messageCenter;
- (void)messageCenter:(id)arg1 didReceiveUnknownRequest:(id)arg2;
- (void)messageCenter:(id)arg1 didResolveIDSIdentifier:(id)arg2 forResponse:(id)arg3;
- (void)messageCenter:(id)arg1 didResolveIDSIdentifierForRequest:(id)arg2;
- (void)messageCenter:(id)arg1 didSuccessfullyDeliverRequestWithIdentifier:(id)arg2 userInfo:(id)arg3;
- (void)messageCenter:(id)arg1 didSuccessfullySendRequestWithIdentifier:(id)arg2 userInfo:(id)arg3;
- (id)newFullSyncContext;
- (id)newMessageHeader;
- (id)nextBatchStep;
- (bool)objectChanged:(id)arg1 sinceVersion:(unsigned long long)arg2;
- (id)pairedDeviceID;
- (bool)peerState:(id)arg1 fromPeer:(id)arg2 matchesExpectationForChangeCount:(unsigned long long)arg3 offsetAmount:(unsigned long long*)arg4;
- (bool)performBatchedSyncToCurrentDBVersion;
- (void)performFullSync;
- (void)performFullSyncIfNecessary;
- (void)performFullSyncIfNecessaryAskingDelegate:(bool)arg1;
- (void)performFullSyncToCurrentDBVersion;
- (id)persistentStore;
- (void)postUserNotification:(id)arg1 message:(id)arg2;
- (long long)priority;
- (void)processBatchChunkAck:(unsigned int)arg1;
- (void)processBatchChunkAtIndex:(unsigned int)arg1 encodedObjects:(id)arg2 error:(id*)arg3;
- (void)processBatchSyncEnd:(unsigned long long)arg1;
- (void)processBatchSyncStart;
- (id)queue;
- (bool)registeredNotificationHandlers;
- (void)remoteStoreAllObjects:(id)arg1 fromPeer:(id)arg2 clock:(id)arg3;
- (void)remoteStoreRequestFullSync;
- (void)sendChanges:(id)arg1 context:(id)arg2 options:(id)arg3 sentSignal:(id)arg4;
- (void)sendMessage:(id)arg1 ofType:(unsigned short)arg2 respondingTo:(id)arg3 userInfo:(id)arg4 idsOptions:(id)arg5;
- (id)serializer;
- (id)service;
- (void)setAllowsDeletes:(bool)arg1;
- (void)setAlwaysWins:(bool)arg1;
- (void)setCustomIDSDeliveryOptions:(id)arg1;
- (void)setDatabaseFileName:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeliveryQOS:(unsigned int)arg1;
- (void)setEncryptPayloads:(bool)arg1;
- (void)setFullSyncWasRequestedBySlave:(bool)arg1;
- (void)setLoggingFacility:(struct __CFString { }*)arg1;
- (void)setMaxBytesInFlight:(long long)arg1;
- (void)setMessageCenter:(id)arg1;
- (void)setNeedsFullSync;
- (void)setNeedsFullSyncWithContext:(id)arg1 idsOptions:(id)arg2;
- (void)setNextBatchStep:(id)arg1;
- (void)setPairedDeviceID:(id)arg1;
- (void)setPersistentStore:(id)arg1;
- (void)setPriority:(long long)arg1;
- (void)setQueue:(id)arg1;
- (void)setRegisteredNotificationHandlers:(bool)arg1;
- (void)setSerializer:(id)arg1;
- (void)setService:(id)arg1;
- (void)setTimeToLive:(double)arg1;
- (void)setTracksChanges:(bool)arg1;
- (void)setVectorClock:(id)arg1;
- (void)setupDatabase;
- (void)setupMessageCenter;
- (void)setupPairingNotifications;
- (long long)state;
- (double)timeToLive;
- (bool)tracksChanges;
- (void)transaction:(id)arg1;
- (void)transaction:(id)arg1 completion:(id)arg2;
- (void)transaction:(id)arg1 context:(id)arg2;
- (void)transaction:(id)arg1 context:(id)arg2 idsOptions:(id)arg3;
- (void)transaction:(id)arg1 context:(id)arg2 idsOptions:(id)arg3 blockUntilSent:(bool)arg4;
- (void)transaction:(id)arg1 handlingError:(id)arg2;
- (void)updateObject:(id)arg1;
- (void)updateObject:(id)arg1 completion:(id)arg2;
- (void)updateObject:(id)arg1 context:(id)arg2;
- (void)updateObject:(id)arg1 context:(id)arg2 idsOptions:(id)arg3;
- (bool)updateObject:(id)arg1 context:(id)arg2 idsOptions:(id)arg3 error:(id*)arg4;
- (bool)updateObject:(id)arg1 error:(id*)arg2;
- (id)vectorClock;
- (void)willBeginDeltaSync;
- (id)wrapMessage:(id)arg1 ofType:(unsigned short)arg2 respondingTo:(id)arg3 userInfo:(id)arg4;

@end
