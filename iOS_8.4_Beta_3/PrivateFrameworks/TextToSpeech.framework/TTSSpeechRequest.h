/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/TextToSpeech.framework/TextToSpeech
 */

@interface TTSSpeechRequest : NSObject <NSSecureCoding> {
    NSAttributedString *_attributedText;
    unsigned int _audioQueueFlags;
    unsigned int _audioSessionID;
    bool _audioSessionIDIsValid;
    <TTSSpeechRequestDelegate> *_delegate;
    double _dispatchTime;
    long long _footprint;
    long long _gender;
    double _handledTime;
    NSString *_languageCode;
    double _latency;
    bool _maintainsInput;
    NSURL *_outputPath;
    double _pitch;
    double _rate;
    TTSSpeechChannel *_speechChannel;
    NSString *_text;
    bool _useCustomVoice;
    bool _useVoiceBooster;
    double _volume;
}

@property (nonatomic, copy) NSAttributedString *attributedText;
@property (nonatomic) unsigned int audioQueueFlags;
@property (nonatomic) unsigned int audioSessionID;
@property (nonatomic) bool audioSessionIDIsValid;
@property (nonatomic) double dispatchTime;
@property (nonatomic) long long footprint;
@property (nonatomic) long long gender;
@property (nonatomic) double handledTime;
@property (nonatomic, copy) NSString *languageCode;
@property (nonatomic) double latency;
@property (nonatomic) bool maintainsInput;
@property (nonatomic, copy) NSURL *outputPath;
@property (nonatomic) double pitch;
@property (nonatomic) double rate;
@property (nonatomic, retain) TTSSpeechChannel *speechChannel;
@property (nonatomic, copy) NSString *text;
@property (nonatomic) bool useCustomVoice;
@property (nonatomic) bool useVoiceBooster;
@property (nonatomic) double volume;

+ (bool)supportsSecureCoding;

- (id)attributedText;
- (unsigned int)audioQueueFlags;
- (unsigned int)audioSessionID;
- (bool)audioSessionIDIsValid;
- (void)dealloc;
- (id)delegate;
- (id)description;
- (double)dispatchTime;
- (void)encodeWithCoder:(id)arg1;
- (long long)footprint;
- (long long)gender;
- (double)handledTime;
- (id)initWithCoder:(id)arg1;
- (id)initWithSpeechChannel:(id)arg1;
- (id)languageCode;
- (double)latency;
- (bool)maintainsInput;
- (id)outputPath;
- (double)pitch;
- (double)rate;
- (void)setAttributedText:(id)arg1;
- (void)setAudioQueueFlags:(unsigned int)arg1;
- (void)setAudioSessionID:(unsigned int)arg1;
- (void)setAudioSessionIDIsValid:(bool)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDispatchTime:(double)arg1;
- (void)setFootprint:(long long)arg1;
- (void)setGender:(long long)arg1;
- (void)setHandledTime:(double)arg1;
- (void)setLanguageCode:(id)arg1;
- (void)setLatency:(double)arg1;
- (void)setMaintainsInput:(bool)arg1;
- (void)setOutputPath:(id)arg1;
- (void)setPitch:(double)arg1;
- (void)setRate:(double)arg1;
- (void)setSpeechChannel:(id)arg1;
- (void)setText:(id)arg1;
- (void)setUseCustomVoice:(bool)arg1;
- (void)setUseVoiceBooster:(bool)arg1;
- (void)setVolume:(double)arg1;
- (id)speechChannel;
- (void)speechRequestDidContinueForService:(id)arg1;
- (void)speechRequestDidPauseForService:(id)arg1;
- (void)speechRequestDidStartForService:(id)arg1;
- (void)speechRequestDidStopWithSuccess:(bool)arg1 phonemesSpoken:(id)arg2 forService:(id)arg3 error:(id)arg4;
- (void)speechRequestMark:(long long)arg1 didStartForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg2 forService:(id)arg3;
- (id)text;
- (bool)useCustomVoice;
- (bool)useVoiceBooster;
- (long long)vocalizerFootprint;
- (long long)vocalizerGender;
- (double)volume;

@end
