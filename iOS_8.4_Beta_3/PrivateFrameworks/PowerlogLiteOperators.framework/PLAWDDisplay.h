/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/PowerlogLiteOperators.framework/PowerlogLiteOperators
 */

@interface PLAWDDisplay : PLAWDAuxMetrics {
    PLEntryNotificationOperatorComposition *_alsEnabledEventCallback;
    PLEntryNotificationOperatorComposition *_alsUserPreferencesEventCallback;
    PLEntryNotificationOperatorComposition *_backlightEventCallback;
    PLEntryNotificationOperatorComposition *_backlightRailCallback;
    PLEntryNotificationOperatorComposition *_batteryEventCallback;
    double _bklPowerRailTimeStamp;
    double _bklTimeStamp;
    long long _dispSubmitCnt;
    PLEntryNotificationOperatorComposition *_displayEventCallback;
    double _displayOnTimeStamp;
    bool _filterFirstEntry;
    PLEntryNotificationOperatorComposition *_ioReportEventCallback;
    double _mieOnTimeStamp;
    bool _prevAlsOn;
    long long _prevBklBucketIdx;
    double _prevBklChgTimeStamp;
    double _prevBklPower;
    bool _prevDeviceCharging;
    bool _prevDisplayOn;
    bool _prevMieOn;
    long long _startTouchEntryId;
    PLEntryNotificationOperatorComposition *_touchEventCallback;
    long long _touchSubmitCnt;
}

@property(assign,retain) PLEntryNotificationOperatorComposition * alsEnabledEventCallback;
@property(assign,retain) PLEntryNotificationOperatorComposition * alsUserPreferencesEventCallback;
@property(assign,retain) PLEntryNotificationOperatorComposition * backlightEventCallback;
@property(assign,retain) PLEntryNotificationOperatorComposition * backlightRailCallback;
@property(assign,retain) PLEntryNotificationOperatorComposition * batteryEventCallback;
@property(assign,readwrite) double bklPowerRailTimeStamp;
@property(assign,readwrite) double bklTimeStamp;
@property(assign,readwrite) long long dispSubmitCnt;
@property(assign,retain) PLEntryNotificationOperatorComposition * displayEventCallback;
@property(assign,readwrite) double displayOnTimeStamp;
@property(assign,readwrite) bool filterFirstEntry;
@property(assign,retain) PLEntryNotificationOperatorComposition * ioReportEventCallback;
@property(assign,readwrite) double mieOnTimeStamp;
@property(assign,readwrite) PLOperator * operator;
@property(assign,readwrite) bool prevAlsOn;
@property(assign,readwrite) long long prevBklBucketIdx;
@property(assign,readwrite) double prevBklChgTimeStamp;
@property(assign,readwrite) double prevBklPower;
@property(assign,readwrite) bool prevDeviceCharging;
@property(assign,readwrite) bool prevDisplayOn;
@property(assign,readwrite) bool prevMieOn;
@property(assign,retain) NSMutableSet * runningMetrics;
@property(assign,readwrite) long long startTouchEntryId;
@property(assign,retain) PLEntryNotificationOperatorComposition * touchEventCallback;
@property(assign,readwrite) long long touchSubmitCnt;

+ (id)entryAggregateDefinitionAwdDisplayAndAls;
+ (id)entryAggregateDefinitions;
+ (id)getSharedObjWithOperator:(id)arg1;

- (void).cxx_destruct;
- (void)addEntryToDisplayAlsTable:(id)arg1 withValue:(double)arg2;
- (id)alsEnabledEventCallback;
- (id)alsUserPreferencesEventCallback;
- (id)backlightEventCallback;
- (id)backlightRailCallback;
- (id)batteryEventCallback;
- (double)bklPowerRailTimeStamp;
- (double)bklTimeStamp;
- (long long)dispSubmitCnt;
- (id)displayEventCallback;
- (double)displayOnTimeStamp;
- (bool)filterFirstEntry;
- (void)finalizeDisplayAlsTable;
- (long long)getBklbucketIdx:(long long)arg1 withLux:(long long)arg2;
- (long long)getLuxBucket:(long long)arg1;
- (long long)getUAmpsBucket:(long long)arg1;
- (void)handleAlsEnabledCallback:(id)arg1;
- (void)handleAlsUserPreferencesCallback:(id)arg1;
- (void)handleBacklightCallback:(id)arg1;
- (void)handleBacklightRailCallback:(id)arg1;
- (void)handleBatteryCallback:(id)arg1;
- (void)handleDisplayCallback:(id)arg1;
- (void)handleIOReportCallback:(id)arg1;
- (void)handleTouchCallback:(id)arg1;
- (void)initDisplayBacklightAlsStats;
- (void)initTouchStats;
- (id)ioReportEventCallback;
- (double)mieOnTimeStamp;
- (bool)prevAlsOn;
- (long long)prevBklBucketIdx;
- (double)prevBklChgTimeStamp;
- (double)prevBklPower;
- (bool)prevDeviceCharging;
- (bool)prevDisplayOn;
- (bool)prevMieOn;
- (void)processIOReportEntry:(id)arg1;
- (void)reInitDisplayBacklightAlsStats;
- (void)registerForDisplayAgentNotifications;
- (void)registerForTouchNotifications;
- (void)resetDisplayAlsTable;
- (void)setAlsEnabledEventCallback:(id)arg1;
- (void)setAlsUserPreferencesEventCallback:(id)arg1;
- (void)setBacklightEventCallback:(id)arg1;
- (void)setBacklightRailCallback:(id)arg1;
- (void)setBatteryEventCallback:(id)arg1;
- (void)setBklPowerRailTimeStamp:(double)arg1;
- (void)setBklTimeStamp:(double)arg1;
- (void)setDispSubmitCnt:(long long)arg1;
- (void)setDisplayEventCallback:(id)arg1;
- (void)setDisplayOnTimeStamp:(double)arg1;
- (void)setFilterFirstEntry:(bool)arg1;
- (void)setIoReportEventCallback:(id)arg1;
- (void)setMieOnTimeStamp:(double)arg1;
- (void)setPrevAlsOn:(bool)arg1;
- (void)setPrevBklBucketIdx:(long long)arg1;
- (void)setPrevBklChgTimeStamp:(double)arg1;
- (void)setPrevBklPower:(double)arg1;
- (void)setPrevDeviceCharging:(bool)arg1;
- (void)setPrevDisplayOn:(bool)arg1;
- (void)setPrevMieOn:(bool)arg1;
- (void)setStartTouchEntryId:(long long)arg1;
- (void)setTouchEventCallback:(id)arg1;
- (void)setTouchSubmitCnt:(long long)arg1;
- (void)startMetricCollection:(id)arg1;
- (long long)startTouchEntryId;
- (void)stopMetricCollection:(id)arg1;
- (bool)submitDataToAWDServer:(id)arg1 withAwdConn:(id)arg2;
- (id)touchEventCallback;
- (long long)touchSubmitCnt;
- (void)updateDisplayMetrics:(bool)arg1 withState:(bool)arg2;
- (void)updateMieMetrics:(bool)arg1;

@end
