/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FrontBoardServices.framework/FrontBoardServices
 */

@interface FBSDisplay : NSObject <BSXPCCoding, NSCopying, NSSecureCoding> {
    CADisplay *_caDisplay;
    struct CGRect { 
        struct CGPoint { 
            double x; 
            double y; 
        } origin; 
        struct CGSize { 
            double width; 
            double height; 
        } size; 
    } _referenceBounds;
    double _scale;
    unsigned int _seed;
    long long _tags;
    unsigned long long _type;
}

@property (nonatomic, readonly, retain) CADisplay *caDisplay;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) double orientation;
@property (nonatomic) struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; } referenceBounds;
@property (nonatomic) double scale;
@property (nonatomic) unsigned int seed;
@property (readonly) Class superclass;
@property (nonatomic, readonly) long long tags;
@property (nonatomic, readonly) unsigned long long type;

+ (id)_CADisplayForId:(unsigned int)arg1;
+ (bool)supportsSecureCoding;

- (id)_nameForDisplayType;
- (id)_screen;
- (unsigned long long)_typeFromTags:(unsigned long long)arg1;
- (id)caDisplay;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (void)encodeWithCoder:(id)arg1;
- (void)encodeWithXPCDictionary:(id)arg1;
- (unsigned long long)hash;
- (id)initWithCADisplay:(id)arg1;
- (id)initWithCADisplay:(id)arg1 isMainDisplay:(bool)arg2;
- (id)initWithCADisplay:(id)arg1 isMainDisplay:(bool)arg2 seed:(unsigned int)arg3 tags:(long long)arg4 scale:(double)arg5;
- (id)initWithCoder:(id)arg1;
- (id)initWithXPCDictionary:(id)arg1;
- (bool)isAirPlayDisplay;
- (bool)isCarDisplay;
- (bool)isConnected;
- (bool)isEqual:(id)arg1;
- (bool)isExternal;
- (bool)isHiddenDisplay;
- (bool)isMainDisplay;
- (bool)isMusicOnlyDisplay;
- (bool)isWatchOnlyDisplay;
- (bool)isiPodOnlyDisplay;
- (double)orientation;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })referenceBounds;
- (double)scale;
- (unsigned int)seed;
- (void)setConnected:(bool)arg1;
- (void)setReferenceBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setScale:(double)arg1;
- (void)setSeed:(unsigned int)arg1;
- (long long)tags;
- (unsigned long long)type;

@end
