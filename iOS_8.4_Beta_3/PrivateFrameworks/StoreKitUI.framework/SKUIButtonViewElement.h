/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/StoreKitUI.framework/StoreKitUI
 */

@interface SKUIButtonViewElement : SKUIViewElement {
    bool _autoIncrementCount;
    NSString *_badgeResourceName;
    bool _bigHitButton;
    double _bigHitSize;
    SKUIViewElementText *_buttonText;
    long long _buttonViewSubType;
    long long _buttonViewType;
    SKUIBuyButtonDescriptor *_buyButtonDescriptor;
    NSString *_confirmationText;
    long long _dataPlaybackId;
    BOOL _enabled;
    long long _itemIdentifier;
    NSString *_nonToggledText;
    NSString *_playItemIdentifier;
    bool _selected;
    NSString *_sizeVariant;
    SKUIStoreIdentifier *_storeIdentifier;
    NSString *_toggleItemIdentfier;
    NSString *_toggleItemIdentifier;
    bool _toggled;
    NSString *_toggledText;
    NSString *_variantIdentifier;
    IKDOMElement *_xml;
}

@property(assign,readonly) SKUIImageViewElement * additionalButtonImage;
@property(assign,readonly) bool autoIncrementCount;
@property(assign,readonly) NSString * badgeResourceName;
@property(getter=isBigHitButton,assign,readonly) bool bigHitButton;
@property(assign,readonly) double bigHitSize;
@property(assign,readonly) SKUIImageViewElement * buttonImage;
@property(assign,readonly) SKUIViewElementText * buttonText;
@property(assign,readonly) IKViewElementStyle * buttonTitleStyle;
@property(assign,readonly) long long buttonViewSubType;
@property(assign,readonly) long long buttonViewType;
@property(assign,readonly) SKUIBuyButtonDescriptor * buyButtonDescriptor;
@property(assign,readonly) NSString * confirmationText;
@property(assign,readonly) long long dataPlaybackId;
@property(assign,readonly) long long itemIdentifier;
@property(assign,readonly) NSString * nonToggledText;
@property(assign,readonly) NSString * playItemIdentifier;
@property(getter=isSelected,assign,readonly) bool selected;
@property(assign,readonly) NSString * sizeVariant;
@property(assign,readonly) SKUIStoreIdentifier * storeIdentifier;
@property(assign,readonly) NSString * toggleItemIdentifier;
@property(getter=isToggled,assign,readwrite) bool toggled;
@property(assign,readonly) NSString * toggledText;
@property(assign,readonly) NSString * variantIdentifier;

- (void).cxx_destruct;
- (id)_parseButtonText;
- (id)additionalButtonImage;
- (id)applyUpdatesWithElement:(id)arg1;
- (bool)autoIncrementCount;
- (id)badgeResourceName;
- (double)bigHitSize;
- (id)buttonImage;
- (id)buttonText;
- (id)buttonTitleStyle;
- (long long)buttonViewSubType;
- (long long)buttonViewType;
- (id)buyButtonDescriptor;
- (id)confirmationText;
- (long long)dataPlaybackId;
- (id)description;
- (unsigned long long)elementType;
- (id)initWithDOMElement:(id)arg1 parent:(id)arg2 elementFactory:(id)arg3;
- (bool)isBigHitButton;
- (bool)isEnabled;
- (bool)isSelected;
- (bool)isToggled;
- (long long)itemIdentifier;
- (id)nonToggledText;
- (long long)pageComponentType;
- (id)personalizationLibraryItems;
- (id)playItemIdentifier;
- (void)setToggled:(bool)arg1;
- (id)sizeVariant;
- (id)storeIdentifier;
- (id)toggleItemIdentifier;
- (id)toggledText;
- (id)variantIdentifier;

@end
