/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/NanoMediaRemote.framework/NanoMediaRemote
 */

@interface _NMRNowPlayingInfoProtobuf : PBCodable <NSCopying> {
    NSString *_album;
    NSString *_artist;
    NSData *_artworkDataDigest;
    double _duration;
    double _elapsedTime;
    struct { 
        unsigned int duration : 1; 
        unsigned int elapsedTime : 1; 
        unsigned int radioStationIdentifier : 1; 
        unsigned int timestamp : 1; 
        unsigned int uniqueIdentifier : 1; 
        unsigned int playbackRate : 1; 
        unsigned int repeatMode : 1; 
        unsigned int shuffleMode : 1; 
        unsigned int isAdvertisement : 1; 
        unsigned int isAlwaysLive : 1; 
        unsigned int isExplicitTrack : 1; 
        unsigned int isMusicApp : 1; 
    } _has;
    bool _isAdvertisement;
    bool _isAlwaysLive;
    bool _isExplicitTrack;
    bool _isMusicApp;
    float _playbackRate;
    NSString *_radioStationHash;
    long long _radioStationIdentifier;
    NSString *_radioStationName;
    int _repeatMode;
    int _shuffleMode;
    double _timestamp;
    NSString *_title;
    unsigned long long _uniqueIdentifier;
}

@property(assign,retain) NSString * album;
@property(assign,retain) NSString * artist;
@property(assign,retain) NSData * artworkDataDigest;
@property(assign,readwrite) double duration;
@property(assign,readwrite) double elapsedTime;
@property(assign,readonly) bool hasAlbum;
@property(assign,readonly) bool hasArtist;
@property(assign,readonly) bool hasArtworkDataDigest;
@property(assign,readwrite) bool hasDuration;
@property(assign,readwrite) bool hasElapsedTime;
@property(assign,readwrite) bool hasIsAdvertisement;
@property(assign,readwrite) bool hasIsAlwaysLive;
@property(assign,readwrite) bool hasIsExplicitTrack;
@property(assign,readwrite) bool hasIsMusicApp;
@property(assign,readwrite) bool hasPlaybackRate;
@property(assign,readonly) bool hasRadioStationHash;
@property(assign,readwrite) bool hasRadioStationIdentifier;
@property(assign,readonly) bool hasRadioStationName;
@property(assign,readwrite) bool hasRepeatMode;
@property(assign,readwrite) bool hasShuffleMode;
@property(assign,readwrite) bool hasTimestamp;
@property(assign,readonly) bool hasTitle;
@property(assign,readwrite) bool hasUniqueIdentifier;
@property(assign,readwrite) bool isAdvertisement;
@property(assign,readwrite) bool isAlwaysLive;
@property(assign,readwrite) bool isExplicitTrack;
@property(assign,readwrite) bool isMusicApp;
@property(assign,readwrite) float playbackRate;
@property(assign,retain) NSString * radioStationHash;
@property(assign,readwrite) long long radioStationIdentifier;
@property(assign,retain) NSString * radioStationName;
@property(assign,readwrite) int repeatMode;
@property(assign,readwrite) int shuffleMode;
@property(assign,readwrite) double timestamp;
@property(assign,retain) NSString * title;
@property(assign,readwrite) unsigned long long uniqueIdentifier;

- (void).cxx_destruct;
- (id)album;
- (id)artist;
- (id)artworkDataDigest;
- (void)copyTo:(id)arg1;
- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (id)description;
- (id)dictionaryRepresentation;
- (double)duration;
- (double)elapsedTime;
- (bool)hasAlbum;
- (bool)hasArtist;
- (bool)hasArtworkDataDigest;
- (bool)hasDuration;
- (bool)hasElapsedTime;
- (bool)hasIsAdvertisement;
- (bool)hasIsAlwaysLive;
- (bool)hasIsExplicitTrack;
- (bool)hasIsMusicApp;
- (bool)hasPlaybackRate;
- (bool)hasRadioStationHash;
- (bool)hasRadioStationIdentifier;
- (bool)hasRadioStationName;
- (bool)hasRepeatMode;
- (bool)hasShuffleMode;
- (bool)hasTimestamp;
- (bool)hasTitle;
- (bool)hasUniqueIdentifier;
- (unsigned long long)hash;
- (bool)isAdvertisement;
- (bool)isAlwaysLive;
- (bool)isEqual:(id)arg1;
- (bool)isExplicitTrack;
- (bool)isMusicApp;
- (void)mergeFrom:(id)arg1;
- (float)playbackRate;
- (id)radioStationHash;
- (long long)radioStationIdentifier;
- (id)radioStationName;
- (bool)readFrom:(id)arg1;
- (int)repeatMode;
- (void)setAlbum:(id)arg1;
- (void)setArtist:(id)arg1;
- (void)setArtworkDataDigest:(id)arg1;
- (void)setDuration:(double)arg1;
- (void)setElapsedTime:(double)arg1;
- (void)setHasDuration:(bool)arg1;
- (void)setHasElapsedTime:(bool)arg1;
- (void)setHasIsAdvertisement:(bool)arg1;
- (void)setHasIsAlwaysLive:(bool)arg1;
- (void)setHasIsExplicitTrack:(bool)arg1;
- (void)setHasIsMusicApp:(bool)arg1;
- (void)setHasPlaybackRate:(bool)arg1;
- (void)setHasRadioStationIdentifier:(bool)arg1;
- (void)setHasRepeatMode:(bool)arg1;
- (void)setHasShuffleMode:(bool)arg1;
- (void)setHasTimestamp:(bool)arg1;
- (void)setHasUniqueIdentifier:(bool)arg1;
- (void)setIsAdvertisement:(bool)arg1;
- (void)setIsAlwaysLive:(bool)arg1;
- (void)setIsExplicitTrack:(bool)arg1;
- (void)setIsMusicApp:(bool)arg1;
- (void)setPlaybackRate:(float)arg1;
- (void)setRadioStationHash:(id)arg1;
- (void)setRadioStationIdentifier:(long long)arg1;
- (void)setRadioStationName:(id)arg1;
- (void)setRepeatMode:(int)arg1;
- (void)setShuffleMode:(int)arg1;
- (void)setTimestamp:(double)arg1;
- (void)setTitle:(id)arg1;
- (void)setUniqueIdentifier:(unsigned long long)arg1;
- (int)shuffleMode;
- (double)timestamp;
- (id)title;
- (unsigned long long)uniqueIdentifier;
- (void)writeTo:(id)arg1;

@end
