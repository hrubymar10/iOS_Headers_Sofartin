/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicDefaults : MPUApplicationDefaults {
    bool _internalInstall;
}

@property (getter=isActivityContinuationEnabled, nonatomic, readonly) bool activityContinuationEnabled;
@property (nonatomic, readonly) int eqPreset;
@property (getter=isGeniusUserEnabled, nonatomic) bool geniusUserEnabled;
@property (getter=isGroupByAlbumArtistEnabled, nonatomic, readonly) bool groupByAlbumArtistEnabled;
@property (nonatomic) bool hasUserBeenNotifiedThatAudioBooksHaveMoved;
@property (nonatomic) bool hasUserRequestedSubscriptionHidden;
@property (getter=isInternalInstall, nonatomic) bool internalInstall;
@property (nonatomic) bool lastEffectiveRadioExplicitTracksEnabled;
@property (nonatomic, copy) NSDictionary *lastKnownTabConfigurations;
@property (getter=isPinningEnabled, nonatomic, readonly) bool pinningEnabled;
@property (nonatomic) unsigned long long playbackSpeed;
@property (nonatomic) bool playlistsOverviewShowsOnlyOfflinePlaylists;
@property (nonatomic) unsigned long long repeatType;
@property (nonatomic) bool searchShouldDefaultToMyMusic;
@property (nonatomic, copy) NSString *selectedLibraryViewIdentifier;
@property (nonatomic) unsigned long long selectedPlaylistsOverviewFilterType;
@property (getter=isShakeToShuffleEnabled, nonatomic, readonly) bool shakeToShuffleEnabled;
@property (getter=isShowCloudMediaEnabled, nonatomic) bool showCloudMediaEnabled;
@property (nonatomic) unsigned long long shuffleType;
@property (getter=isSortByArtistEnabled, nonatomic, readonly) bool sortByArtistEnabled;
@property (getter=isSoundCheckEnabled, nonatomic, readonly) bool soundCheckEnabled;
@property (nonatomic, copy) NSArray *tabBarOrdering;

+ (id)sharedDefaults;

- (void)beginObservingDefaultsChanges;
- (void)ensureInvertedDefaultPlaybackSpeedHackIsInPlace;
- (int)eqPreset;
- (bool)hasUserBeenNotifiedThatAudioBooksHaveMoved;
- (bool)hasUserRequestedSubscriptionHidden;
- (bool)isActivityContinuationEnabled;
- (bool)isGeniusUserEnabled;
- (bool)isGroupByAlbumArtistEnabled;
- (bool)isInternalInstall;
- (bool)isPinningEnabled;
- (bool)isShakeToShuffleEnabled;
- (bool)isShowCloudMediaEnabled;
- (bool)isSortByArtistEnabled;
- (bool)isSoundCheckEnabled;
- (bool)lastEffectiveRadioExplicitTracksEnabled;
- (id)lastKnownTabConfigurations;
- (void)migrateTabBarOrderingIfNeeded;
- (unsigned long long)playbackSpeed;
- (bool)playlistsOverviewShowsOnlyOfflinePlaylists;
- (unsigned long long)repeatType;
- (bool)searchShouldDefaultToMyMusic;
- (id)selectedLibraryViewIdentifier;
- (unsigned long long)selectedPlaylistsOverviewFilterType;
- (void)setGeniusUserEnabled:(bool)arg1;
- (void)setHasUserBeenNotifiedThatAudioBooksHaveMoved:(bool)arg1;
- (void)setHasUserRequestedSubscriptionHidden:(bool)arg1;
- (void)setInternalInstall:(bool)arg1;
- (void)setLastEffectiveRadioExplicitTracksEnabled:(bool)arg1;
- (void)setLastKnownTabConfigurations:(id)arg1;
- (void)setPlaybackSpeed:(unsigned long long)arg1;
- (void)setPlaylistsOverviewShowsOnlyOfflinePlaylists:(bool)arg1;
- (void)setRepeatType:(unsigned long long)arg1;
- (void)setSearchShouldDefaultToMyMusic:(bool)arg1;
- (void)setSelectedLibraryViewIdentifier:(id)arg1;
- (void)setSelectedPlaylistsOverviewFilterType:(unsigned long long)arg1;
- (void)setShowCloudMediaEnabled:(bool)arg1;
- (void)setShuffleType:(unsigned long long)arg1;
- (void)setTabBarOrdering:(id)arg1;
- (unsigned long long)shuffleType;
- (id)tabBarOrdering;

@end
