/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/FuseUI.framework/FuseUI
 */

@interface MusicNowPlayingViewController : UIViewController <MPURatingControlDelegate, MPUTransportControlMediaRemoteControllerDelegate, MPUTransportControlsViewDataSource, MPUTransportControlsViewDelegate, MPUTransportControlsViewLayoutDelegate, MusicClientContextConsuming, MusicJSNativeViewControllerFactory, MusicJSNowPlayingNativeViewControllerDelegate, MusicNowPlayingItemViewControllerDelegate, MusicNowPlayingVolumeSliderDelegate, MusicPlaybackProgressScrubberDelegate, RUTrackDownloadViewDelegate, UIGestureRecognizerDelegate, UIPopoverControllerDelegate, UIViewControllerTransitioningDelegate> {
    long long _accessoryStyle;
    MusicNowPlayingFloatingButton *_adInfoButton;
    NSArray *_allowedSecondaryControls;
    UIView *_backgroundClippingView;
    MPUBlurEffectView *_backgroundView;
    MusicClientContext *_clientContext;
    MPAVItem *_currentItem;
    MusicNowPlayingItemViewController *_currentItemViewController;
    UIView *_currentItemViewControllerBackgroundView;
    UIView *_currentItemViewControllerContainerView;
    UIView *_detailContainerView;
    bool _detailedScrubbing;
    MusicNowPlayingFloatingButton *_dismissButton;
    MusicPlaybackProgressScrubberController *_playbackProgressSliderController;
    MusicPlaybackProgressSliderView *_playbackProgressSliderView;
    MPAVController *_player;
    UIViewController *_presentedDetailViewController;
    MusicNowPlayingRatingControl *_ratingControl;
    MPAudioVideoRoutingPopoverController *_routingPopoverController;
    MPUTransportControlMediaRemoteController *_secondaryTransportControlMediaRemoteController;
    MPUTransportControlsView *_secondaryTransportControls;
    NSTimer *_skipInformationRevealTimer;
    MPUSkipLimitView *_skipLimitView;
    CAGradientLayer *_statusBarLegibilityGradient;
    UITapGestureRecognizer *_tapGestureRecognizer;
    MusicNowPlayingTitlesView *_titlesView;
    RUTrackDownloadView *_trackDownloadButton;
    UIPanGestureRecognizer *_transitionPanGestureRecognizer;
    MusicNowPlayingPresentationController *_transitionPresentationController;
    MPUTransportControlMediaRemoteController *_transportControlMediaRemoteController;
    MPUTransportControlsView *_transportControls;
    MPUVibrantContentEffectView *_vibrantEffectView;
    MusicNowPlayingVolumeSlider *_volumeSlider;
}

@property(assign,readwrite) long long accessoryStyle;
@property(assign,readonly) MusicNowPlayingFloatingButton * adInfoButton;
@property(assign,retain) UIView * backgroundClippingView;
@property(assign,retain) MPUBlurEffectView * backgroundView;
@property(assign,retain) SKUIClientContext * clientContext;
@property(assign,readonly) MusicNowPlayingItemViewController * currentItemViewController;
@property(assign,readonly) UIView * currentItemViewControllerBackgroundView;
@property(assign,readonly) UIView * currentItemViewControllerContainerView;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readonly) UIView * detailContainerView;
@property(assign,readonly) MusicNowPlayingFloatingButton * dismissButton;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) NSArray * persistentAnimationLayers;
@property(assign,readonly) MusicPlaybackProgressScrubberController * playbackProgressSliderController;
@property(assign,readonly) MusicPlaybackProgressSliderView * playbackProgressSliderView;
@property(assign,readonly) MPAVController * player;
@property(assign,readonly) UIViewController * presentedDetailViewController;
@property(assign,readonly) MusicNowPlayingRatingControl * ratingControl;
@property(assign,readonly) MPUTransportControlMediaRemoteController * secondaryTransportControlMediaRemoteController;
@property(assign,readonly) MPUTransportControlsView * secondaryTransportControls;
@property(assign,readonly) MPUSkipLimitView * skipLimitView;
@property(assign,readonly) CAGradientLayer * statusBarLegibilityGradient;
@property(assign,readonly) Class superclass;
@property(assign,readonly) MusicNowPlayingTitlesView * titlesView;
@property(assign,readonly) RUTrackDownloadView * trackDownloadButton;
@property(assign,readonly) MPUTransportControlMediaRemoteController * transportControlMediaRemoteController;
@property(assign,readonly) MPUTransportControlsView * transportControls;
@property(assign,retain) MPUVibrantContentEffectView * vibrantEffectView;
@property(assign,readonly) MusicNowPlayingVolumeSlider * volumeSlider;

- (void).cxx_destruct;
- (void)_adInfoButtonTapped:(id)arg1;
- (void)_currentItemTitlesDidChangeNotification:(id)arg1;
- (void)_didSkipTrackNotification:(id)arg1;
- (void)_didUpdateSupportedCommandsNotification:(id)arg1;
- (void)_dismissDetailViewControllerWithCompletionHandler:(id)arg1;
- (void)_handleTapGestureRecognizerAction:(id)arg1;
- (void)_handleTransitionPanGestureRecognizerAction:(id)arg1;
- (bool)_hasShareButton;
- (id)_imageForTransportButtonWithControlType:(long long)arg1 usingTransportControlMediaRemoteController:(id)arg2;
- (void)_invalidateSkipInformationRevealTimer;
- (void)_layoutSkipLimitView;
- (void)_peekSkipLimit:(struct { long long x1; long long x2; double x3; })arg1;
- (void)_playerContentsDidChangeNotification:(id)arg1;
- (void)_playerCurrentItemDidChangeNotification:(id)arg1;
- (void)_playerPlaybackStateDidChangeNotification:(id)arg1;
- (void)_presentDetailViewController:(id)arg1;
- (void)_pushMediaRemoteCommand:(unsigned int)arg1 withOptions:(id)arg2;
- (void)_revealSkipInformationMomentarily;
- (void)_scheduleSkipInformationRevealTimer;
- (void)_setCurrentItem:(id)arg1 skipUpdatingView:(bool)arg2 forceUpdatingView:(bool)arg3;
- (void)_setLyricsVisible:(bool)arg1;
- (void)_setRatingsVisible:(bool)arg1;
- (bool)_shouldDismissAutomaticallyForCurrentPlaybackState;
- (void)_showContextualActionsWithTransportButton:(id)arg1 includeSharing:(bool)arg2 includeStandardActions:(bool)arg3;
- (void)_skipLimitDidChangeNotification:(id)arg1;
- (void)_statusBarFrameChangeNotification:(id)arg1;
- (void)_triggerAutomaticDismissalWithCompletionHandler:(id)arg1;
- (void)_updateBackgroundEffects;
- (void)_updateNowPlayingInfo;
- (void)_updateSupportedCommands;
- (void)_updateTitles;
- (long long)accessoryStyle;
- (id)adInfoButton;
- (id)animationControllerForDismissedController:(id)arg1;
- (id)animationControllerForPresentedController:(id)arg1 presentingController:(id)arg2 sourceController:(id)arg3;
- (id)backgroundClippingView;
- (id)backgroundView;
- (id)clientContext;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })contentItemFrameForContentContainerBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)currentItemViewController;
- (id)currentItemViewControllerBackgroundView;
- (id)currentItemViewControllerContainerView;
- (void)dealloc;
- (id)detailContainerView;
- (id)dismissButton;
- (void)dismissButtonTapped:(id)arg1;
- (void)dismissDetailViewController:(id)arg1;
- (bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;
- (id)initWithPlayer:(id)arg1;
- (id)interactionControllerForDismissal:(id)arg1;
- (id)interactionControllerForPresentation:(id)arg1;
- (id)loadJSNativeViewControllerWithAppContext:(id)arg1;
- (void)nowPlayingItemViewControllerArtworkImageDidChange:(id)arg1;
- (void)nowPlayingItemViewControllerWantsToExitFullScreen:(id)arg1;
- (void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4;
- (id)persistentAnimationLayers;
- (void)playbackProgressScrubber:(id)arg1 didChangeScrubSpeed:(long long)arg2;
- (void)playbackProgressScrubberTrackingDidBegin:(id)arg1;
- (void)playbackProgressScrubberTrackingDidEnd:(id)arg1;
- (id)playbackProgressSliderController;
- (id)playbackProgressSliderView;
- (id)player;
- (void)popoverControllerDidDismissPopover:(id)arg1;
- (long long)preferredInterfaceOrientationForPresentation;
- (bool)prefersStatusBarHidden;
- (id)presentationControllerForPresentedViewController:(id)arg1 presentingViewController:(id)arg2 sourceViewController:(id)arg3;
- (id)presentedDetailViewController;
- (id)presentingViewControllerForLikeBanActionSheetForTransportControlMediaRemoteController:(id)arg1;
- (id)ratingControl;
- (void)ratingDidChangeForRatingControl:(id)arg1;
- (id)secondaryTransportControlMediaRemoteController;
- (id)secondaryTransportControls;
- (void)setAccessoryStyle:(long long)arg1;
- (void)setBackgroundClippingView:(id)arg1;
- (void)setBackgroundView:(id)arg1;
- (void)setClientContext:(id)arg1;
- (void)setVibrantEffectView:(id)arg1;
- (bool)shouldAutorotate;
- (void)showDetailViewController:(id)arg1 sender:(id)arg2;
- (void)showUpNext:(id)arg1;
- (id)skipLimitView;
- (id)statusBarLegibilityGradient;
- (unsigned long long)supportedInterfaceOrientations;
- (id)titlesView;
- (id)trackDownloadButton;
- (void)trackDownloadView:(id)arg1 stateDidChangeToState:(long long)arg2;
- (void)trackDownloadViewWillTransition:(id)arg1;
- (void)traitCollectionDidChange:(id)arg1;
- (id)transportControlMediaRemoteController;
- (id)transportControlMediaRemoteController:(id)arg1 alternateKeyForMediaRemoteNowPlayingInfoKey:(id)arg2;
- (void)transportControlMediaRemoteController:(id)arg1 requestsPushingMediaRemoteCommand:(unsigned int)arg2 withOptions:(id)arg3 shouldLaunchApplication:(bool)arg4;
- (id)transportControls;
- (struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })transportControlsView:(id)arg1 adjustedFrameOfTransportButtonWithControlType:(long long)arg2 proposedFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg3;
- (double)transportControlsView:(id)arg1 adjustedMaximumLayoutWidthOfTransportButtonWithControlType:(long long)arg2;
- (id)transportControlsView:(id)arg1 buttonForControlType:(long long)arg2;
- (struct CGSize { double x1; double x2; })transportControlsView:(id)arg1 defaultTransportButtonSizeWithProposedSize:(struct CGSize { double x1; double x2; })arg2;
- (void)transportControlsView:(id)arg1 longPressBeginOnControlType:(long long)arg2;
- (void)transportControlsView:(id)arg1 longPressEndOnControlType:(long long)arg2;
- (void)transportControlsView:(id)arg1 tapOnControlType:(long long)arg2;
- (void)transportControlsViewDidLayoutSubviews:(id)arg1;
- (id)vibrantEffectView;
- (void)viewDidAppear:(bool)arg1;
- (void)viewDidDisappear:(bool)arg1;
- (void)viewDidLayoutSubviews;
- (void)viewDidLoad;
- (void)viewWillAppear:(bool)arg1;
- (void)viewWillDisappear:(bool)arg1;
- (void)viewWillTransitionToSize:(struct CGSize { double x1; double x2; })arg1 withTransitionCoordinator:(id)arg2;
- (id)volumeSlider;
- (void)volumeSlider:(id)arg1 didSelectRoutesButton:(id)arg2;

@end
