/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/DiagnosticExtensions.framework/DiagnosticExtensions
 */

@interface DEExtension : NSObject {
    NSExtension *__extension;
    bool _allowUserAttachmentSelection;
    NSString *_attachmentsName;
    bool _canEnableLogging;
    bool _canGenerateNewAttachment;
    DEExtensionHostContext *_context;
    NSString *_displayName;
    bool _hasBeenLoaded;
    NSString *_identifier;
    bool _isLoggingEnabled;
    NSString *_loggingConsent;
    NSString *_ownerBundleID;
    NSObject<OS_dispatch_group> *extendInfoGroup;
}

@property(assign,retain) NSExtension * _extension;
@property(assign,readwrite) bool allowUserAttachmentSelection;
@property(assign,retain) NSString * attachmentsName;
@property(assign,readwrite) bool canEnableLogging;
@property(assign,readwrite) bool canGenerateNewAttachment;
@property(assign,retain) NSString * displayName;
@property(assign,readwrite) bool hasBeenLoaded;
@property(assign,retain) NSString * identifier;
@property(assign,readwrite) bool isLoggingEnabled;
@property(assign,retain) NSString * loggingConsent;
@property(assign,retain) NSString * ownerBundleID;

- (void).cxx_destruct;
- (id)_extension;
- (void)_performWithHostContext:(id)arg1;
- (bool)allowUserAttachmentSelection;
- (void)attachmentListWithHandler:(id)arg1;
- (id)attachmentsName;
- (bool)canEnableLogging;
- (bool)canGenerateNewAttachment;
- (id)description;
- (void)disableLoggingWithHandler:(id)arg1;
- (id)displayName;
- (void)enableLoggingWithHandler:(id)arg1;
- (void)endUsingExtension;
- (void)getAttachmentsWithParameters:(id)arg1 andHandler:(id)arg2;
- (bool)hasBeenLoaded;
- (id)identifier;
- (id)initWithNSExtension:(id)arg1;
- (bool)isLoggingEnabled;
- (void)isLoggingEnabledHandler:(id)arg1;
- (void)loadExtendedInfo;
- (id)loggingConsent;
- (id)ownerBundleID;
- (void)setAllowUserAttachmentSelection:(bool)arg1;
- (void)setAttachmentsName:(id)arg1;
- (void)setCanEnableLogging:(bool)arg1;
- (void)setCanGenerateNewAttachment:(bool)arg1;
- (void)setDisplayName:(id)arg1;
- (void)setHasBeenLoaded:(bool)arg1;
- (void)setIdentifier:(id)arg1;
- (void)setIsLoggingEnabled:(bool)arg1;
- (void)setLoggingConsent:(id)arg1;
- (void)setOwnerBundleID:(id)arg1;
- (void)set_extension:(id)arg1;

@end
