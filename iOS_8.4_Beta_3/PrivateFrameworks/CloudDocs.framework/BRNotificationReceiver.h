/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudDocs.framework/CloudDocs
 */

@interface BRNotificationReceiver : NSObject <BRItemNotificationReceiving> {
    unsigned long long _batchingChanges;
    double _batchingDelay;
    <BRNotificationReceiverDelegate> *_delegate;
    int _gatherDones;
    NSObject<OS_dispatch_queue> *_invalidationQueue;
    NSObject<OS_dispatch_queue> *_ipcQueue;
    bool _isNetworkReachable;
    NSMutableDictionary *_itemInTransferByID;
    unsigned long long _lastBatchTime;
    int _networkReachabilityToken;
    BRNotificationQueue *_notifs;
    NSMutableDictionary *_progressObserverByID;
    NSObject<OS_dispatch_queue> *_queue;
    unsigned long long _receivedChanges;
    NSMutableArray *_senders;
    NSObject<OS_dispatch_source> *_source;
    int _suspendCount;
    NSObject<OS_dispatch_source> *_timer;
}

@property(assign,readwrite) unsigned long long batchingChanges;
@property(assign,readwrite) double batchingDelay;
@property(assign,copy) NSString * debugDescription;
@property(assign,retain) <BRNotificationReceiverDelegate> * delegate;
@property(assign,copy) NSString * description;
@property(assign,readonly) unsigned long long hash;
@property(assign,readonly) unsigned long long pendingCount;
@property(assign,readonly) Class superclass;

- (id)_getSender;
- (void)_receiveUpdates:(id)arg1;
- (void)_signalSourceIfNeeded;
- (unsigned long long)batchingChanges;
- (double)batchingDelay;
- (void)dealloc;
- (id)delegate;
- (void)dequeue:(unsigned long long)arg1 block:(id)arg2;
- (void)disableUpdatesFromIPCBeforeStitching;
- (void)enableUpdatesFromIPCAfterStitching;
- (void)finalize;
- (void)flush;
- (id)init;
- (oneway void)invalidate;
- (oneway void)invalidateAndDontNotifyDelegate;
- (void)invalidateAndNotify:(bool)arg1;
- (void)networkDidChangeReachabilityStatusTo:(bool)arg1;
- (unsigned long long)pendingCount;
- (void)receiveStitchingUpdates:(id)arg1;
- (void)receiveUpdates:(id)arg1 logicalExtensions:(id)arg2 physicalExtensions:(id)arg3 reply:(id)arg4;
- (void)resume;
- (void)setBatchingChanges:(unsigned long long)arg1;
- (void)setBatchingDelay:(double)arg1;
- (void)setDelegate:(id)arg1;
- (void)suspend;
- (bool)watchUbiquitousScopes:(id)arg1 bundleID:(id)arg2 predicate:(id)arg3;

@end
