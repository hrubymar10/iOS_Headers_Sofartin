/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/iWorkImport.framework/iWorkImport
 */

@interface TSDMutableTransformGradient : TSDTransformGradient <TSDGradientStopContainer>

@property(assign,readwrite) struct CGSize { double x1; double x2; } baseNaturalSize;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readwrite) struct CGPoint { double x1; double x2; } endPoint;
@property(assign,retain) TSUColor * firstColor;
@property(assign,retain) NSArray * gradientStops;
@property(assign,readwrite) unsigned long long gradientType;
@property(assign,readonly) unsigned long long hash;
@property(assign,readwrite) bool isAdvancedGradient;
@property(assign,retain) TSUColor * lastColor;
@property(assign,readwrite) double opacity;
@property(assign,readwrite) struct CGPoint { double x1; double x2; } startPoint;
@property(assign,readonly) Class superclass;

- (id)copyWithZone:(struct _NSZone { }*)arg1;
- (void)evenlyDistributeStops;
- (void)insertGradientStop:(id)arg1;
- (id)insertStopAtFraction:(double)arg1;
- (id)insertStopAtFraction:(double)arg1 withColor:(id)arg2;
- (void)moveStopAtIndex:(unsigned long long)arg1 toFraction:(double)arg2;
- (void)removeStop:(id)arg1;
- (id)removeStopAtIndex:(unsigned long long)arg1;
- (void)reverseStopOrder;
- (void)setColorOfStopAtIndex:(unsigned long long)arg1 toColor:(id)arg2;
- (void)setEndPoint:(struct CGPoint { double x1; double x2; })arg1 inShapeWithNaturalSize:(struct CGSize { double x1; double x2; })arg2;
- (void)setFirstColor:(id)arg1;
- (void)setGradientAngleInDegrees:(double)arg1;
- (void)setGradientStops:(id)arg1;
- (void)setGradientType:(unsigned long long)arg1;
- (void)setInflectionOfStopAtIndex:(unsigned long long)arg1 toInflection:(double)arg2;
- (void)setLastColor:(id)arg1;
- (void)setStartPoint:(struct CGPoint { double x1; double x2; })arg1 inShapeWithNaturalSize:(struct CGSize { double x1; double x2; })arg2;
- (void)swapStopAtIndex:(unsigned long long)arg1 withStopAtIndex:(unsigned long long)arg2;
- (void)upgradeIfNecessaryWithBaseNaturalSize:(struct CGSize { double x1; double x2; })arg1;

@end
