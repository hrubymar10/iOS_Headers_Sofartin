/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/ChatKit.framework/ChatKit
 */

@interface CKMessageEntryView : UIView <CKAudioRecorderDelegate, CKInlineAudioReplyButtonDelegate, CKJoystickControllerDelegate, CKJoystickGestureRecognizerButtonDelegate, CKMessageEntryContentViewDelegate, CKMessageEntryRecordedAudioViewDelegate> {
    UIButton *_audioButton;
    struct CGSize { 
        double width; 
        double height; 
    } _audioButtonSize;
    CKComposition *_audioComposition;
    CKMessageEntryAudioHintView *_audioHintView;
    CKJoystickController *_audioJoystickController;
    CKJoystickGestureRecognizerButton *_audioJoystickGestureRecognizerButton;
    CKInlineAudioReplyButtonController *_audioReplyButton;
    _UIBackdropView *_backdropView;
    bool _characterCountHidden;
    UILabel *_characterCountLabel;
    struct CGSize { 
        double width; 
        double height; 
    } _characterCountSize;
    bool _composingRecipient;
    UIView *_contentClipView;
    CKMessageEntryContentView *_contentView;
    CKConversation *_conversation;
    _UITextFieldRoundedRectBackgroundViewNeue *_coverView;
    <CKMessageEntryViewDelegate> *_delegate;
    UIButton *_deleteAudioRecordingButton;
    struct CGSize { 
        double width; 
        double height; 
    } _deleteAudioRecordingButtonSize;
    unsigned long long _displayMode;
    UIView *_dividerLine;
    bool _failedRecipients;
    bool _keyboardVisible;
    UIView *_knockoutCoverView;
    bool _performingJoystickSendAction;
    UIButton *_photoButton;
    struct CGSize { 
        double width; 
        double height; 
    } _photoButtonSize;
    CKMessageEntryRecordedAudioView *_recordedAudioView;
    CKAudioRecorder *_recorder;
    UIButton *_sendButton;
    struct CGSize { 
        double width; 
        double height; 
    } _sendButtonSize;
    struct UIEdgeInsets { 
        double top; 
        double left; 
        double bottom; 
        double right; 
    } _sendTextAlignmentInsets;
    bool _sendingMessage;
    bool _shouldKnockoutCoverView;
    bool _shouldShowCharacterCount;
    bool _shouldShowPhotoButton;
    bool _shouldShowSendButton;
    bool _shouldShowSubject;
    CAMShutterButton *_shutterButton;
    bool _unreachableEmergencyRecipient;
    bool _usesDeleteAudioRecordingButton;
    <CKJoystickGestureRecognizerButtonDelegate> *_videoDelegate;
    CKJoystickGestureRecognizerButton *_videoJoystickGestureRecognizerButton;
    CKMessageEntryWaveformView *_waveformView;
    struct CGSize { 
        double width; 
        double height; 
    } _waveformViewSize;
}

@property (nonatomic, retain) UIButton *audioButton;
@property (nonatomic) struct CGSize { double x1; double x2; } audioButtonSize;
@property (nonatomic, retain) CKComposition *audioComposition;
@property (nonatomic, retain) CKMessageEntryAudioHintView *audioHintView;
@property (nonatomic, retain) CKJoystickController *audioJoystickController;
@property (nonatomic, retain) CKJoystickGestureRecognizerButton *audioJoystickGestureRecognizerButton;
@property (nonatomic, retain) CKInlineAudioReplyButtonController *audioReplyButton;
@property (nonatomic, retain) _UIBackdropView *backdropView;
@property (getter=isCharacterCountHidden, nonatomic) bool characterCountHidden;
@property (nonatomic, retain) UILabel *characterCountLabel;
@property (nonatomic) struct CGSize { double x1; double x2; } characterCountSize;
@property (getter=isComposingRecipient, nonatomic) bool composingRecipient;
@property (nonatomic, retain) CKComposition *composition;
@property (nonatomic, readonly, retain) CKComposition *compositionWithAcceptedAutocorrection;
@property (nonatomic, retain) UIView *contentClipView;
@property (nonatomic, retain) CKMessageEntryContentView *contentView;
@property (nonatomic, retain) CKConversation *conversation;
@property (nonatomic, retain) _UITextFieldRoundedRectBackgroundViewNeue *coverView;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic) <CKMessageEntryViewDelegate> *delegate;
@property (nonatomic, retain) UIButton *deleteAudioRecordingButton;
@property (nonatomic) struct CGSize { double x1; double x2; } deleteAudioRecordingButtonSize;
@property (readonly, copy) NSString *description;
@property (nonatomic) unsigned long long displayMode;
@property (nonatomic, retain) UIView *dividerLine;
@property (getter=hasFailedRecipients, nonatomic) bool failedRecipients;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) bool isAudioJoystickVisible;
@property (getter=isKeyboardVisible, nonatomic) bool keyboardVisible;
@property (nonatomic, retain) UIView *knockoutCoverView;
@property (getter=isPerformingJoystickSendAction, nonatomic) bool performingJoystickSendAction;
@property (nonatomic, retain) UIButton *photoButton;
@property (nonatomic) struct CGSize { double x1; double x2; } photoButtonSize;
@property (nonatomic, retain) CKMessageEntryRecordedAudioView *recordedAudioView;
@property (nonatomic, retain) CKAudioRecorder *recorder;
@property (getter=isRecording, nonatomic, readonly) bool recording;
@property (nonatomic, retain) UIButton *sendButton;
@property (nonatomic) struct CGSize { double x1; double x2; } sendButtonSize;
@property (nonatomic) struct UIEdgeInsets { double x1; double x2; double x3; double x4; } sendTextAlignmentInsets;
@property (getter=isSendingMessage, nonatomic) bool sendingMessage;
@property (nonatomic) bool shouldKnockoutCoverView;
@property (nonatomic) bool shouldShowCharacterCount;
@property (nonatomic) bool shouldShowPhotoButton;
@property (nonatomic) bool shouldShowSendButton;
@property (nonatomic) bool shouldShowSubject;
@property (nonatomic, retain) CAMShutterButton *shutterButton;
@property (readonly) Class superclass;
@property (getter=hasUnreachableEmergencyRecipient, nonatomic) bool unreachableEmergencyRecipient;
@property (nonatomic) bool usesDeleteAudioRecordingButton;
@property (nonatomic) <CKJoystickGestureRecognizerButtonDelegate> *videoDelegate;
@property (nonatomic, retain) CKJoystickGestureRecognizerButton *videoJoystickGestureRecognizerButton;
@property (nonatomic, retain) CKMessageEntryWaveformView *waveformView;
@property (nonatomic) struct CGSize { double x1; double x2; } waveformViewSize;

+ (id)audioButtonImage;
+ (double)contentViewPortraitWidth:(bool)arg1;
+ (double)coverViewPortraitWidth:(bool)arg1;

- (double)_accessoryViewFadeDuration;
- (void)_toggleAudioPlaybackJoystickIsPlaying:(bool)arg1;
- (id)audioButton;
- (struct CGSize { double x1; double x2; })audioButtonSize;
- (id)audioComposition;
- (id)audioHintView;
- (id)audioJoystickController;
- (id)audioJoystickGestureRecognizerButton;
- (void)audioRecorderDidUpdateAveragePower:(float)arg1;
- (void)audioRecorderRecordingDidChange:(id)arg1;
- (void)audioRecorderRecordingDidFail:(id)arg1;
- (id)audioReplyButton;
- (void)audioReplyButtonCancel:(id)arg1;
- (void)audioReplyButtonStart:(id)arg1;
- (void)audioReplyButtonStop:(id)arg1;
- (id)backdropView;
- (void)cancelRecordingAndShowAudioHint;
- (id)characterCountLabel;
- (struct CGSize { double x1; double x2; })characterCountSize;
- (void)clearResponseContext;
- (id)composition;
- (id)compositionWithAcceptedAutocorrection;
- (void)configureForDisplayMode:(unsigned long long)arg1;
- (id)contentClipView;
- (id)contentView;
- (id)conversation;
- (void)conversationPreferredServiceChanged:(id)arg1;
- (id)coverView;
- (void)dealloc;
- (id)delegate;
- (id)deleteAudioRecordingButton;
- (struct CGSize { double x1; double x2; })deleteAudioRecordingButtonSize;
- (unsigned long long)displayMode;
- (id)dividerLine;
- (bool)hasFailedRecipients;
- (bool)hasUnreachableEmergencyRecipient;
- (id)hitTest:(struct CGPoint { double x1; double x2; })arg1 withEvent:(id)arg2;
- (id)initWithFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1 shouldShowSendButton:(bool)arg2 shouldShowSubject:(bool)arg3 shouldShowPhotoButton:(bool)arg4 shouldShowCharacterCount:(bool)arg5;
- (bool)isAudioJoystickVisible;
- (bool)isCharacterCountHidden;
- (bool)isComposingRecipient;
- (bool)isKeyboardVisible;
- (bool)isPerformingJoystickSendAction;
- (bool)isRecording;
- (bool)isSendingMessage;
- (void)joystickCancelAction:(id)arg1;
- (void)joystickControllerDidDismissJoystick:(id)arg1;
- (void)joystickControllerWillDismissJoystick:(id)arg1 animated:(bool)arg2;
- (void)joystickControllerWillExpandJoystick:(id)arg1 animated:(bool)arg2;
- (void)joystickControllerWillPresentJoystick:(id)arg1 animated:(bool)arg2;
- (void)joystickControllerWillShrinkJoystick:(id)arg1 animated:(bool)arg2;
- (void)joystickGestureRecognizerButtonDidTouchDownButton:(id)arg1;
- (void)joystickGestureRecognizerButtonDidTouchUpInsideButton:(id)arg1;
- (void)joystickGestureRecognizerButtonGestureDidBegin:(id)arg1;
- (void)joystickGestureRecognizerButtonGestureDidEnd:(id)arg1;
- (bool)joystickGestureRecognizerButtonIsShowingHint:(id)arg1;
- (bool)joystickGestureRecognizerButtonShouldRecognizeGesture:(id)arg1;
- (bool)joystickGestureRecognizerButtonShouldShowHint:(id)arg1;
- (void)joystickGestureRecognizerButtonShowHint:(id)arg1;
- (void)joystickPlaybackButtonUpAction:(id)arg1;
- (void)joystickSendAction:(id)arg1;
- (void)joystickShutterButtonDownAction:(id)arg1;
- (void)joystickShutterButtonUpAction:(id)arg1;
- (id)knockoutCoverView;
- (void)layoutSubviews;
- (void)loadRecordedAudioViewsIfNeeded;
- (bool)messageEntryContentView:(id)arg1 shouldInsertMediaObjects:(id)arg2;
- (void)messageEntryContentViewDidBeginEditing:(id)arg1;
- (void)messageEntryContentViewDidChange:(id)arg1;
- (void)messageEntryContentViewDidEndEditing:(id)arg1;
- (bool)messageEntryContentViewShouldBeginEditing:(id)arg1;
- (void)messageEntryRecordedAudioView:(id)arg1 mediaObjectDidFinishPlaying:(id)arg2;
- (void)messageReceived:(id)arg1;
- (id)photoButton;
- (bool)photoButtonEnabled;
- (struct CGSize { double x1; double x2; })photoButtonSize;
- (double)placeholderHeight;
- (void)presentAudioJoystick;
- (id)recordedAudioView;
- (id)recorder;
- (id)sendButton;
- (bool)sendButtonEnabled;
- (struct CGSize { double x1; double x2; })sendButtonSize;
- (struct UIEdgeInsets { double x1; double x2; double x3; double x4; })sendTextAlignmentInsets;
- (void)setAudioButton:(id)arg1;
- (void)setAudioButtonSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setAudioComposition:(id)arg1;
- (void)setAudioHintView:(id)arg1;
- (void)setAudioJoystickController:(id)arg1;
- (void)setAudioJoystickGestureRecognizerButton:(id)arg1;
- (void)setAudioReplyButton:(id)arg1;
- (void)setBackdropView:(id)arg1;
- (void)setCharacterCountHidden:(bool)arg1;
- (void)setCharacterCountLabel:(id)arg1;
- (void)setCharacterCountSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setComposingRecipient:(bool)arg1;
- (void)setComposition:(id)arg1;
- (void)setContentClipView:(id)arg1;
- (void)setContentView:(id)arg1;
- (void)setConversation:(id)arg1;
- (void)setCoverView:(id)arg1;
- (void)setDelegate:(id)arg1;
- (void)setDeleteAudioRecordingButton:(id)arg1;
- (void)setDeleteAudioRecordingButtonSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setDisplayMode:(unsigned long long)arg1;
- (void)setDividerLine:(id)arg1;
- (void)setFailedRecipients:(bool)arg1;
- (void)setFrame:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (void)setKeyboardVisible:(bool)arg1;
- (void)setKnockoutCoverView:(id)arg1;
- (void)setPerformingJoystickSendAction:(bool)arg1;
- (void)setPhotoButton:(id)arg1;
- (void)setPhotoButtonSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setRecordedAudioView:(id)arg1;
- (void)setRecorder:(id)arg1;
- (void)setSendButton:(id)arg1;
- (void)setSendButtonSize:(struct CGSize { double x1; double x2; })arg1;
- (void)setSendTextAlignmentInsets:(struct UIEdgeInsets { double x1; double x2; double x3; double x4; })arg1;
- (void)setSendingMessage:(bool)arg1;
- (void)setShouldKnockoutCoverView:(bool)arg1;
- (void)setShouldShowCharacterCount:(bool)arg1;
- (void)setShouldShowPhotoButton:(bool)arg1;
- (void)setShouldShowSendButton:(bool)arg1;
- (void)setShouldShowSubject:(bool)arg1;
- (void)setShutterButton:(id)arg1;
- (void)setUnreachableEmergencyRecipient:(bool)arg1;
- (void)setUsesDeleteAudioRecordingButton:(bool)arg1;
- (void)setVideoDelegate:(id)arg1;
- (void)setVideoJoystickGestureRecognizerButton:(id)arg1;
- (void)setWaveformView:(id)arg1;
- (void)setWaveformViewSize:(struct CGSize { double x1; double x2; })arg1;
- (bool)shouldKnockoutCoverView;
- (bool)shouldRecordForService:(id)arg1;
- (bool)shouldShowCharacterCount;
- (bool)shouldShowPhotoButton;
- (bool)shouldShowSendButton;
- (bool)shouldShowSubject;
- (id)shutterButton;
- (struct CGSize { double x1; double x2; })sizeThatFits:(struct CGSize { double x1; double x2; })arg1;
- (void)startRecordingForRaiseGesture;
- (void)stopRecordingForRaiseGestureWithFailure:(bool)arg1;
- (void)touchUpInsideDeleteAudioRecordingButton:(id)arg1;
- (void)touchUpInsideSendButton:(id)arg1;
- (void)updateEntryView;
- (void)updateResponseContext;
- (bool)usesDeleteAudioRecordingButton;
- (id)videoDelegate;
- (id)videoJoystickGestureRecognizerButton;
- (id)waveformView;
- (struct CGSize { double x1; double x2; })waveformViewSize;

@end
