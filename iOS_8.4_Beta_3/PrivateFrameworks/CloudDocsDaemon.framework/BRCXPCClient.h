/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CloudDocsDaemon.framework/CloudDocsDaemon
 */

@interface BRCXPCClient : NSObject <BRCForegroundClient, BRCProcessMonitorDelegate> {
    NSOperationQueue *_acceptOperationQueue;
    NSString *_applicationIdenfier;
    int _clientPid;
    NSXPCConnection *_connection;
    NSCountedSet *_containers;
    NSString *_debugIdentifier;
    NSString *_defaultContainerID;
    bool _dieOnInvalidate;
    NSSet *_entitledContainerIDs;
    bool _entitlementsCached;
    bool _hasCloudServices;
    bool _invalidated;
    bool _isForeground;
    bool _isProxyEntitled;
    bool _isSharingPrivateInterfaceEntitled;
    bool _isUsingUbiquity;
    NSMutableDictionary *_runningAcceptOperations;
    BRCAccountSession *_session;
}

@property (nonatomic, readonly) NSString *bundleID;
@property (nonatomic, readonly) NSXPCConnection *connection;
@property (readonly, copy) NSString *debugDescription;
@property (nonatomic, readonly) NSString *defaultContainerID;
@property (readonly, copy) NSString *description;
@property (nonatomic, readonly) bool dieOnInvalidate;
@property (nonatomic, readonly) NSSet *entitledContainerIDs;
@property (nonatomic, readonly) bool hasPrivateSharingInterfaceEntitlement;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) NSString *identifier;
@property (nonatomic) bool isUsingUbiquity;
@property (nonatomic, retain) BRCAccountSession *session;
@property (readonly) Class superclass;

- (void).cxx_destruct;
- (void)__cacheEntitlements;
- (void)_addExternalDocumentReferenceTo:(id)arg1 underParent:(id)arg2 forceReparent:(bool)arg3 reply:(id)arg4;
- (bool)_canCreateContainerWithID:(id)arg1 error:(id*)arg2;
- (BOOL)_cloudEnabledPrecheckStatusForContainerIDs:(id)arg1 bundleID:(id)arg2;
- (BOOL)_cloudEnabledStatusForContainerIDs:(id)arg1 bundleID:(id)arg2 auditToken:(struct { unsigned int x1[8]; })arg3;
- (bool)_cloudSyncTCCDisabledForContainerMeta:(id)arg1 disabledBundleIDs:(id)arg2;
- (id)_containerIDsForPid:(int)arg1;
- (id)_disabledBundleIDs;
- (bool)_entitlementBooleanValueForKey:(id)arg1;
- (id)_entitlementValueForKey:(id)arg1 ofClass:(Class)arg2;
- (bool)_hasAccessToContainerID:(id)arg1 error:(id*)arg2;
- (bool)_hasPrivateIPCEntitlementForSelector:(SEL)arg1 error:(id*)arg2;
- (bool)_isContainerAccessAllowed;
- (bool)_isContainerProxyEntitled;
- (bool)_isContainerProxyWithError:(id*)arg1;
- (void)_setupContainerID:(id)arg1 andSendReply:(id)arg2;
- (void)_startDownloadItemsAtURLs:(id)arg1 pos:(unsigned long long)arg2 options:(unsigned long long)arg3 error:(id)arg4 reply:(id)arg5;
- (void)_startMonitoringProcessIfNeeded;
- (void)_stopMonitoringProcess;
- (void)accessLogicalOrPhysicalURL:(id)arg1 needsWrite:(bool)arg2 asynchronously:(bool)arg3 handler:(id)arg4;
- (void)addContainer:(id)arg1;
- (id)bundleID;
- (bool)canAccessPath:(const char *)arg1 needsWrite:(bool)arg2;
- (bool)canAccessPhysicalURL:(id)arg1;
- (BOOL)cloudEnabledStatus;
- (BOOL)cloudEnabledStatusForPID:(int)arg1;
- (id)connection;
- (id)copyContainerIDsForPid:(int)arg1 error:(id*)arg2;
- (id)defaultContainerID;
- (id)description;
- (bool)dieOnInvalidate;
- (id)entitledContainerIDs;
- (bool)hasPrivateSharingInterfaceEntitlement;
- (id)identifier;
- (id)initWithConnection:(id)arg1 session:(id)arg2;
- (void)invalidate;
- (bool)isSandboxed;
- (bool)isUsingUbiquity;
- (id)issueContainerExtensionForURL:(id)arg1 error:(id*)arg2;
- (void)process:(int)arg1 didBecomeForeground:(bool)arg2;
- (void)removeContainer:(id)arg1;
- (id)session;
- (void)setIsUsingUbiquity:(bool)arg1;
- (void)setSession:(id)arg1;
- (id)setupPrivateContainer:(id)arg1 root:(id)arg2 error:(id*)arg3;

@end
