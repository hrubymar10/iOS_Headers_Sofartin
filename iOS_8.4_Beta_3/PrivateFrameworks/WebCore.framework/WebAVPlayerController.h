/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WebCore.framework/WebCore
 */

@interface WebAVPlayerController : NSObject <AVPlayerViewControllerDelegate> {
    NSArray *_audioMediaSelectionOptions;
    bool _canPause;
    bool _canPlay;
    bool _canScanBackward;
    bool _canSeek;
    bool _canTogglePlayback;
    struct CGSize { 
        double width; 
        double height; 
    } _contentDimensions;
    double _contentDuration;
    double _contentDurationWithinEndTimes;
    WebAVMediaSelectionOption *_currentAudioMediaSelectionOption;
    WebAVMediaSelectionOption *_currentLegibleMediaSelectionOption;
    struct WebVideoFullscreenModel { int (**x1)(); } *_delegate;
    bool _externalPlaybackActive;
    NSString *_externalPlaybackAirPlayDeviceLocalizedName;
    long long _externalPlaybackType;
    bool _hasEnabledAudio;
    bool _hasEnabledVideo;
    NSArray *_legibleMediaSelectionOptions;
    NSArray *_loadedTimeRanges;
    double _maxTime;
    double _minTime;
    AVPlayerController *_playerControllerProxy;
    double _rate;
    NSArray *_seekableTimeRanges;
    long long _status;
    AVValueTiming *_timing;
}

@property(assign,retain) NSArray * audioMediaSelectionOptions;
@property(assign,readwrite) bool canPause;
@property(assign,readwrite) bool canPlay;
@property(assign,readwrite) bool canScanBackward;
@property(assign,readonly) bool canScanForward;
@property(assign,readwrite) bool canSeek;
@property(assign,readonly) bool canSeekToBeginning;
@property(assign,readonly) bool canSeekToEnd;
@property(assign,readwrite) bool canTogglePlayback;
@property(assign,readwrite) struct CGSize { double x1; double x2; } contentDimensions;
@property(assign,readwrite) double contentDuration;
@property(assign,readwrite) double contentDurationWithinEndTimes;
@property(assign,retain) WebAVMediaSelectionOption * currentAudioMediaSelectionOption;
@property(assign,retain) WebAVMediaSelectionOption * currentLegibleMediaSelectionOption;
@property(assign,copy) NSString * debugDescription;
@property(assign,readwrite) struct WebVideoFullscreenModel { int (**x1)(); }* delegate;
@property(assign,copy) NSString * description;
@property(getter=isExternalPlaybackActive,assign,readwrite) bool externalPlaybackActive;
@property(assign,retain) NSString * externalPlaybackAirPlayDeviceLocalizedName;
@property(assign,readwrite) long long externalPlaybackType;
@property(assign,readonly) bool hasAudioMediaSelectionOptions;
@property(assign,readwrite) bool hasEnabledAudio;
@property(assign,readwrite) bool hasEnabledVideo;
@property(assign,readonly) bool hasLegibleMediaSelectionOptions;
@property(assign,readonly) bool hasMediaSelectionOptions;
@property(assign,readonly) unsigned long long hash;
@property(assign,retain) NSArray * legibleMediaSelectionOptions;
@property(assign,retain) NSArray * loadedTimeRanges;
@property(assign,readwrite) double maxTime;
@property(assign,readwrite) double minTime;
@property(assign,retain) AVPlayerController * playerControllerProxy;
@property(getter=isPlaying,assign,readwrite) bool playing;
@property(getter=isPlayingOnExternalScreen,assign,readonly) bool playingOnExternalScreen;
@property(assign,readwrite) double rate;
@property(assign,retain) NSArray * seekableTimeRanges;
@property(assign,readwrite) long long status;
@property(assign,readonly) Class superclass;
@property(assign,retain) AVValueTiming * timing;

+ (id)keyPathsForValuesAffectingCanScanForward;
+ (id)keyPathsForValuesAffectingCanSeekToBeginning;
+ (id)keyPathsForValuesAffectingCanSeekToEnd;
+ (id)keyPathsForValuesAffectingHasAudioMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingHasLegibleMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingHasLiveStreamingContent;
+ (id)keyPathsForValuesAffectingHasMediaSelectionOptions;
+ (id)keyPathsForValuesAffectingPlaying;
+ (id)keyPathsForValuesAffectingPlayingOnExternalScreen;

- (id).cxx_construct;
- (id)audioMediaSelectionOptions;
- (void)beginScanningBackward:(id)arg1;
- (void)beginScanningForward:(id)arg1;
- (void)beginScrubbing:(id)arg1;
- (bool)canPause;
- (bool)canPlay;
- (bool)canScanBackward;
- (bool)canScanForward;
- (bool)canSeek;
- (bool)canSeekToBeginning;
- (bool)canSeekToEnd;
- (bool)canTogglePlayback;
- (struct CGSize { double x1; double x2; })contentDimensions;
- (double)contentDuration;
- (double)contentDurationWithinEndTimes;
- (id)currentAudioMediaSelectionOption;
- (id)currentLegibleMediaSelectionOption;
- (void)dealloc;
- (struct WebVideoFullscreenModel { int (**x1)(); }*)delegate;
- (void)endScanningBackward:(id)arg1;
- (void)endScanningForward:(id)arg1;
- (void)endScrubbing:(id)arg1;
- (id)externalPlaybackAirPlayDeviceLocalizedName;
- (long long)externalPlaybackType;
- (id)forwardingTargetForSelector:(SEL)arg1;
- (void)gotoEndOfSeekableRanges:(id)arg1;
- (bool)hasAudioMediaSelectionOptions;
- (bool)hasEnabledAudio;
- (bool)hasEnabledVideo;
- (bool)hasLegibleMediaSelectionOptions;
- (bool)hasLiveStreamingContent;
- (bool)hasMediaSelectionOptions;
- (id)init;
- (bool)isExternalPlaybackActive;
- (bool)isPlaying;
- (bool)isPlayingOnExternalScreen;
- (id)legibleMediaSelectionOptions;
- (id)loadedTimeRanges;
- (double)maxTime;
- (double)minTime;
- (void)pause:(id)arg1;
- (void)play:(id)arg1;
- (id)playerControllerProxy;
- (bool)playerViewController:(id)arg1 shouldExitFullScreenWithReason:(long long)arg2;
- (double)rate;
- (void)resetState;
- (void)seekChapterBackward:(id)arg1;
- (void)seekChapterForward:(id)arg1;
- (void)seekToBeginning:(id)arg1;
- (void)seekToEnd:(id)arg1;
- (void)seekToTime:(double)arg1;
- (id)seekableTimeRanges;
- (void)setAudioMediaSelectionOptions:(id)arg1;
- (void)setCanPause:(bool)arg1;
- (void)setCanPlay:(bool)arg1;
- (void)setCanScanBackward:(bool)arg1;
- (void)setCanSeek:(bool)arg1;
- (void)setCanTogglePlayback:(bool)arg1;
- (void)setContentDimensions:(struct CGSize { double x1; double x2; })arg1;
- (void)setContentDuration:(double)arg1;
- (void)setContentDurationWithinEndTimes:(double)arg1;
- (void)setCurrentAudioMediaSelectionOption:(id)arg1;
- (void)setCurrentLegibleMediaSelectionOption:(id)arg1;
- (void)setDelegate:(struct WebVideoFullscreenModel { int (**x1)(); }*)arg1;
- (void)setExternalPlaybackActive:(bool)arg1;
- (void)setExternalPlaybackAirPlayDeviceLocalizedName:(id)arg1;
- (void)setExternalPlaybackType:(long long)arg1;
- (void)setHasEnabledAudio:(bool)arg1;
- (void)setHasEnabledVideo:(bool)arg1;
- (void)setLegibleMediaSelectionOptions:(id)arg1;
- (void)setLoadedTimeRanges:(id)arg1;
- (void)setMaxTime:(double)arg1;
- (void)setMinTime:(double)arg1;
- (void)setPlayerControllerProxy:(id)arg1;
- (void)setPlaying:(bool)arg1;
- (void)setRate:(double)arg1;
- (void)setSeekableTimeRanges:(id)arg1;
- (void)setStatus:(long long)arg1;
- (void)setTiming:(id)arg1;
- (void)skipBackwardThirtySeconds:(id)arg1;
- (long long)status;
- (id)timing;
- (void)togglePlayback:(id)arg1;

@end
