/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/OfficeImport.framework/OfficeImport
 */

@interface PBReader : OCBReader {
    const void *mBuffer;
    struct PptObjectFactory { int (**x1)(); struct PptEshObjectFactory {} *x2; } *mPptObjectFactory;
}

@property (nonatomic, readonly) struct PptBinaryReader { int (**x1)(); int (**x2)(); struct EshObjectFactory {} *x3; int (**x4)(); struct __sFILE {} *x5; struct SsrwOORootStorage { struct _Storage {} *x_6_1_1; unsigned short x_6_1_2[36]; struct _RootStorage {} *x_6_1_3; } x6; struct SsrwOOStorage {} *x7; struct SsrwOOStorage {} *x8; struct SsrwOOStream {} *x9; struct SsrwOOStream {} *x10; int x11; bool x12; struct PptEshReader {} *x13; struct PptEshReader {} *x14; struct PptParserVisitor {} *x15; struct PptPersistDir {} *x16; struct EshHeader {} *x17; struct EshObject {} *x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; /* Warning: unhandled struct encoding: '{ChMap<unsigned int' */ struct x25; void*x26; void*x27; void*x28; void*x29; void*x30; void*x31; void*x32; void*x33; void*x34; void*x35; void*x36; void*x37; void*x38; void*x39; void*x40; void*x41; void*x42; void*x43; void*x44; void*x45; void*x46; void*x47; void*x48; void*x49; void*x50; void*x51; void*x52; void*x53; void*x54; long x55; double x56; void*x57; const unsigned short x58; int x59; void*x60; void*x61; SEL x62; union { int x_63_1_1; in void*x_63_1_2; } x63; void*x64; const void*x65; void*x66; void*x67; void*x68; void*x69; void*x70; union { int x_71_1_1; in void*x_71_1_2; } x71; const void*x72; void*x73; double x74; void*x75; long x76; void*x77; BOOL x78; void*x79; void*x80; out long x81; double x82; void*x83; const void*x84; void*x85; void*x86; void*x87; SEL x88; union { int x_89_1_1; in void*x_89_1_2; } x89; void*x90; const void*x91; void*x92; void*x93; void*x94; void*x95; void*x96; void*x97; const unsigned int x98; double x99; SEL x100; union { int x_101_1_1; in void*x_101_1_2; } x101; void*x102; const void*x103; void*x104; void*x105; void*x106; void*x107; void*x108; void*x109; void*x110; void*x111; void*x112; void*x113; void*x114; void*x115; void*x116; void*x117; void*x118; void*x119; void*x120; void*x121; void*x122; void*x123; void*x124; void*x125; void*x126; long x127; int x128; double x129; void*x130; void*x131; out long x132; double x133; void*x134; const SEL x135; union { int x_136_1_1; double x_136_1_2; } x136; void*x137; const void*x138; void*x139; void*x140; void*x141; void*x142; in void*x143; double x144; void*x145; int x146; in void*x147; void*x148; void*x149; void*x150; void*x151; void*x152; void*x153; void*x154; void*x155; void*x156; void*x157; SEL x158; void*x159; void*x160; void*x161; void*x162; void*x163; void*x164; void*x165; void*x166; void*x167; void*x168; void*x169; void*x170; void*x171; void*x172; void*x173; void*x174; void*x175; void*x176; void*x177; void*x178; void*x179; void*x180; BOOL x181; void*x182; out void*x183; in void*x184; short x185; void*x186; void*x187; void*x188; void*x189; void*x190; short x191; void*x192; void*x193; void*x194; const void*x195; void*x196; void*x197; BOOL x198; void*x199; void*x200; void*x201; void*x202; void*x203; void*x204; void*x205; long x206; void*x207; unsigned char x208; void*x209; void*x210; void*x211; void*x212; void*x213; const void*x214; void*x215; void*x216; unsigned long x217; void*x218; int x219; void*x220; in void*x221; void*x222; void*x223; unsigned short x224; void*x225; void*x226; void*x227; void*x228; void*x229; long x230; void*x231; void*x232; void*x233; void*x234; void*x235; struct x236; void*x237; void*x238; void*x239; int x240; void*x241; in void*x242; void*x243; void*x244; void*x245; void*x246; union x247; void*x248; char *x249; void*x250; char *x251; void*x252; void*x253; void*x254; void*x255; void*x256; void*x257; void*x258; union x259; void*x260; void*x261; void*x262; void*x263; void*x264; void*x265; void*x266; short x267; void*x268; void*x269; void*x270; const void*x271; void*x272; void*x273; BOOL x274; void*x275; void*x276; void*x277; void*x278; void*x279; unsigned char x280; void*x281; short x282; void*x283; unsigned char x284; void*x285; out void*x286; long x287; void*x288; out void*x289; void*x290; void*x291; const void*x292; void*x293; void*x294; struct x295; void*x296; void*x297; void*x298; void*x299; void*x300; in void*x301; short x302; void*x303; int x304; void*x305; void*x306; void*x307; in void*x308; void*x309; void*x310; double x311; void*x312; void*x313; void*x314; short x315; void*x316; void*x317; void*x318; out void*x319; const void*x320; void*x321; void*x322; void*x323; void*x324; void*x325; void*x326; void*x327; void*x328; void*x329; void*x330; void*x331; void*x332; void*x333; void*x334; void*x335; void*x336; void*x337; void*x338; void*x339; void*x340; void*x341; void*x342; void*x343; void*x344; in void*x345; short x346; void*x347; int x348; void*x349; void*x350; void*x351; in void*x352; void*x353; void*x354; double x355; void*x356; void*x357; void*x358; short x359; void*x360; void*x361; void*x362; out void*x363; const void*x364; void*x365; void*x366; void*x367; void*x368; void*x369; void*x370; void*x371; void*x372; void*x373; void*x374; void*x375; void*x376; void*x377; void*x378; void*x379; void*x380; void*x381; void*x382; void*x383; void*x384; void*x385; void*x386; void*x387; void*x388; in void*x389; short x390; void*x391; int x392; void*x393; void*x394; void*x395; in void*x396; void*x397; void*x398; double x399; void*x400; void*x401; void*x402; short x403; void*x404; void*x405; void*x406; out void*x407; const void*x408; void*x409; void*x410; void*x411; void*x412; void*x413; void*x414; void*x415; void*x416; void*x417; void*x418; void*x419; void*x420; void*x421; void*x422; void*x423; void*x424; void*x425; void*x426; void*x427; void*x428; void*x429; void*x430; void*x431; void*x432; in void*x433; short x434; void*x435; int x436; void*x437; void*x438; void*x439; in void*x440; void*x441; void*x442; double x443; void*x444; void*x445; void*x446; short x447; void*x448; void*x449; void*x450; out void*x451; const void*x452; void*x453; void*x454; void*x455; void*x456; void*x457; void*x458; void*x459; void*x460; void*x461; void*x462; void*x463; void*x464; void*x465; void*x466; void*x467; void*x468; void*x469; void*x470; void*x471; void*x472; void*x473; void*x474; }*pptReader; /* unknown property attribute:  EscherObjectEnums>}III}B} */

- (struct OCCBinaryStreamer { int (**x1)(); struct OCCCryptoKey {} *x2; char *x3; }*)allocBinaryStreamerWithCryptoKey:(struct OCCCryptoKey { }*)arg1 baseOutputFilenameInUTF8:(const char *)arg2;
- (void)dealloc;
- (struct OCCEncryptionInfoReader { int (**x1)(); }*)encryptionInfoReader;
- (id)initWithCancelDelegate:(id)arg1 tracing:(id)arg2;
- (struct PptBinaryReader { int (**x1)(); int (**x2)(); struct EshObjectFactory {} *x3; int (**x4)(); struct __sFILE {} *x5; struct SsrwOORootStorage { struct _Storage {} *x_6_1_1; unsigned short x_6_1_2[36]; struct _RootStorage {} *x_6_1_3; } x6; struct SsrwOOStorage {} *x7; struct SsrwOOStorage {} *x8; struct SsrwOOStream {} *x9; struct SsrwOOStream {} *x10; int x11; bool x12; struct PptEshReader {} *x13; struct PptEshReader {} *x14; struct PptParserVisitor {} *x15; struct PptPersistDir {} *x16; struct EshHeader {} *x17; struct EshObject {} *x18; unsigned int x19; unsigned int x20; unsigned int x21; unsigned int x22; unsigned int x23; unsigned int x24; struct ChMap<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int> > { struct map<unsigned int, PptBinaryReader::SKIP_CONDITIONS, CsLess<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, PptBinaryReader::SKIP_CONDITIONS> > > { struct __tree<std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, CsLess<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS> > > { struct __tree_node<std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, void *> {} *x_1_3_1; struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *> *>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, void *> > > { struct __tree_end_node<std::__1::__tree_node_base<void *> *> { struct __tree_node_base<void *> {} *x_1_5_1; } x_2_4_1; } x_1_3_2; struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, PptBinaryReader::SKIP_CONDITIONS>, CsLess<unsigned int>, true> > { unsigned long long x_3_4_1; } x_1_3_3; } x_1_2_1; } x_25_1_1; } x25; struct PptObjectFactory {} *x26; struct EshMark {} *x27; int x28; struct ChVector<ChPair<unsigned int, EscherObjectEnums> > { struct ChPair<unsigned int, EscherObjectEnums> {} *x_29_1_1; struct ChPair<unsigned int, EscherObjectEnums> {} *x_29_1_2; unsigned int x_29_1_3; unsigned int x_29_1_4; unsigned int x_29_1_5; } x29; bool x30; }*)pptReader;
- (id)read;
- (bool)start;

@end
