/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/CoreHAP.framework/CoreHAP
 */

@interface HAPSystemKeychainStore : NSObject <HAPKeyStore> {
    NSString *_activeControllerIdentifier;
    NSObject<OS_dispatch_queue> *_queue;
}

@property (nonatomic, retain) NSString *activeControllerIdentifier;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) NSObject<OS_dispatch_queue> *queue;
@property (readonly) Class superclass;

+ (id)allocWithZone:(struct _NSZone { }*)arg1;
+ (id)systemStore;

- (void).cxx_destruct;
- (int)_addKeychainItem:(id)arg1;
- (int)_createControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 username:(id*)arg3;
- (int)_createMetadataSecretKey:(id*)arg1;
- (int)_deleteAllPeripheralIdentifiers;
- (int)_deletePeripheralIdentifierForAccessoryName:(id)arg1;
- (bool)_getAllAvailableControllerPublicKeys:(id*)arg1 secretKeys:(id*)arg2 userNames:(id*)arg3;
- (int)_getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 username:(id*)arg3;
- (id)_getKeychainItemsForAccessGroup:(id)arg1 type:(id)arg2 account:(id)arg3 shouldReturnData:(bool)arg4 error:(int*)arg5;
- (int)_getMetadataSecretKey:(id*)arg1;
- (int)_getPeripheralIdentifier:(id*)arg1 forAccessoryName:(id)arg2;
- (int)_getPublicKey:(id*)arg1 registeredWithHomeKit:(bool*)arg2 forAccessoryName:(id)arg3;
- (bool)_removeAccessoryKeyForName:(id)arg1;
- (int)_removeControllerKeyPair;
- (int)_removeControllerKeyPairForIdentifier:(id)arg1 leaveTombstone:(bool)arg2;
- (int)_removeKeychainItem:(id)arg1 leaveTombstone:(bool)arg2;
- (int)_savePeripheralIdentifier:(id)arg1 forAccessoryName:(id)arg2;
- (int)_savePublicKey:(id)arg1 forAccessoryName:(id)arg2;
- (int)_updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2;
- (id)activeControllerIdentifier;
- (bool)deleteAllPeripheralIdentifiers:(id*)arg1;
- (bool)deletePeripheralIdentifierForAccessoryName:(id)arg1 error:(id*)arg2;
- (bool)getAllAvailableControllerPublicKeys:(id*)arg1 secretKeys:(id*)arg2 userNames:(id*)arg3 error:(id*)arg4;
- (bool)getControllerPublicKey:(id*)arg1 secretKey:(id*)arg2 username:(id*)arg3 allowCreation:(bool)arg4 error:(id*)arg5;
- (bool)getCurrentiCloudIdentifier:(id*)arg1 controllerPairingIdentifier:(id*)arg2 error:(id*)arg3;
- (bool)getMetadataSecretKey:(id*)arg1 error:(id*)arg2;
- (id)getPeripherialIdentifiersAndAccessoryNames;
- (id)queue;
- (id)readPeripheralIdentifierForAccessoryName:(id)arg1 error:(id*)arg2;
- (id)readPublicKeyForAccessoryName:(id)arg1 registeredWithHomeKit:(bool*)arg2 error:(id*)arg3;
- (bool)registerAccessoryWithHomeKit:(id)arg1 error:(id*)arg2;
- (bool)removeAccessoryKeyForName:(id)arg1 error:(id*)arg2;
- (bool)removeAllAccessoryKeys:(id*)arg1;
- (bool)removeControllerKeyPairForIdentifier:(id)arg1 leaveTombstone:(bool)arg2 error:(id*)arg3;
- (bool)removeControllerKeyPairWithError:(id*)arg1;
- (bool)savePeripheralIdentifier:(id)arg1 forAccessoryName:(id)arg2 error:(id*)arg3;
- (bool)savePublicKey:(id)arg1 forAccessoryName:(id)arg2 error:(id*)arg3;
- (void)setActiveControllerIdentifier:(id)arg1;
- (void)setQueue:(id)arg1;
- (void)updateActiveControllerPairingIdentifier:(id)arg1;
- (bool)updateCurrentiCloudIdentifier:(id)arg1 controllerPairingIdentifier:(id)arg2 error:(id*)arg3;
- (bool)updatePeripheralIdentifier:(id)arg1 forAccessoryName:(id)arg2 error:(id*)arg3;

@end
