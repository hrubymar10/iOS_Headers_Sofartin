/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDAccessoryBrowser : NSObject <HMDAccessoryManagerDelegate, HMMessageReceiver> {
    HMDAccessoryManager *_accessoryManager;
    NSMutableSet *_browsingXPCConnections;
    unsigned long long _generationCounter;
    HMMessageDispatcher *_messageDispatcher;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
}

@property(assign,retain) HMDAccessoryManager * accessoryManager;
@property(assign,retain) NSMutableSet * browsingXPCConnections;
@property(assign,copy) NSString * debugDescription;
@property(assign,copy) NSString * description;
@property(assign,readwrite) unsigned long long generationCounter;
@property(assign,readonly) unsigned long long hash;
@property(assign,retain) HMMessageDispatcher * messageDispatcher;
@property(assign,readonly) NSObject<OS_dispatch_queue> * messageReceiveQueue;
@property(assign,readonly) NSUUID * messageTargetUUID;
@property(assign,readonly) Class superclass;
@property(assign,retain) NSUUID * uuid;
@property(assign,retain) NSObject<OS_dispatch_queue> * workQueue;

- (void).cxx_destruct;
- (void)_handleInvalidatedXPCConnection:(id)arg1;
- (void)_handleRequestFetchNewAccessories:(id)arg1;
- (void)_handleRequestSearchForNewAccessories:(id)arg1;
- (void)_registerForMessages;
- (void)_startDiscoveringAccessories;
- (void)_stopDiscoveringAccessories;
- (void)_stopSearchingWithXPCConnection:(id)arg1;
- (id)accessoryManager;
- (void)accessoryManager:(id)arg1 didFindNewAccessory:(id)arg2;
- (void)accessoryManager:(id)arg1 didRemoveNewAccessory:(id)arg2;
- (id)browsingXPCConnections;
- (void)dealloc;
- (unsigned long long)generationCounter;
- (id)initWithMessageDispatcher:(id)arg1 accessoryManager:(id)arg2;
- (id)messageDispatcher;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (void)setAccessoryManager:(id)arg1;
- (void)setBrowsingXPCConnections:(id)arg1;
- (void)setGenerationCounter:(unsigned long long)arg1;
- (void)setMessageDispatcher:(id)arg1;
- (void)setUuid:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (id)uuid;
- (id)workQueue;

@end
