/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
 */

@interface HMDCloudDataSyncManager : NSObject <APSConnectionDelegate, HMMessageReceiver> {
    bool _accountActive;
    NSObject<OS_dispatch_queue> *_callbackQueue;
    NSObject<OS_dispatch_queue> *_clientCallbackQueue;
    id _cloudDataDeletedNotificationHandler;
    HMDCloudDataSyncStateFilter *_cloudDataSyncStateFilter;
    bool _cloudHomeDataRecordExists;
    id _cloudMetadataDeletedNotificationHandler;
    bool _cloudMetadataRecordExists;
    NSData *_cloudServerTokenData;
    HMMessageDispatcher *_configSyncDispatcher;
    CKContainer *_container;
    id _controllerKeyAvailableNotificationHandler;
    NSObject<OS_dispatch_source> *_controllerKeyPollTimer;
    CKDatabase *_database;
    bool _decryptionFailed;
    id _fetchCompletionHandler;
    CKRecordID *_homeDataBlobRecordID;
    CKRecordZone *_homeDataBlobRecordZone;
    CKSubscription *_homeDataBlobSubscription;
    CKRecord *_homeDataRecord;
    HMDHomeManager *_homeManager;
    NSString *_lastHomeDataChangeTag;
    NSString *_lastMetadataChangeTag;
    CKRecordID *_metadataBlobRecordID;
    CKRecord *_metadataRecord;
    HMMessageDispatcher *_msgDispatcher;
    bool _needConflictResolution;
    NSMutableArray *_pendingFetchedRecords;
    NSObject<OS_dispatch_source> *_pollTimer;
    APSConnection *_pushConnection;
    NSUUID *_uuid;
    NSObject<OS_dispatch_queue> *_workQueue;
}

@property(assign,readwrite) bool accountActive;
@property(assign,retain) NSObject<OS_dispatch_queue> * callbackQueue;
@property(assign,retain) NSObject<OS_dispatch_queue> * clientCallbackQueue;
@property(assign,copy) id cloudDataDeletedNotificationHandler;
@property(assign,retain) HMDCloudDataSyncStateFilter * cloudDataSyncStateFilter;
@property(assign,readwrite) bool cloudHomeDataRecordExists;
@property(assign,copy) id cloudMetadataDeletedNotificationHandler;
@property(assign,readwrite) bool cloudMetadataRecordExists;
@property(assign,retain) NSData * cloudServerTokenData;
@property(assign,retain) HMMessageDispatcher * configSyncDispatcher;
@property(assign,retain) CKContainer * container;
@property(assign,copy) id controllerKeyAvailableNotificationHandler;
@property(assign,retain) NSObject<OS_dispatch_source> * controllerKeyPollTimer;
@property(assign,retain) CKDatabase * database;
@property(assign,copy) NSString * debugDescription;
@property(assign,readwrite) bool decryptionFailed;
@property(assign,copy) NSString * description;
@property(assign,copy) id fetchCompletionHandler;
@property(assign,readonly) unsigned long long hash;
@property(assign,retain) CKRecordID * homeDataBlobRecordID;
@property(assign,retain) CKRecordZone * homeDataBlobRecordZone;
@property(assign,retain) CKSubscription * homeDataBlobSubscription;
@property(assign,retain) CKRecord * homeDataRecord;
@property(assign,readwrite) HMDHomeManager * homeManager;
@property(assign,retain) NSString * lastHomeDataChangeTag;
@property(assign,retain) NSString * lastMetadataChangeTag;
@property(assign,readonly) NSObject<OS_dispatch_queue> * messageReceiveQueue;
@property(assign,readonly) NSUUID * messageTargetUUID;
@property(assign,retain) CKRecordID * metadataBlobRecordID;
@property(assign,retain) CKRecord * metadataRecord;
@property(assign,retain) HMMessageDispatcher * msgDispatcher;
@property(assign,readwrite) bool needConflictResolution;
@property(assign,retain) NSMutableArray * pendingFetchedRecords;
@property(assign,retain) NSObject<OS_dispatch_source> * pollTimer;
@property(assign,retain) APSConnection * pushConnection;
@property(assign,readonly) NSData * serverTokenData;
@property(assign,readonly) Class superclass;
@property(assign,retain) NSUUID * uuid;
@property(assign,retain) NSObject<OS_dispatch_queue> * workQueue;

- (void).cxx_destruct;
- (void)_accountIsActive;
- (id)_changeTokenFromData:(id)arg1;
- (void)_createZoneAndFetchChanges:(id)arg1;
- (void)_fetchExistingRecord:(id)arg1;
- (void)_fetchNewChangesWithCompletionHandler:(id)arg1;
- (void)_handleAccountStatus:(long long)arg1 completionHandler:(id)arg2 error:(id)arg3;
- (void)_handleChangedMetadataRecordWithEncodedData:(id)arg1;
- (void)_handleChangedRecordWithEncodedData:(id)arg1;
- (void)_handleControllerKeyAvailable;
- (void)_handleFetchCompletedWithError:(id)arg1 serverToken:(id)arg2 completionHandler:(id)arg3;
- (void)_handleKeychainSyncChanged:(id)arg1;
- (void)_handleKeychainSyncStateChanged:(bool)arg1;
- (bool)_isControllerKeyAvailable;
- (void)_registerForMessages;
- (void)_registerForPushNotifications;
- (void)_resetCloudDataAndDeleteMetadataForCurrentAccount:(bool)arg1 completionHandler:(id)arg2;
- (void)_resetHomeDataRecordState;
- (void)_resetMetadataRecordState;
- (void)_setupSubscription;
- (void)_startControllerKeyPollTimer;
- (void)_startFetchPollTimer;
- (void)_stopControllerKeyPollTimer;
- (void)_stopFetchPollTimer;
- (void)_updateCloudDataSyncFilterState:(bool)arg1;
- (void)_uploadHomeData:(id)arg1 metadata:(id)arg2 completionHandler:(id)arg3;
- (bool)accountActive;
- (id)callbackQueue;
- (id)clientCallbackQueue;
- (id)cloudDataDeletedNotificationHandler;
- (id)cloudDataSyncStateFilter;
- (bool)cloudHomeDataRecordExists;
- (id)cloudMetadataDeletedNotificationHandler;
- (bool)cloudMetadataRecordExists;
- (id)cloudServerTokenData;
- (id)configSyncDispatcher;
- (void)connection:(id)arg1 didReceiveIncomingMessage:(id)arg2;
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;
- (void)connection:(id)arg1 didReceiveToken:(id)arg2 forTopic:(id)arg3 identifier:(id)arg4;
- (id)container;
- (id)controllerKeyAvailableNotificationHandler;
- (id)controllerKeyPollTimer;
- (id)convertCKErrorToHMError:(id)arg1;
- (id)database;
- (void)dealloc;
- (bool)decryptionFailed;
- (id)fetchCompletionHandler;
- (void)fetchCurrentAccountStateWithCompletionHandler:(id)arg1;
- (id)homeDataBlobRecordID;
- (id)homeDataBlobRecordZone;
- (id)homeDataBlobSubscription;
- (id)homeDataRecord;
- (id)homeManager;
- (id)initWithCloudServerTokenData:(id)arg1 messageDispatcher:(id)arg2 cloudDataSyncStateFilter:(id)arg3 homeManager:(id)arg4 callbackQueue:(id)arg5;
- (id)lastHomeDataChangeTag;
- (id)lastMetadataChangeTag;
- (id)messageReceiveQueue;
- (id)messageTargetUUID;
- (id)metadataBlobRecordID;
- (id)metadataRecord;
- (id)msgDispatcher;
- (bool)needConflictResolution;
- (id)pendingFetchedRecords;
- (id)pollTimer;
- (id)pushConnection;
- (void)resetCloudDataAndDeleteMetadataForCurrentAccount:(bool)arg1 completionHandler:(id)arg2;
- (id)serverTokenData;
- (void)setAccountActive:(bool)arg1;
- (void)setCallbackQueue:(id)arg1;
- (void)setClientCallbackQueue:(id)arg1;
- (void)setCloudDataDeletedNotificationBlock:(id)arg1;
- (void)setCloudDataDeletedNotificationHandler:(id)arg1;
- (void)setCloudDataSyncStateFilter:(id)arg1;
- (void)setCloudHomeDataRecordExists:(bool)arg1;
- (void)setCloudMetadataDeletedNotificationBlock:(id)arg1;
- (void)setCloudMetadataDeletedNotificationHandler:(id)arg1;
- (void)setCloudMetadataRecordExists:(bool)arg1;
- (void)setCloudServerTokenData:(id)arg1;
- (void)setConfigSyncDispatcher:(id)arg1;
- (void)setContainer:(id)arg1;
- (void)setControllerKeyAvailableNotificationBlock:(id)arg1;
- (void)setControllerKeyAvailableNotificationHandler:(id)arg1;
- (void)setControllerKeyPollTimer:(id)arg1;
- (void)setDataAvailableFromCloudCompletionBlock:(id)arg1;
- (void)setDatabase:(id)arg1;
- (void)setDecryptionFailed:(bool)arg1;
- (void)setFetchCompletionHandler:(id)arg1;
- (void)setHomeDataBlobRecordID:(id)arg1;
- (void)setHomeDataBlobRecordZone:(id)arg1;
- (void)setHomeDataBlobSubscription:(id)arg1;
- (void)setHomeDataRecord:(id)arg1;
- (void)setHomeManager:(id)arg1;
- (void)setLastHomeDataChangeTag:(id)arg1;
- (void)setLastMetadataChangeTag:(id)arg1;
- (void)setMetadataBlobRecordID:(id)arg1;
- (void)setMetadataRecord:(id)arg1;
- (void)setMsgDispatcher:(id)arg1;
- (void)setNeedConflictResolution:(bool)arg1;
- (void)setPendingFetchedRecords:(id)arg1;
- (void)setPollTimer:(id)arg1;
- (void)setPushConnection:(id)arg1;
- (void)setUuid:(id)arg1;
- (void)setWorkQueue:(id)arg1;
- (void)updateAccountStatusChanged:(bool)arg1 completionHandler:(id)arg2;
- (void)uploadHomeData:(id)arg1 metadata:(id)arg2 completionHandler:(id)arg3;
- (id)uuid;
- (id)workQueue;

@end
