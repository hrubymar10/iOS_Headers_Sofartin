/* Generated by RuntimeBrowser.
 */

@protocol VKMapModelDelegate <NSObject>

@required

- (void)mapModel:(VKMapModel *)arg1 needsPanByOffset:(struct CGPoint { double x1; double x2; })arg2 relativeToScreenPoint:(struct CGPoint { double x1; double x2; })arg3 animated:(bool)arg4 duration:(double)arg5 completionHandler:(id)arg6;
- (VKOverlayPainter *)mapModel:(VKMapModel *)arg1 painterForOverlay:(id <VKOverlay>)arg2;
- (void)mapModel:(VKMapModel *)arg1 selectedLabelMarkerWillDisappear:(VKLabelMarker *)arg2;
- (void)mapModel:(VKMapModel *)arg1 willTransitionFrom:(long long)arg2 to:(long long)arg3 duration:(double)arg4;
- (void)mapModelDidBecomeFullyDrawn:(VKMapModel *)arg1 hasFailedTiles:(bool)arg2;
- (void)mapModelDidBecomePartiallyDrawn:(VKMapModel *)arg1;
- (void)mapModelDidFailLoadingTiles:(VKMapModel *)arg1 withError:(NSError *)arg2;
- (void)mapModelDidFinishLoadingTiles:(VKMapModel *)arg1;
- (void)mapModelDidStartLoadingTiles:(VKMapModel *)arg1;
- (void)mapModelDidUpdateMinMaxZoomLevel:(VKMapModel *)arg1;
- (bool)mapModelInNav:(VKMapModel *)arg1;
- (bool)mapModelInNavAtDefaultZoom:(VKMapModel *)arg1;
- (void)mapModelWillBecomFullyDrawn:(VKMapModel *)arg1;
- (double)mapModelZoomScale:(VKMapModel *)arg1;

@optional

- (void)mapModel:(VKMapModel *)arg1 didUpdateContainsOverlay:(bool)arg2;
- (void)mapModel:(VKMapModel *)arg1 didUpdateNavigationPuckSize:(float)arg2;

@end
