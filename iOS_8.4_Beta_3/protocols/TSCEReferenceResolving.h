/* Generated by RuntimeBrowser.
 */

@protocol TSCEReferenceResolving <NSObject>

@required

+ (struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })canonicalCellReferenceForReference:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1;
+ (struct TSUFormat { int (**x1)(); int x2; bool x3; union { struct { unsigned int x_1_2_1 : 16; unsigned int x_1_2_2 : 8; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; } x_4_1_1; struct { unsigned int x_2_2_1 : 8; } x_4_1_2; struct { unsigned int x_3_2_1 : 8; unsigned int x_3_2_2 : 8; unsigned int x_3_2_3 : 1; } x_4_1_3; struct { unsigned int x_4_2_1 : 1; unsigned int x_4_2_2 : 1; id x_4_2_3; } x_4_1_4; struct { unsigned int x_5_2_1 : 1; int x_5_2_2; int x_5_2_3; int x_5_2_4; } x_4_1_5; struct { id x_6_2_1; id x_6_2_2; unsigned int x_6_2_3; unsigned char x_6_2_4; } x_4_1_6; struct { double x_7_2_1; double x_7_2_2; double x_7_2_3; int x_7_2_4; unsigned int x_7_2_5 : 2; unsigned int x_7_2_6 : 2; } x_4_1_7; struct { int x_8_2_1; unsigned int x_8_2_2; id x_8_2_3; } x_4_1_8; } x4; })format:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 fromCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
+ (struct TSUFormat { int (**x1)(); int x2; bool x3; union { struct { unsigned int x_1_2_1 : 16; unsigned int x_1_2_2 : 8; unsigned int x_1_2_3 : 3; unsigned int x_1_2_4 : 1; unsigned int x_1_2_5 : 1; } x_4_1_1; struct { unsigned int x_2_2_1 : 8; } x_4_1_2; struct { unsigned int x_3_2_1 : 8; unsigned int x_3_2_2 : 8; unsigned int x_3_2_3 : 1; } x_4_1_3; struct { unsigned int x_4_2_1 : 1; unsigned int x_4_2_2 : 1; id x_4_2_3; } x_4_1_4; struct { unsigned int x_5_2_1 : 1; int x_5_2_2; int x_5_2_3; int x_5_2_4; } x_4_1_5; struct { id x_6_2_1; id x_6_2_2; unsigned int x_6_2_3; unsigned char x_6_2_4; } x_4_1_6; struct { double x_7_2_1; double x_7_2_2; double x_7_2_3; int x_7_2_4; unsigned int x_7_2_5 : 2; unsigned int x_7_2_6 : 2; } x_4_1_7; struct { int x_8_2_1; unsigned int x_8_2_2; id x_8_2_3; } x_4_1_8; } x4; })formatFromVector:(struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; })arg1 atIndex:(unsigned long long)arg2;
+ (int)getHidingAction:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1;
+ (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })getRange:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1;
+ (struct { struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; } x1; struct __CFUUID {} *x2; })getRangeReference:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1;
+ (struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })makeCellReferenceInSameTable:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 cellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
+ (struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; })makeReferenceVectorWithReference:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 rangeContext:(int)arg2 apparentRangePtr:(struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; }*)arg3;
+ (int)mergeReferences:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; }*)arg1 left:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg2 right:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg3;
+ (void)prefetchData:(struct TSCEReferenceValue { int (**x1)(); struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_2_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_2_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; struct shared_ptr<TSCEValue> { struct TSCEValue {} *x_4_1_1; struct shared_count { struct sp_counted_base {} *x_2_2_1; } x_4_1_2; } x4; bool x5; bool x6; unsigned char x7; bool x8; struct TSCEWarningReportingContext {} *x9; }*)arg1 fromVectorObject:(struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; }*)arg2 cellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg3;
+ (void)releaseTableReferenceVectorObject:(struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; }*)arg1;
+ (<TSCEResolverContainer> *)resolverContainerMatchingName:(NSString *)arg1 inDocumentRoot:(TSKDocumentRoot *)arg2;
+ (<TSCEReferenceResolving> *)resolverMatchingName:(NSString *)arg1 inDocumentRoot:(TSKDocumentRoot *)arg2 contextResolver:(id <TSCEReferenceResolving>)arg3;
+ (<TSCEReferenceResolving> *)resolverMatchingNameWithContextContainer:(NSString *)arg1 inDocumentRoot:(TSKDocumentRoot *)arg2 contextContainerName:(NSString *)arg3;
+ (void)retainTableReferenceVectorObject:(struct TSCETableReferenceVectorObject { struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_2_1; } x_1_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_1_1_2; struct { unsigned short x_3_2_1; unsigned char x_3_2_2; unsigned char x_3_2_3; } x_1_1_3; } x1; void *x2; struct TSCERangeCoordinate { struct { unsigned short x_1_2_1; unsigned char x_1_2_2; unsigned char x_1_2_3; } x_3_1_1; struct { unsigned short x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; } x_3_1_2; } x3; }*)arg1;
+ (struct TSCEValue { unsigned long long x1[80]; int x2; })scalarValue:(struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })arg1 fromCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2 permitAccessInsideMergeRegions:(bool)arg3 fetchRichTextAttributesIfPlainText:(bool)arg4;

- (struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; })UIDForIndex:(unsigned short)arg1 isRows:(bool)arg2;
- (TSUMutableUUIDSet *)UIDSetForIndexes:(NSIndexSet *)arg1 isRows:(bool)arg2;
- (TSUMutableUUIDSet *)UIDSetForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 isRows:(bool)arg2;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })UIDsForIndexes:(NSIndexSet *)arg1 isRows:(bool)arg2;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })UIDsForRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1 isRows:(bool)arg2;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })allColumnUIDs;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })allRowUIDs;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })apparentRangeForRange:(struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1 rangeContext:(int)arg2 isWholeTableRange:(bool)arg3;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })bodyRange;
- (NSString *)cellRangeName:(struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1 stickyBits:(unsigned char)arg2 isRangeWithFunction:(bool)arg3 quoteComponents:(bool)arg4 forceEscaping:(bool)arg5;
- (TSWPParagraphStyle *)cellTextStyle:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (bool)cellWasModifiedInThisRecalcCycle:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (unsigned char)columnIndexForColumnUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg1;
- (NSMutableIndexSet *)columnIndexesForUIDs:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg1;
- (struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; })columnUIDForColumnIndex:(unsigned char)arg1;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })columnUIDsForColumnIndexes:(NSIndexSet *)arg1;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })columnUIDsForColumnRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (struct __CFUUID { }*)conditionalStyleFormulaOwnerID;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })expandCellRangeToCoverMergedCells:(struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })arg1;
- (bool)hasCellID:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (bool)hasNamesInHeaders;
- (unsigned short)indexForUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg1 isRows:(bool)arg2;
- (NSMutableIndexSet *)indexesForUIDs:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg1 isRows:(bool)arg2;
- (struct TSCETableReferenceObject { struct ObjcSharedPtr<NSObject> { id x_1_1_1; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; struct { unsigned short x_3_1_1; unsigned char x_3_1_2; unsigned char x_3_1_3; } x3; })makeReference:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1 bottomRight:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg2;
- (unsigned long long)maxMergeFormulaIndex;
- (struct __CFUUID { }*)mergeOwnerID;
- (NSMutableIndexSet *)mutableIndexesForUIDSet:(TSUUUIDSet *)arg1 isRows:(bool)arg2 notFoundUIDs:(TSUMutableUUIDSet *)arg3;
- (TSCEFormulaRewrite_RelocatedMergeCells *)relocatedMergeCellsIntersectingInsertedIndexes:(NSIndexSet *)arg1 isRows:(bool)arg2;
- (TSCEFormulaRewrite_RelocatedMergeCells *)relocatedMergeCellsIntersectingRemovedIndexes:(NSIndexSet *)arg1 isRows:(bool)arg2;
- (void)resetDependenciesForCell:(struct { unsigned short x1; unsigned char x2; unsigned char x3; })arg1;
- (struct __CFUUID { }*)resolverID;
- (bool)resolverIsATable;
- (unsigned short)rowIndexForRowUID:(const struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; }*)arg1;
- (NSMutableIndexSet *)rowIndexesForUIDs:(const struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; }*)arg1;
- (struct UUIDData<TSP::UUIDData> { union { unsigned char x_1_1_1[16]; struct { unsigned char x_2_2_1; unsigned char x_2_2_2; unsigned char x_2_2_3; unsigned char x_2_2_4; unsigned char x_2_2_5; unsigned char x_2_2_6; unsigned char x_2_2_7; unsigned char x_2_2_8; unsigned char x_2_2_9; unsigned char x_2_2_10; unsigned char x_2_2_11; unsigned char x_2_2_12; unsigned char x_2_2_13; unsigned char x_2_2_14; unsigned char x_2_2_15; unsigned char x_2_2_16; } x_1_1_2; struct { unsigned long long x_3_2_1; unsigned long long x_3_2_2; } x_1_1_3; } x1; })rowUIDForRowIndex:(unsigned short)arg1;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })rowUIDsForRowIndexes:(NSIndexSet *)arg1;
- (struct vector<TSU::UUIDData<TSP::UUIDData>, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x1; struct UUIDData<TSP::UUIDData> {} *x2; struct __compressed_pair<TSU::UUIDData<TSP::UUIDData> *, std::__1::allocator<TSU::UUIDData<TSP::UUIDData> > > { struct UUIDData<TSP::UUIDData> {} *x_3_1_1; } x3; })rowUIDsForRowRange:(struct _NSRange { unsigned long long x1; unsigned long long x2; })arg1;
- (NSString *)sheetName;
- (NSString *)tableName;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })tableRange;
- (struct TSCERangeCoordinate { struct { unsigned short x_1_1_1; unsigned char x_1_1_2; unsigned char x_1_1_3; } x1; struct { unsigned short x_2_1_1; unsigned char x_2_1_2; unsigned char x_2_1_3; } x2; })unmergeIntoRegion:(TSCEUidTract *)arg1;

@end
